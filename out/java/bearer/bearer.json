{"warning":[{"cwe_ids":["209"],"id":"java_lang_information_leakage","title":"Leakage of sensitive information in exception message","description":"## Description\n\nPrinting a stack trace to the default output is risky because it may contain sensitive information such as the technical details of your application or environment (which in turn could expose your application to path traversal attacks, for example), or worse, user-specific data.\n\n## Remediations\n\n❌ Avoid printing the full stack trace\n\n✅ Less is more! Only log the minimum required details in error messages\n\n## Resources\n\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_information_leakage","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/Main.java","filename":"Main.java","source":{"start":47,"end":47,"column":{"start":6,"end":26}},"sink":{"start":47,"end":47,"column":{"start":6,"end":26},"content":"ex.printStackTrace()"},"parent_line_number":47,"snippet":"ex.printStackTrace()","fingerprint":"913aab8cb77a8ee6e31c915a33982b81_0","old_fingerprint":"937567741579ca7364e2a0c24666765d_0","code_extract":"\t\t\t\t\tex.printStackTrace();"},{"cwe_ids":["209"],"id":"java_lang_information_leakage","title":"Leakage of sensitive information in exception message","description":"## Description\n\nPrinting a stack trace to the default output is risky because it may contain sensitive information such as the technical details of your application or environment (which in turn could expose your application to path traversal attacks, for example), or worse, user-specific data.\n\n## Remediations\n\n❌ Avoid printing the full stack trace\n\n✅ Less is more! Only log the minimum required details in error messages\n\n## Resources\n\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_information_leakage","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/antbuild/testcases/CWE89_SQL_Injection/s01/Main.java","filename":"antbuild/testcases/CWE89_SQL_Injection/s01/Main.java","source":{"start":47,"end":47,"column":{"start":6,"end":26}},"sink":{"start":47,"end":47,"column":{"start":6,"end":26},"content":"ex.printStackTrace()"},"parent_line_number":47,"snippet":"ex.printStackTrace()","fingerprint":"a2f9e0422d7a9ed7615c4017d87f9477_0","old_fingerprint":"96dc20209281054a385013e9f74a4eaf_1","code_extract":"\t\t\t\t\tex.printStackTrace();"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_01.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"80031c8ca7dde43996646a396c2b0a1c_0","old_fingerprint":"0d50939ae450f8b133e619044099a5a4_103","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":254,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_01.java","source":{"start":254,"end":254,"column":{"start":26,"end":63}},"sink":{"start":254,"end":254,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":254,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"80031c8ca7dde43996646a396c2b0a1c_1","old_fingerprint":"0d50939ae450f8b133e619044099a5a4_286","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"785ab75848a7aa79efaee0a61906e738_0","old_fingerprint":"c6bb505ff9ccd6ed8f516adb223a4245_66","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"785ab75848a7aa79efaee0a61906e738_1","old_fingerprint":"c6bb505ff9ccd6ed8f516adb223a4245_362","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_02.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"785ab75848a7aa79efaee0a61906e738_2","old_fingerprint":"c6bb505ff9ccd6ed8f516adb223a4245_438","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"feecb59c6ded9b3c568e86a228c4bd21_0","old_fingerprint":"9bc32a3bea9399ecbd662dcf87445238_68","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"feecb59c6ded9b3c568e86a228c4bd21_1","old_fingerprint":"9bc32a3bea9399ecbd662dcf87445238_359","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_03.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"feecb59c6ded9b3c568e86a228c4bd21_2","old_fingerprint":"9bc32a3bea9399ecbd662dcf87445238_437","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"47d2cdf7fd24f921c7b3eaf629ac5cf8_0","old_fingerprint":"fd4423fda3a976add0c280b9563296b6_162","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":348,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","source":{"start":348,"end":348,"column":{"start":30,"end":67}},"sink":{"start":348,"end":348,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":348,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"47d2cdf7fd24f921c7b3eaf629ac5cf8_1","old_fingerprint":"fd4423fda3a976add0c280b9563296b6_370","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":492,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_04.java","source":{"start":492,"end":492,"column":{"start":30,"end":67}},"sink":{"start":492,"end":492,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":492,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"47d2cdf7fd24f921c7b3eaf629ac5cf8_2","old_fingerprint":"fd4423fda3a976add0c280b9563296b6_445","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4e62580122b499af58454b2b0247d397_0","old_fingerprint":"1e38e60aad186bf73f8f03c25a6ceccb_166","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":349,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","source":{"start":349,"end":349,"column":{"start":30,"end":67}},"sink":{"start":349,"end":349,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":349,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4e62580122b499af58454b2b0247d397_1","old_fingerprint":"1e38e60aad186bf73f8f03c25a6ceccb_371","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":493,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_05.java","source":{"start":493,"end":493,"column":{"start":30,"end":67}},"sink":{"start":493,"end":493,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":493,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4e62580122b499af58454b2b0247d397_2","old_fingerprint":"1e38e60aad186bf73f8f03c25a6ceccb_446","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"605e05f637fa72a807a80d639e1f9354_0","old_fingerprint":"1fbf19128df4cd95184317acfcca964f_152","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":346,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","source":{"start":346,"end":346,"column":{"start":30,"end":67}},"sink":{"start":346,"end":346,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":346,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"605e05f637fa72a807a80d639e1f9354_1","old_fingerprint":"1fbf19128df4cd95184317acfcca964f_367","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":490,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_06.java","source":{"start":490,"end":490,"column":{"start":30,"end":67}},"sink":{"start":490,"end":490,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":490,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"605e05f637fa72a807a80d639e1f9354_2","old_fingerprint":"1fbf19128df4cd95184317acfcca964f_443","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"33513c0878455ba5e336e577f2d70234_0","old_fingerprint":"9e4aa03bd76bdd99d7945ea9ed09d7c8_154","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":346,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","source":{"start":346,"end":346,"column":{"start":30,"end":67}},"sink":{"start":346,"end":346,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":346,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"33513c0878455ba5e336e577f2d70234_1","old_fingerprint":"9e4aa03bd76bdd99d7945ea9ed09d7c8_368","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":490,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_07.java","source":{"start":490,"end":490,"column":{"start":30,"end":67}},"sink":{"start":490,"end":490,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":490,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"33513c0878455ba5e336e577f2d70234_2","old_fingerprint":"9e4aa03bd76bdd99d7945ea9ed09d7c8_444","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":62,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","source":{"start":62,"end":62,"column":{"start":30,"end":67}},"sink":{"start":62,"end":62,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":62,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"79939f2dd790e1bba20e84f9b9742a49_0","old_fingerprint":"550a264be13886534e370168b9f1dd9f_173","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":354,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","source":{"start":354,"end":354,"column":{"start":30,"end":67}},"sink":{"start":354,"end":354,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":354,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"79939f2dd790e1bba20e84f9b9742a49_1","old_fingerprint":"550a264be13886534e370168b9f1dd9f_373","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":498,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_08.java","source":{"start":498,"end":498,"column":{"start":30,"end":67}},"sink":{"start":498,"end":498,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":498,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"79939f2dd790e1bba20e84f9b9742a49_2","old_fingerprint":"550a264be13886534e370168b9f1dd9f_448","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"9ac012722d4b8da08e6938dafde7f752_0","old_fingerprint":"3a400b9c2d684340f837852e638b2c7c_71","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"9ac012722d4b8da08e6938dafde7f752_1","old_fingerprint":"3a400b9c2d684340f837852e638b2c7c_364","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_09.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"9ac012722d4b8da08e6938dafde7f752_2","old_fingerprint":"3a400b9c2d684340f837852e638b2c7c_435","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba69b9cdbe1e1047a76476eb62c1ad9c_0","old_fingerprint":"99ae5bae6fc5dd10043322ad69779b2b_74","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba69b9cdbe1e1047a76476eb62c1ad9c_1","old_fingerprint":"99ae5bae6fc5dd10043322ad69779b2b_363","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_10.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba69b9cdbe1e1047a76476eb62c1ad9c_2","old_fingerprint":"99ae5bae6fc5dd10043322ad69779b2b_439","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6676a3c9b6dd1ed1c58d96ea8c06a4b7_0","old_fingerprint":"f1c3b1daebfd0b42e35249d0eb8ff66c_75","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":342,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","source":{"start":342,"end":342,"column":{"start":30,"end":67}},"sink":{"start":342,"end":342,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":342,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6676a3c9b6dd1ed1c58d96ea8c06a4b7_1","old_fingerprint":"f1c3b1daebfd0b42e35249d0eb8ff66c_365","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":486,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_11.java","source":{"start":486,"end":486,"column":{"start":30,"end":67}},"sink":{"start":486,"end":486,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":486,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6676a3c9b6dd1ed1c58d96ea8c06a4b7_2","old_fingerprint":"f1c3b1daebfd0b42e35249d0eb8ff66c_441","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71c7f8cdf317b6a50957ce78877a9a90_0","old_fingerprint":"47c96f74ae363a891f639fe0b9d68c90_61","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":389,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","source":{"start":389,"end":389,"column":{"start":30,"end":67}},"sink":{"start":389,"end":389,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":389,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71c7f8cdf317b6a50957ce78877a9a90_1","old_fingerprint":"47c96f74ae363a891f639fe0b9d68c90_379","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":456,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_12.java","source":{"start":456,"end":456,"column":{"start":30,"end":67}},"sink":{"start":456,"end":456,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":456,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71c7f8cdf317b6a50957ce78877a9a90_2","old_fingerprint":"47c96f74ae363a891f639fe0b9d68c90_411","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6800167bb31bd4a945553d1e52f203ba_0","old_fingerprint":"f06723b3595d0b9af4aeae2f57d547e8_60","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6800167bb31bd4a945553d1e52f203ba_1","old_fingerprint":"f06723b3595d0b9af4aeae2f57d547e8_361","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_13.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6800167bb31bd4a945553d1e52f203ba_2","old_fingerprint":"f06723b3595d0b9af4aeae2f57d547e8_440","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"09269f285553c7cdd570e5edc5b6e600_0","old_fingerprint":"fbfae99020ef7d8ccf1984c6ad7f95b0_83","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":341,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","source":{"start":341,"end":341,"column":{"start":30,"end":67}},"sink":{"start":341,"end":341,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":341,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"09269f285553c7cdd570e5edc5b6e600_1","old_fingerprint":"fbfae99020ef7d8ccf1984c6ad7f95b0_360","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":485,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_14.java","source":{"start":485,"end":485,"column":{"start":30,"end":67}},"sink":{"start":485,"end":485,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":485,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"09269f285553c7cdd570e5edc5b6e600_2","old_fingerprint":"fbfae99020ef7d8ccf1984c6ad7f95b0_436","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","source":{"start":51,"end":51,"column":{"start":30,"end":67}},"sink":{"start":51,"end":51,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"de0772657846aad87459ea6d74ab2c8a_0","old_fingerprint":"17bd5f347a3e4a382aa4428f99b58f32_126","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":365,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","source":{"start":365,"end":365,"column":{"start":30,"end":67}},"sink":{"start":365,"end":365,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":365,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"de0772657846aad87459ea6d74ab2c8a_1","old_fingerprint":"17bd5f347a3e4a382aa4428f99b58f32_377","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":510,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_15.java","source":{"start":510,"end":510,"column":{"start":30,"end":67}},"sink":{"start":510,"end":510,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":510,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"de0772657846aad87459ea6d74ab2c8a_2","old_fingerprint":"17bd5f347a3e4a382aa4428f99b58f32_449","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_16.java","source":{"start":50,"end":50,"column":{"start":30,"end":67}},"sink":{"start":50,"end":50,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5ce9197e3dd55f8bc47e9765e76313b_0","old_fingerprint":"c96eb6c5cac291750e1ae4395ca0b1f6_107","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":258,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_16.java","source":{"start":258,"end":258,"column":{"start":30,"end":67}},"sink":{"start":258,"end":258,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":258,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5ce9197e3dd55f8bc47e9765e76313b_1","old_fingerprint":"c96eb6c5cac291750e1ae4395ca0b1f6_288","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":55,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_17.java","source":{"start":55,"end":55,"column":{"start":26,"end":63}},"sink":{"start":55,"end":55,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":55,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"73b3d17e08372444a1d389dccc90b47a_0","old_fingerprint":"d6d7d655c422a36838746b514db7c1cf_159","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":257,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_17.java","source":{"start":257,"end":257,"column":{"start":26,"end":63}},"sink":{"start":257,"end":257,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":257,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"73b3d17e08372444a1d389dccc90b47a_1","old_fingerprint":"d6d7d655c422a36838746b514db7c1cf_287","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":53,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","source":{"start":53,"end":53,"column":{"start":26,"end":63}},"sink":{"start":53,"end":53,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":53,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097988676b23ced6e53826d827cfba90_0","old_fingerprint":"ac4761023e945cb8c3ba2cf5bbfa1eef_143","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":204,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","source":{"start":204,"end":204,"column":{"start":26,"end":63}},"sink":{"start":204,"end":204,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":204,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097988676b23ced6e53826d827cfba90_1","old_fingerprint":"ac4761023e945cb8c3ba2cf5bbfa1eef_259","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":351,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_21.java","source":{"start":351,"end":351,"column":{"start":26,"end":63}},"sink":{"start":351,"end":351,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":351,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097988676b23ced6e53826d827cfba90_2","old_fingerprint":"ac4761023e945cb8c3ba2cf5bbfa1eef_372","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","source":{"start":51,"end":51,"column":{"start":26,"end":63}},"sink":{"start":51,"end":51,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0731fa2c8ead38c4bba97c8233748495_0","old_fingerprint":"6a48a2670ed9b2350424cf28fc588c14_120","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":140,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","source":{"start":140,"end":140,"column":{"start":26,"end":63}},"sink":{"start":140,"end":140,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":140,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0731fa2c8ead38c4bba97c8233748495_1","old_fingerprint":"6a48a2670ed9b2350424cf28fc588c14_220","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":216,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java","source":{"start":216,"end":216,"column":{"start":26,"end":63}},"sink":{"start":216,"end":216,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":216,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0731fa2c8ead38c4bba97c8233748495_2","old_fingerprint":"6a48a2670ed9b2350424cf28fc588c14_262","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_31.java","source":{"start":52,"end":52,"column":{"start":30,"end":67}},"sink":{"start":52,"end":52,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"084894466cff924f201d8121ff150387_0","old_fingerprint":"b6cdedfac4e256c18f6c5cd2611bc17b_136","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":272,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_31.java","source":{"start":272,"end":272,"column":{"start":30,"end":67}},"sink":{"start":272,"end":272,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":272,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"084894466cff924f201d8121ff150387_1","old_fingerprint":"b6cdedfac4e256c18f6c5cd2611bc17b_293","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":112,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_41.java","source":{"start":112,"end":112,"column":{"start":26,"end":63}},"sink":{"start":112,"end":112,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":112,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a60e989bb677ce58331fe3ee39d8f9dd_0","old_fingerprint":"e86aa5a278b4090b948444b93ed23c81_182","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":329,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_41.java","source":{"start":329,"end":329,"column":{"start":26,"end":63}},"sink":{"start":329,"end":329,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":329,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a60e989bb677ce58331fe3ee39d8f9dd_1","old_fingerprint":"e86aa5a278b4090b948444b93ed23c81_339","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_42.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b53d6e48cb7e7e052faaae56a7b277ee_0","old_fingerprint":"51b95a13a8af8509f8ae091e93c2ac86_106","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":262,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_42.java","source":{"start":262,"end":262,"column":{"start":26,"end":63}},"sink":{"start":262,"end":262,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":262,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b53d6e48cb7e7e052faaae56a7b277ee_1","old_fingerprint":"51b95a13a8af8509f8ae091e93c2ac86_292","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":117,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_45.java","source":{"start":117,"end":117,"column":{"start":26,"end":63}},"sink":{"start":117,"end":117,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":117,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6846411147860e3bfbb217abf09f439d_0","old_fingerprint":"9258b7d7a08e7562135b8069b928f5ee_184","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":338,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_45.java","source":{"start":338,"end":338,"column":{"start":26,"end":63}},"sink":{"start":338,"end":338,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":338,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6846411147860e3bfbb217abf09f439d_1","old_fingerprint":"9258b7d7a08e7562135b8069b928f5ee_356","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"93f5a9f4c121bac69ea1caa322778e0f_0","old_fingerprint":"a40564a399fa2285df761e175ce581fb_31","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"93f5a9f4c121bac69ea1caa322778e0f_1","old_fingerprint":"a40564a399fa2285df761e175ce581fb_211","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"494bd78a063394d6d430c5b6705adf21_0","old_fingerprint":"7884fd3fb4034395fb4bfedf3c41696b_6","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"494bd78a063394d6d430c5b6705adf21_1","old_fingerprint":"7884fd3fb4034395fb4bfedf3c41696b_196","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d3ff6892e23ba57b5e6bd5a881985e3e_0","old_fingerprint":"96f762cb81f3dfaef67559b201e1d2f6_7","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d3ff6892e23ba57b5e6bd5a881985e3e_1","old_fingerprint":"96f762cb81f3dfaef67559b201e1d2f6_209","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7ab8027437d8e1ceeb94ff9085dd4fad_0","old_fingerprint":"68ce766c27b8e728452aa5cdbda5d621_28","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7ab8027437d8e1ceeb94ff9085dd4fad_1","old_fingerprint":"68ce766c27b8e728452aa5cdbda5d621_208","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_61b.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"674235f38c953e5d15cb775ae7d60ffc_0","old_fingerprint":"39d852a2eba05030b654fdd738da7050_10","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":133,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_61b.java","source":{"start":133,"end":133,"column":{"start":26,"end":63}},"sink":{"start":133,"end":133,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":133,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"674235f38c953e5d15cb775ae7d60ffc_1","old_fingerprint":"39d852a2eba05030b654fdd738da7050_185","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5168e77a211c2a88cbb47112ae379161_0","old_fingerprint":"575eabcc0326146287aeaca44ebbd885_11","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":143,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java","source":{"start":143,"end":143,"column":{"start":26,"end":63}},"sink":{"start":143,"end":143,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":143,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5168e77a211c2a88cbb47112ae379161_1","old_fingerprint":"575eabcc0326146287aeaca44ebbd885_233","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java","source":{"start":52,"end":52,"column":{"start":26,"end":63}},"sink":{"start":52,"end":52,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"669b5f7a7c9b3364befddf30c1013b01_0","old_fingerprint":"cfcc8cc91a3a4d742d88d12eda545baa_132","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"669b5f7a7c9b3364befddf30c1013b01_1","old_fingerprint":"cfcc8cc91a3a4d742d88d12eda545baa_249","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5df9186a49a1250cdf03a832de61c77_0","old_fingerprint":"b41bec484e484fd6f00333a444e96316_54","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":138,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java","source":{"start":138,"end":138,"column":{"start":26,"end":63}},"sink":{"start":138,"end":138,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":138,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5df9186a49a1250cdf03a832de61c77_1","old_fingerprint":"b41bec484e484fd6f00333a444e96316_192","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"571d8744b8ddad7c403069bc908a1bbe_0","old_fingerprint":"287755c300976492baa33a569eeae467_13","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"571d8744b8ddad7c403069bc908a1bbe_1","old_fingerprint":"287755c300976492baa33a569eeae467_202","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a3bb6547db08cabaf6355c7315db46ff_0","old_fingerprint":"7862776dd960601074f5581caa913571_52","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a3bb6547db08cabaf6355c7315db46ff_1","old_fingerprint":"7862776dd960601074f5581caa913571_251","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"73deb024f03da223684e63fa9499e52e_0","old_fingerprint":"585b7d7e1c74bd7ea32bfb62a1f5c790_42","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"73deb024f03da223684e63fa9499e52e_1","old_fingerprint":"585b7d7e1c74bd7ea32bfb62a1f5c790_245","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8f9d42d929659cee52d3b906ae92c4fb_0","old_fingerprint":"3792fef074f87c5a243846be0753faaf_43","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8f9d42d929659cee52d3b906ae92c4fb_1","old_fingerprint":"3792fef074f87c5a243846be0753faaf_239","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7473ee703c17d81b3646c2b1d78b4abe_0","old_fingerprint":"abeebdbad45bf9da6f725147cdbc9cd9_113","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java","source":{"start":226,"end":226,"column":{"start":26,"end":63}},"sink":{"start":226,"end":226,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7473ee703c17d81b3646c2b1d78b4abe_1","old_fingerprint":"abeebdbad45bf9da6f725147cdbc9cd9_269","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c4afec6814e95a87aec7a65c8c36b4be_0","old_fingerprint":"da5a51fcae2c0b4c0bdcab147cddd41a_19","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":141,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java","source":{"start":141,"end":141,"column":{"start":26,"end":63}},"sink":{"start":141,"end":141,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":141,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c4afec6814e95a87aec7a65c8c36b4be_1","old_fingerprint":"da5a51fcae2c0b4c0bdcab147cddd41a_226","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_01.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"91383db58b55412f1afa3f7a62d478bf_0","old_fingerprint":"3d1cec0a336d023d9d64046f7e3c3ace_104","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":254,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_01.java","source":{"start":254,"end":254,"column":{"start":26,"end":63}},"sink":{"start":254,"end":254,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":254,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"91383db58b55412f1afa3f7a62d478bf_1","old_fingerprint":"3d1cec0a336d023d9d64046f7e3c3ace_285","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8343affef4215a4d8a9d82d485dd0f94_0","old_fingerprint":"4b5e4aef790e2bfb5c6400f153504384_92","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8343affef4215a4d8a9d82d485dd0f94_1","old_fingerprint":"4b5e4aef790e2bfb5c6400f153504384_344","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_02.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8343affef4215a4d8a9d82d485dd0f94_2","old_fingerprint":"4b5e4aef790e2bfb5c6400f153504384_424","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"809ca672e379bd080aa25f3b5b7df726_0","old_fingerprint":"b16dea4c772a39b32849fad318e56944_95","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"809ca672e379bd080aa25f3b5b7df726_1","old_fingerprint":"b16dea4c772a39b32849fad318e56944_343","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_03.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"809ca672e379bd080aa25f3b5b7df726_2","old_fingerprint":"b16dea4c772a39b32849fad318e56944_425","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"213b55a4ef3138f8efece769a9634493_0","old_fingerprint":"8809e22db19b243bd4b52c4df1fab3d9_165","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":339,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","source":{"start":339,"end":339,"column":{"start":30,"end":67}},"sink":{"start":339,"end":339,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":339,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"213b55a4ef3138f8efece769a9634493_1","old_fingerprint":"8809e22db19b243bd4b52c4df1fab3d9_357","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":483,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_04.java","source":{"start":483,"end":483,"column":{"start":30,"end":67}},"sink":{"start":483,"end":483,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":483,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"213b55a4ef3138f8efece769a9634493_2","old_fingerprint":"8809e22db19b243bd4b52c4df1fab3d9_433","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2afe4fcc64f7f6bb747ecee582b1b22d_0","old_fingerprint":"02e08998ca73e5553bd0c9fec1b71e76_161","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":340,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","source":{"start":340,"end":340,"column":{"start":30,"end":67}},"sink":{"start":340,"end":340,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":340,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2afe4fcc64f7f6bb747ecee582b1b22d_1","old_fingerprint":"02e08998ca73e5553bd0c9fec1b71e76_358","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":484,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_05.java","source":{"start":484,"end":484,"column":{"start":30,"end":67}},"sink":{"start":484,"end":484,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":484,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2afe4fcc64f7f6bb747ecee582b1b22d_2","old_fingerprint":"02e08998ca73e5553bd0c9fec1b71e76_434","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"380d9f3509a0c3d6ebb09d4968a8f66f_0","old_fingerprint":"fb0a29141b74d3d542c22299cf078023_150","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":337,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","source":{"start":337,"end":337,"column":{"start":30,"end":67}},"sink":{"start":337,"end":337,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":337,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"380d9f3509a0c3d6ebb09d4968a8f66f_1","old_fingerprint":"fb0a29141b74d3d542c22299cf078023_351","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":481,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_06.java","source":{"start":481,"end":481,"column":{"start":30,"end":67}},"sink":{"start":481,"end":481,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":481,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"380d9f3509a0c3d6ebb09d4968a8f66f_2","old_fingerprint":"fb0a29141b74d3d542c22299cf078023_431","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0ef02c005ee15c0699e30293f265422a_0","old_fingerprint":"9a18c9c89b4dce48cc828724d26a06a2_146","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":337,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","source":{"start":337,"end":337,"column":{"start":30,"end":67}},"sink":{"start":337,"end":337,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":337,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0ef02c005ee15c0699e30293f265422a_1","old_fingerprint":"9a18c9c89b4dce48cc828724d26a06a2_352","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":481,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_07.java","source":{"start":481,"end":481,"column":{"start":30,"end":67}},"sink":{"start":481,"end":481,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":481,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0ef02c005ee15c0699e30293f265422a_2","old_fingerprint":"9a18c9c89b4dce48cc828724d26a06a2_432","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":62,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","source":{"start":62,"end":62,"column":{"start":30,"end":67}},"sink":{"start":62,"end":62,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":62,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f6f818fce34b2713f4e2e8c2b0989446_0","old_fingerprint":"5f6659b5fa304594b5dedc42874bf6c7_172","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":345,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","source":{"start":345,"end":345,"column":{"start":30,"end":67}},"sink":{"start":345,"end":345,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":345,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f6f818fce34b2713f4e2e8c2b0989446_1","old_fingerprint":"5f6659b5fa304594b5dedc42874bf6c7_366","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":489,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_08.java","source":{"start":489,"end":489,"column":{"start":30,"end":67}},"sink":{"start":489,"end":489,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":489,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f6f818fce34b2713f4e2e8c2b0989446_2","old_fingerprint":"5f6659b5fa304594b5dedc42874bf6c7_442","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3a6b9887ae5b6fde38951200afd8e39a_0","old_fingerprint":"5758843724db31ecc03d26e014407a07_86","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3a6b9887ae5b6fde38951200afd8e39a_1","old_fingerprint":"5758843724db31ecc03d26e014407a07_345","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_09.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3a6b9887ae5b6fde38951200afd8e39a_2","old_fingerprint":"5758843724db31ecc03d26e014407a07_427","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"30cf7a88535e4b93b761448983598b00_0","old_fingerprint":"74dbde5c650101152b681759f5b759ba_85","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"30cf7a88535e4b93b761448983598b00_1","old_fingerprint":"74dbde5c650101152b681759f5b759ba_346","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_10.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"30cf7a88535e4b93b761448983598b00_2","old_fingerprint":"74dbde5c650101152b681759f5b759ba_429","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"133477d872841bd2ed2c92485332c1b5_0","old_fingerprint":"94a6f297bfb73e3219549c247d356513_84","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":333,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","source":{"start":333,"end":333,"column":{"start":30,"end":67}},"sink":{"start":333,"end":333,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":333,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"133477d872841bd2ed2c92485332c1b5_1","old_fingerprint":"94a6f297bfb73e3219549c247d356513_348","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":477,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_11.java","source":{"start":477,"end":477,"column":{"start":30,"end":67}},"sink":{"start":477,"end":477,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":477,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"133477d872841bd2ed2c92485332c1b5_2","old_fingerprint":"94a6f297bfb73e3219549c247d356513_430","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2aa96e4fd7674c4f326f36ca638ac1ce_0","old_fingerprint":"11f9ad36c2acce3d83e5d07d821496ff_82","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":383,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","source":{"start":383,"end":383,"column":{"start":30,"end":67}},"sink":{"start":383,"end":383,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":383,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2aa96e4fd7674c4f326f36ca638ac1ce_1","old_fingerprint":"11f9ad36c2acce3d83e5d07d821496ff_378","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":450,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_12.java","source":{"start":450,"end":450,"column":{"start":30,"end":67}},"sink":{"start":450,"end":450,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":450,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2aa96e4fd7674c4f326f36ca638ac1ce_2","old_fingerprint":"11f9ad36c2acce3d83e5d07d821496ff_396","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"351b5a8d463a6ece694905c6ab41478e_0","old_fingerprint":"33938882df32c09a09a385d16d7813ad_79","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"351b5a8d463a6ece694905c6ab41478e_1","old_fingerprint":"33938882df32c09a09a385d16d7813ad_347","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_13.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"351b5a8d463a6ece694905c6ab41478e_2","old_fingerprint":"33938882df32c09a09a385d16d7813ad_426","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"535a59099dec1e640c3d6366dae3acd8_0","old_fingerprint":"89b3dbf23ec5af445183e12fb4089250_76","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":332,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","source":{"start":332,"end":332,"column":{"start":30,"end":67}},"sink":{"start":332,"end":332,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":332,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"535a59099dec1e640c3d6366dae3acd8_1","old_fingerprint":"89b3dbf23ec5af445183e12fb4089250_342","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":476,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_14.java","source":{"start":476,"end":476,"column":{"start":30,"end":67}},"sink":{"start":476,"end":476,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":476,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"535a59099dec1e640c3d6366dae3acd8_2","old_fingerprint":"89b3dbf23ec5af445183e12fb4089250_428","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","source":{"start":51,"end":51,"column":{"start":30,"end":67}},"sink":{"start":51,"end":51,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"479c26c4c1ef152cd881f448e445d999_0","old_fingerprint":"fe3e9344bd4ac76362536358cac6cd29_128","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":356,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","source":{"start":356,"end":356,"column":{"start":30,"end":67}},"sink":{"start":356,"end":356,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":356,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"479c26c4c1ef152cd881f448e445d999_1","old_fingerprint":"fe3e9344bd4ac76362536358cac6cd29_374","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":498,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_15.java","source":{"start":498,"end":498,"column":{"start":30,"end":67}},"sink":{"start":498,"end":498,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":498,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"479c26c4c1ef152cd881f448e445d999_2","old_fingerprint":"fe3e9344bd4ac76362536358cac6cd29_447","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_16.java","source":{"start":50,"end":50,"column":{"start":30,"end":67}},"sink":{"start":50,"end":50,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8172798d8fd2d8e6a31e77673f05a581_0","old_fingerprint":"5fbf7a86789bd5ed8760a4d39aad3b37_115","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":252,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_16.java","source":{"start":252,"end":252,"column":{"start":30,"end":67}},"sink":{"start":252,"end":252,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":252,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8172798d8fd2d8e6a31e77673f05a581_1","old_fingerprint":"5fbf7a86789bd5ed8760a4d39aad3b37_284","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":55,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_17.java","source":{"start":55,"end":55,"column":{"start":26,"end":63}},"sink":{"start":55,"end":55,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":55,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f936d422bd63d1c9fbebb834b202f684_0","old_fingerprint":"77462c04fcec72832db96728dfaf3cb0_156","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":251,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_17.java","source":{"start":251,"end":251,"column":{"start":26,"end":63}},"sink":{"start":251,"end":251,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":251,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f936d422bd63d1c9fbebb834b202f684_1","old_fingerprint":"77462c04fcec72832db96728dfaf3cb0_283","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":53,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","source":{"start":53,"end":53,"column":{"start":26,"end":63}},"sink":{"start":53,"end":53,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":53,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"16094238eabeadace86f473c2b3ccf7f_0","old_fingerprint":"4a260c69efb9cbacb79ea83742722261_140","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":201,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","source":{"start":201,"end":201,"column":{"start":26,"end":63}},"sink":{"start":201,"end":201,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":201,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"16094238eabeadace86f473c2b3ccf7f_1","old_fingerprint":"4a260c69efb9cbacb79ea83742722261_258","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":348,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_21.java","source":{"start":348,"end":348,"column":{"start":26,"end":63}},"sink":{"start":348,"end":348,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":348,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"16094238eabeadace86f473c2b3ccf7f_2","old_fingerprint":"4a260c69efb9cbacb79ea83742722261_369","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","source":{"start":51,"end":51,"column":{"start":26,"end":63}},"sink":{"start":51,"end":51,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b10dc168ddb1d9fab8cf139cd11d5b85_0","old_fingerprint":"ef66dbac55ba54db5e8dd9739a1809d6_124","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":140,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","source":{"start":140,"end":140,"column":{"start":26,"end":63}},"sink":{"start":140,"end":140,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":140,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b10dc168ddb1d9fab8cf139cd11d5b85_1","old_fingerprint":"ef66dbac55ba54db5e8dd9739a1809d6_222","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":216,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java","source":{"start":216,"end":216,"column":{"start":26,"end":63}},"sink":{"start":216,"end":216,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":216,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b10dc168ddb1d9fab8cf139cd11d5b85_2","old_fingerprint":"ef66dbac55ba54db5e8dd9739a1809d6_261","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_31.java","source":{"start":52,"end":52,"column":{"start":30,"end":67}},"sink":{"start":52,"end":52,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d48f52eaa6c59abfef9470c9801af41b_0","old_fingerprint":"ebd58ddf02faf02948fbf3a37762aa9c_139","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":272,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_31.java","source":{"start":272,"end":272,"column":{"start":30,"end":67}},"sink":{"start":272,"end":272,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":272,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d48f52eaa6c59abfef9470c9801af41b_1","old_fingerprint":"ebd58ddf02faf02948fbf3a37762aa9c_294","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":112,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_41.java","source":{"start":112,"end":112,"column":{"start":26,"end":63}},"sink":{"start":112,"end":112,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":112,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"03f9c12e104b306c326264c51735f2ee_0","old_fingerprint":"7296b62e9aff4b950daaccf4ce504f9d_181","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":329,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_41.java","source":{"start":329,"end":329,"column":{"start":26,"end":63}},"sink":{"start":329,"end":329,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":329,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"03f9c12e104b306c326264c51735f2ee_1","old_fingerprint":"7296b62e9aff4b950daaccf4ce504f9d_340","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_42.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8242c4c99171578d43e19f050eaa5ee1_0","old_fingerprint":"760081df0a4d7e8110ab46d52403aa6e_101","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":262,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_42.java","source":{"start":262,"end":262,"column":{"start":26,"end":63}},"sink":{"start":262,"end":262,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":262,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8242c4c99171578d43e19f050eaa5ee1_1","old_fingerprint":"760081df0a4d7e8110ab46d52403aa6e_291","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":117,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_45.java","source":{"start":117,"end":117,"column":{"start":26,"end":63}},"sink":{"start":117,"end":117,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":117,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"14e54df4cd06b525cd9a263a3b297feb_0","old_fingerprint":"b6588b577e90e6f4c2f6fa3fe8c93690_183","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":338,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_45.java","source":{"start":338,"end":338,"column":{"start":26,"end":63}},"sink":{"start":338,"end":338,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":338,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"14e54df4cd06b525cd9a263a3b297feb_1","old_fingerprint":"b6588b577e90e6f4c2f6fa3fe8c93690_354","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0929ca264cf7ad9efba5c18e01acad86_0","old_fingerprint":"3b2e58246cca15d3e9562025404d0b57_1","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0929ca264cf7ad9efba5c18e01acad86_1","old_fingerprint":"3b2e58246cca15d3e9562025404d0b57_201","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6227ffbc5bae3d9aa8fb4c3140a4e961_0","old_fingerprint":"9ee59c855fd5312bb32b13e06d63d99f_5","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6227ffbc5bae3d9aa8fb4c3140a4e961_1","old_fingerprint":"9ee59c855fd5312bb32b13e06d63d99f_213","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d48396ece33068a295bffd9d611b9804_0","old_fingerprint":"65bf89a97f6a61939baf8d284c20ff4b_12","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d48396ece33068a295bffd9d611b9804_1","old_fingerprint":"65bf89a97f6a61939baf8d284c20ff4b_216","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a7984a0b0e62cdedaf1181149902ba53_0","old_fingerprint":"1ed811c744be8edb352ed38ed03304f8_22","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a7984a0b0e62cdedaf1181149902ba53_1","old_fingerprint":"1ed811c744be8edb352ed38ed03304f8_219","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_61b.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"43177b098b0dbec1646adccc6a555c5a_0","old_fingerprint":"36ce6a534b6726a9cab9ae66e01438df_26","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":133,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_61b.java","source":{"start":133,"end":133,"column":{"start":26,"end":63}},"sink":{"start":133,"end":133,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":133,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"43177b098b0dbec1646adccc6a555c5a_1","old_fingerprint":"36ce6a534b6726a9cab9ae66e01438df_186","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"15d0eb660ab932933577f8d2e4674ba6_0","old_fingerprint":"b86932651eb454f14060c67edd14625e_4","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":143,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java","source":{"start":143,"end":143,"column":{"start":26,"end":63}},"sink":{"start":143,"end":143,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":143,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"15d0eb660ab932933577f8d2e4674ba6_1","old_fingerprint":"b86932651eb454f14060c67edd14625e_230","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java","source":{"start":52,"end":52,"column":{"start":26,"end":63}},"sink":{"start":52,"end":52,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2206945ea10584a1771b118ea7650ed8_0","old_fingerprint":"2351e672b9861969fcc60b39449864f4_134","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2206945ea10584a1771b118ea7650ed8_1","old_fingerprint":"2351e672b9861969fcc60b39449864f4_252","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"fa36109b1ce67705de8f29bebbfd40d3_0","old_fingerprint":"a5ee8e47102f0ab1105b8b00b504ad4f_44","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":138,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java","source":{"start":138,"end":138,"column":{"start":26,"end":63}},"sink":{"start":138,"end":138,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":138,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"fa36109b1ce67705de8f29bebbfd40d3_1","old_fingerprint":"a5ee8e47102f0ab1105b8b00b504ad4f_194","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"37d3caabdf5bf387ee3a124012f9e3e7_0","old_fingerprint":"9d1750f024bb1ee93f422dcc9917d6ed_38","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"37d3caabdf5bf387ee3a124012f9e3e7_1","old_fingerprint":"9d1750f024bb1ee93f422dcc9917d6ed_198","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1ac4b73b2c34770e2f52f90f1046cb9a_0","old_fingerprint":"585edf230ff4575e3d6c2e6ea3f5e283_57","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1ac4b73b2c34770e2f52f90f1046cb9a_1","old_fingerprint":"585edf230ff4575e3d6c2e6ea3f5e283_237","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"34ef26612cff569ae3108d128777ad65_0","old_fingerprint":"33a7cc41496a2bcbe58ef4a3ab2fcd42_51","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"34ef26612cff569ae3108d128777ad65_1","old_fingerprint":"33a7cc41496a2bcbe58ef4a3ab2fcd42_238","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"345f949db56c4982da4f315ff3ff4f30_0","old_fingerprint":"8f7f8fe7b7042b2730c1f41f908711ff_40","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"345f949db56c4982da4f315ff3ff4f30_1","old_fingerprint":"8f7f8fe7b7042b2730c1f41f908711ff_243","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3da9625be54ce0613e6852b81a313bcb_0","old_fingerprint":"5c55ed6998215c6b6e8a1656d0ef901c_108","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java","source":{"start":226,"end":226,"column":{"start":26,"end":63}},"sink":{"start":226,"end":226,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3da9625be54ce0613e6852b81a313bcb_1","old_fingerprint":"5c55ed6998215c6b6e8a1656d0ef901c_267","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2fc0293eb567da13835d050d134a87a8_0","old_fingerprint":"b486db6a5267ee0a6a671a4ae14e4b61_32","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":141,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java","source":{"start":141,"end":141,"column":{"start":26,"end":63}},"sink":{"start":141,"end":141,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":141,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2fc0293eb567da13835d050d134a87a8_1","old_fingerprint":"b486db6a5267ee0a6a671a4ae14e4b61_225","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4d3ee56ba61b224449c4f0adb31c403a_0","old_fingerprint":"a592872e889597c68a2d76a7c609f75e_105","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":228,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java","source":{"start":228,"end":228,"column":{"start":26,"end":63}},"sink":{"start":228,"end":228,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":228,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4d3ee56ba61b224449c4f0adb31c403a_1","old_fingerprint":"a592872e889597c68a2d76a7c609f75e_272","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5b625f5cf0f11a17a779583c38948239_0","old_fingerprint":"81b36eb7c19fca86bd98c62d89fc8601_90","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5b625f5cf0f11a17a779583c38948239_1","old_fingerprint":"81b36eb7c19fca86bd98c62d89fc8601_296","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5b625f5cf0f11a17a779583c38948239_2","old_fingerprint":"81b36eb7c19fca86bd98c62d89fc8601_385","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"29848cefbc85e65500b2db833b37dd06_0","old_fingerprint":"d2768cf4cbb3e94d706593e31dc894d6_93","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"29848cefbc85e65500b2db833b37dd06_1","old_fingerprint":"d2768cf4cbb3e94d706593e31dc894d6_300","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"29848cefbc85e65500b2db833b37dd06_2","old_fingerprint":"d2768cf4cbb3e94d706593e31dc894d6_383","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"797643a627afc8e454eca42c33494b78_0","old_fingerprint":"15ac003a2c8898cfc77ca4336b7fe32b_164","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":300,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","source":{"start":300,"end":300,"column":{"start":30,"end":67}},"sink":{"start":300,"end":300,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":300,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"797643a627afc8e454eca42c33494b78_1","old_fingerprint":"15ac003a2c8898cfc77ca4336b7fe32b_306","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":431,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java","source":{"start":431,"end":431,"column":{"start":30,"end":67}},"sink":{"start":431,"end":431,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":431,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"797643a627afc8e454eca42c33494b78_2","old_fingerprint":"15ac003a2c8898cfc77ca4336b7fe32b_392","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"705d66e32fe5e0f9ef0c91c80e969576_0","old_fingerprint":"d66907ab881f79866b715bf55969b1b2_163","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":301,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","source":{"start":301,"end":301,"column":{"start":30,"end":67}},"sink":{"start":301,"end":301,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":301,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"705d66e32fe5e0f9ef0c91c80e969576_1","old_fingerprint":"d66907ab881f79866b715bf55969b1b2_307","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":432,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java","source":{"start":432,"end":432,"column":{"start":30,"end":67}},"sink":{"start":432,"end":432,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":432,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"705d66e32fe5e0f9ef0c91c80e969576_2","old_fingerprint":"d66907ab881f79866b715bf55969b1b2_393","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4302673f8f8366db078bffdad4b7e634_0","old_fingerprint":"8a7bf82669ea0afaed730656bc06cae7_147","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":298,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","source":{"start":298,"end":298,"column":{"start":30,"end":67}},"sink":{"start":298,"end":298,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":298,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4302673f8f8366db078bffdad4b7e634_1","old_fingerprint":"8a7bf82669ea0afaed730656bc06cae7_303","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":429,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java","source":{"start":429,"end":429,"column":{"start":30,"end":67}},"sink":{"start":429,"end":429,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":429,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4302673f8f8366db078bffdad4b7e634_2","old_fingerprint":"8a7bf82669ea0afaed730656bc06cae7_390","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d12720ee21a31bcd33654e65f333a2fe_0","old_fingerprint":"17b985d917a0736343c8ffd433f68e62_145","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":298,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","source":{"start":298,"end":298,"column":{"start":30,"end":67}},"sink":{"start":298,"end":298,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":298,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d12720ee21a31bcd33654e65f333a2fe_1","old_fingerprint":"17b985d917a0736343c8ffd433f68e62_304","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":429,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java","source":{"start":429,"end":429,"column":{"start":30,"end":67}},"sink":{"start":429,"end":429,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":429,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d12720ee21a31bcd33654e65f333a2fe_2","old_fingerprint":"17b985d917a0736343c8ffd433f68e62_391","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":62,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","source":{"start":62,"end":62,"column":{"start":30,"end":67}},"sink":{"start":62,"end":62,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":62,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3bfa5826c0bec55a2c1dccb014edc6c0_0","old_fingerprint":"a4eff5d25508fedc559ab15d3236d455_171","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":306,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","source":{"start":306,"end":306,"column":{"start":30,"end":67}},"sink":{"start":306,"end":306,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":306,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3bfa5826c0bec55a2c1dccb014edc6c0_1","old_fingerprint":"a4eff5d25508fedc559ab15d3236d455_308","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":437,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java","source":{"start":437,"end":437,"column":{"start":30,"end":67}},"sink":{"start":437,"end":437,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":437,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3bfa5826c0bec55a2c1dccb014edc6c0_2","old_fingerprint":"a4eff5d25508fedc559ab15d3236d455_394","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"555a0867a21d3bef01d678434cc811b7_0","old_fingerprint":"104d9a91b68aa754d16f7eda2eec901f_77","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"555a0867a21d3bef01d678434cc811b7_1","old_fingerprint":"104d9a91b68aa754d16f7eda2eec901f_299","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"555a0867a21d3bef01d678434cc811b7_2","old_fingerprint":"104d9a91b68aa754d16f7eda2eec901f_386","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e3603345f9db381e07513ab6b3b491bb_0","old_fingerprint":"af883d7d445f51d4b33afbf11d97cca1_73","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e3603345f9db381e07513ab6b3b491bb_1","old_fingerprint":"af883d7d445f51d4b33afbf11d97cca1_301","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e3603345f9db381e07513ab6b3b491bb_2","old_fingerprint":"af883d7d445f51d4b33afbf11d97cca1_384","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ffed922504a4aa08a1bcf4cbdae7e6bb_0","old_fingerprint":"d5b1f01734941f4b2a861684584ae1cc_67","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":294,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","source":{"start":294,"end":294,"column":{"start":30,"end":67}},"sink":{"start":294,"end":294,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":294,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ffed922504a4aa08a1bcf4cbdae7e6bb_1","old_fingerprint":"d5b1f01734941f4b2a861684584ae1cc_302","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":425,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java","source":{"start":425,"end":425,"column":{"start":30,"end":67}},"sink":{"start":425,"end":425,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":425,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ffed922504a4aa08a1bcf4cbdae7e6bb_2","old_fingerprint":"d5b1f01734941f4b2a861684584ae1cc_387","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8ba73eab4c7ac099c381247a8f6f216f_0","old_fingerprint":"919ba8c8892fbaffc13277fa1349728c_62","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":331,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","source":{"start":331,"end":331,"column":{"start":30,"end":67}},"sink":{"start":331,"end":331,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":331,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8ba73eab4c7ac099c381247a8f6f216f_1","old_fingerprint":"919ba8c8892fbaffc13277fa1349728c_341","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":398,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java","source":{"start":398,"end":398,"column":{"start":30,"end":67}},"sink":{"start":398,"end":398,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":398,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8ba73eab4c7ac099c381247a8f6f216f_2","old_fingerprint":"919ba8c8892fbaffc13277fa1349728c_380","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"54eb6ad9d17204e8491450b6778d0d01_0","old_fingerprint":"252a33d2374600f38fbefbd505d35292_72","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"54eb6ad9d17204e8491450b6778d0d01_1","old_fingerprint":"252a33d2374600f38fbefbd505d35292_297","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"54eb6ad9d17204e8491450b6778d0d01_2","old_fingerprint":"252a33d2374600f38fbefbd505d35292_381","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5b5999d615d5294aa987b81b3dba1d7_0","old_fingerprint":"1052852ab14369634b306ca7b82c17f3_80","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":293,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","source":{"start":293,"end":293,"column":{"start":30,"end":67}},"sink":{"start":293,"end":293,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":293,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5b5999d615d5294aa987b81b3dba1d7_1","old_fingerprint":"1052852ab14369634b306ca7b82c17f3_298","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":424,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java","source":{"start":424,"end":424,"column":{"start":30,"end":67}},"sink":{"start":424,"end":424,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":424,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b5b5999d615d5294aa987b81b3dba1d7_2","old_fingerprint":"1052852ab14369634b306ca7b82c17f3_382","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","source":{"start":51,"end":51,"column":{"start":30,"end":67}},"sink":{"start":51,"end":51,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"83f64a3abc8b1875f2ed08ba2949b9c2_0","old_fingerprint":"c16abc7986f4f2a03573a2c860d87264_127","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":317,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","source":{"start":317,"end":317,"column":{"start":30,"end":67}},"sink":{"start":317,"end":317,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":317,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"83f64a3abc8b1875f2ed08ba2949b9c2_1","old_fingerprint":"c16abc7986f4f2a03573a2c860d87264_325","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":446,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java","source":{"start":446,"end":446,"column":{"start":30,"end":67}},"sink":{"start":446,"end":446,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":446,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"83f64a3abc8b1875f2ed08ba2949b9c2_2","old_fingerprint":"c16abc7986f4f2a03573a2c860d87264_395","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java","source":{"start":50,"end":50,"column":{"start":30,"end":67}},"sink":{"start":50,"end":50,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8bbdd39e62e786c00cf0d403cc710e72_0","old_fingerprint":"95e4c6117968eeb0bcb29f8a750c5678_111","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java","source":{"start":226,"end":226,"column":{"start":30,"end":67}},"sink":{"start":226,"end":226,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8bbdd39e62e786c00cf0d403cc710e72_1","old_fingerprint":"95e4c6117968eeb0bcb29f8a750c5678_266","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":55,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java","source":{"start":55,"end":55,"column":{"start":26,"end":63}},"sink":{"start":55,"end":55,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":55,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8c017466985d7aa784b57c4dc1eef4a0_0","old_fingerprint":"a3a456ee2db9c8b2d79cadd53a3215a5_155","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":225,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java","source":{"start":225,"end":225,"column":{"start":26,"end":63}},"sink":{"start":225,"end":225,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":225,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8c017466985d7aa784b57c4dc1eef4a0_1","old_fingerprint":"a3a456ee2db9c8b2d79cadd53a3215a5_265","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":53,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","source":{"start":53,"end":53,"column":{"start":26,"end":63}},"sink":{"start":53,"end":53,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":53,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba2c999a83e3b41b7701dd297a4cfa01_0","old_fingerprint":"e0b3169156af251f4d7a0c99da669f07_142","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":188,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","source":{"start":188,"end":188,"column":{"start":26,"end":63}},"sink":{"start":188,"end":188,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":188,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba2c999a83e3b41b7701dd297a4cfa01_1","old_fingerprint":"e0b3169156af251f4d7a0c99da669f07_255","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":322,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java","source":{"start":322,"end":322,"column":{"start":26,"end":63}},"sink":{"start":322,"end":322,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":322,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba2c999a83e3b41b7701dd297a4cfa01_2","old_fingerprint":"e0b3169156af251f4d7a0c99da669f07_335","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","source":{"start":51,"end":51,"column":{"start":26,"end":63}},"sink":{"start":51,"end":51,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"caebcc60d2394fa6bbf0684b8cadbf1b_0","old_fingerprint":"7702513e78a5add66bdbf99e9e23abf7_129","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":140,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","source":{"start":140,"end":140,"column":{"start":26,"end":63}},"sink":{"start":140,"end":140,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":140,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"caebcc60d2394fa6bbf0684b8cadbf1b_1","old_fingerprint":"7702513e78a5add66bdbf99e9e23abf7_224","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":216,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java","source":{"start":216,"end":216,"column":{"start":26,"end":63}},"sink":{"start":216,"end":216,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":216,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"caebcc60d2394fa6bbf0684b8cadbf1b_2","old_fingerprint":"7702513e78a5add66bdbf99e9e23abf7_264","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java","source":{"start":52,"end":52,"column":{"start":30,"end":67}},"sink":{"start":52,"end":52,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"eb5e41ed4966d98bdca1ba27f6067564_0","old_fingerprint":"1ffa46948a51342098cface012e71016_133","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":246,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java","source":{"start":246,"end":246,"column":{"start":30,"end":67}},"sink":{"start":246,"end":246,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":246,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"eb5e41ed4966d98bdca1ba27f6067564_1","old_fingerprint":"1ffa46948a51342098cface012e71016_280","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":99,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java","source":{"start":99,"end":99,"column":{"start":26,"end":63}},"sink":{"start":99,"end":99,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":99,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8cb0c3c7e09b024f1a094e2b88ea3ef5_0","old_fingerprint":"a3d6140c6de356588c5e649491f0aeac_175","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":290,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java","source":{"start":290,"end":290,"column":{"start":26,"end":63}},"sink":{"start":290,"end":290,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":290,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8cb0c3c7e09b024f1a094e2b88ea3ef5_1","old_fingerprint":"a3d6140c6de356588c5e649491f0aeac_295","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"9ddd14afd3c09a0d276113186e776258_0","old_fingerprint":"50469dbec5283f7d42cdca01560f4c92_116","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":236,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java","source":{"start":236,"end":236,"column":{"start":26,"end":63}},"sink":{"start":236,"end":236,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":236,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"9ddd14afd3c09a0d276113186e776258_1","old_fingerprint":"50469dbec5283f7d42cdca01560f4c92_273","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":104,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java","source":{"start":104,"end":104,"column":{"start":26,"end":63}},"sink":{"start":104,"end":104,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":104,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"433126a52688e133a23b6475298ac355_0","old_fingerprint":"dc42ca86ded8be6fc08208b838175449_176","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":299,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java","source":{"start":299,"end":299,"column":{"start":26,"end":63}},"sink":{"start":299,"end":299,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":299,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"433126a52688e133a23b6475298ac355_1","old_fingerprint":"dc42ca86ded8be6fc08208b838175449_305","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"70f3ea76283b8211b2f1d9a31e8ad2db_0","old_fingerprint":"9abbcc07a65d593e9d4ef2cd137fd674_21","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"70f3ea76283b8211b2f1d9a31e8ad2db_1","old_fingerprint":"9abbcc07a65d593e9d4ef2cd137fd674_217","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b18af5dd1649f5402a48293f680c1b2c_0","old_fingerprint":"ec4de1fc3ab86276af66639a14f8c1dc_20","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b18af5dd1649f5402a48293f680c1b2c_1","old_fingerprint":"ec4de1fc3ab86276af66639a14f8c1dc_214","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"53ce928064a81490ef610e359de3631b_0","old_fingerprint":"f99327fe9e3ffac10a1b8814571083aa_18","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"53ce928064a81490ef610e359de3631b_1","old_fingerprint":"f99327fe9e3ffac10a1b8814571083aa_206","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ca452f51426b920c85855351d174bfea_0","old_fingerprint":"a65d8db49da22dd93b5140cad6ad7993_17","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ca452f51426b920c85855351d174bfea_1","old_fingerprint":"a65d8db49da22dd93b5140cad6ad7993_205","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_61b.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"baeea45d5f1288c0638fed4d80422f2d_0","old_fingerprint":"b31bf62fc44a9adb5242ef2fd47e1280_15","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":133,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_61b.java","source":{"start":133,"end":133,"column":{"start":26,"end":63}},"sink":{"start":133,"end":133,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":133,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"baeea45d5f1288c0638fed4d80422f2d_1","old_fingerprint":"b31bf62fc44a9adb5242ef2fd47e1280_187","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"03ab6e8d9c8f586a7d9a7f84ac0fb476_0","old_fingerprint":"87472277cc1c395798c61f4ed3de1114_14","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":143,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java","source":{"start":143,"end":143,"column":{"start":26,"end":63}},"sink":{"start":143,"end":143,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":143,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"03ab6e8d9c8f586a7d9a7f84ac0fb476_1","old_fingerprint":"87472277cc1c395798c61f4ed3de1114_231","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java","source":{"start":52,"end":52,"column":{"start":26,"end":63}},"sink":{"start":52,"end":52,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0bd461c94615c3aba94a0682ae88ba7d_0","old_fingerprint":"3425666a281f19d32b21e079d9f364fe_130","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0bd461c94615c3aba94a0682ae88ba7d_1","old_fingerprint":"3425666a281f19d32b21e079d9f364fe_250","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b0dc3b8f34cb1086099732276a720ff8_0","old_fingerprint":"b55c82940aed0cc40111cd4ee5be41a0_55","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":138,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java","source":{"start":138,"end":138,"column":{"start":26,"end":63}},"sink":{"start":138,"end":138,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":138,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b0dc3b8f34cb1086099732276a720ff8_1","old_fingerprint":"b55c82940aed0cc40111cd4ee5be41a0_190","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"02ba842615f2e839fa369d13731930ea_0","old_fingerprint":"eff420d987b0f07ce561468c913189db_9","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"02ba842615f2e839fa369d13731930ea_1","old_fingerprint":"eff420d987b0f07ce561468c913189db_197","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"beec234565ff2b00a62b5f2ab0596d5c_0","old_fingerprint":"f8645558d7f0d925366302b873deb10b_41","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"beec234565ff2b00a62b5f2ab0596d5c_1","old_fingerprint":"f8645558d7f0d925366302b873deb10b_244","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"fd1016d7cabfa7c5db9e35e1865ef309_0","old_fingerprint":"232aec15fc57f1d85c36ae6b2024fc2c_48","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"fd1016d7cabfa7c5db9e35e1865ef309_1","old_fingerprint":"232aec15fc57f1d85c36ae6b2024fc2c_235","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5e3f7dfb324634466496924416fba079_0","old_fingerprint":"74ff5a2ef94560739c1349c33e787c64_50","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5e3f7dfb324634466496924416fba079_1","old_fingerprint":"74ff5a2ef94560739c1349c33e787c64_253","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4e39c7fd87f62bd1ec0d347b8123d0e1_0","old_fingerprint":"ca6e71b0af1a2d646992cdddfa9dc63c_100","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java","source":{"start":226,"end":226,"column":{"start":26,"end":63}},"sink":{"start":226,"end":226,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4e39c7fd87f62bd1ec0d347b8123d0e1_1","old_fingerprint":"ca6e71b0af1a2d646992cdddfa9dc63c_268","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"41eae6ad40c0d648ab14dc8ff29f9b9d_0","old_fingerprint":"4147195c49f12d8450f9f7477853aa9f_24","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":141,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java","source":{"start":141,"end":141,"column":{"start":26,"end":63}},"sink":{"start":141,"end":141,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":141,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"41eae6ad40c0d648ab14dc8ff29f9b9d_1","old_fingerprint":"4147195c49f12d8450f9f7477853aa9f_228","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_01.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_01.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"890d301b544de84139c28c1d0a3b67a1_0","old_fingerprint":"56bd2abcade6e78aaf7dc5ef155a3628_119","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":242,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_01.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_01.java","source":{"start":242,"end":242,"column":{"start":26,"end":63}},"sink":{"start":242,"end":242,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":242,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"890d301b544de84139c28c1d0a3b67a1_1","old_fingerprint":"56bd2abcade6e78aaf7dc5ef155a3628_278","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_02.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_02.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a569088a7dcbadf096d2e71e2865db05_0","old_fingerprint":"259e9553f758c102b1ef486ca2dafa23_81","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_02.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_02.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a569088a7dcbadf096d2e71e2865db05_1","old_fingerprint":"259e9553f758c102b1ef486ca2dafa23_315","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_02.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_02.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a569088a7dcbadf096d2e71e2865db05_2","old_fingerprint":"259e9553f758c102b1ef486ca2dafa23_403","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_03.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_03.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"111c7e62a936d3034873762f4cdcf20b_0","old_fingerprint":"3ac6517b9e4b9c18065eae9a9f72ae04_89","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_03.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_03.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"111c7e62a936d3034873762f4cdcf20b_1","old_fingerprint":"3ac6517b9e4b9c18065eae9a9f72ae04_312","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_03.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_03.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"111c7e62a936d3034873762f4cdcf20b_2","old_fingerprint":"3ac6517b9e4b9c18065eae9a9f72ae04_404","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_04.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_04.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097c69fc3ebe5669e7a9218392ad23f3_0","old_fingerprint":"25972f61edda0faaca2b8a78a433c69a_169","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":321,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_04.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_04.java","source":{"start":321,"end":321,"column":{"start":30,"end":67}},"sink":{"start":321,"end":321,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":321,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097c69fc3ebe5669e7a9218392ad23f3_1","old_fingerprint":"25972f61edda0faaca2b8a78a433c69a_332","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":459,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_04.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_04.java","source":{"start":459,"end":459,"column":{"start":30,"end":67}},"sink":{"start":459,"end":459,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":459,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"097c69fc3ebe5669e7a9218392ad23f3_2","old_fingerprint":"25972f61edda0faaca2b8a78a433c69a_417","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_05.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_05.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0bcd54395e1fcca19393b2a04ba008e5_0","old_fingerprint":"a600a860e28a6b8f449d04f7f8d6332d_160","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":322,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_05.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_05.java","source":{"start":322,"end":322,"column":{"start":30,"end":67}},"sink":{"start":322,"end":322,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":322,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0bcd54395e1fcca19393b2a04ba008e5_1","old_fingerprint":"a600a860e28a6b8f449d04f7f8d6332d_336","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":460,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_05.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_05.java","source":{"start":460,"end":460,"column":{"start":30,"end":67}},"sink":{"start":460,"end":460,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":460,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0bcd54395e1fcca19393b2a04ba008e5_2","old_fingerprint":"a600a860e28a6b8f449d04f7f8d6332d_419","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_06.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_06.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"420117ed2d5025ce1221a921eea43693_0","old_fingerprint":"b848dcb4534be5e66bedfd41c1a3d4fc_148","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":319,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_06.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_06.java","source":{"start":319,"end":319,"column":{"start":30,"end":67}},"sink":{"start":319,"end":319,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":319,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"420117ed2d5025ce1221a921eea43693_1","old_fingerprint":"b848dcb4534be5e66bedfd41c1a3d4fc_327","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":457,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_06.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_06.java","source":{"start":457,"end":457,"column":{"start":30,"end":67}},"sink":{"start":457,"end":457,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":457,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"420117ed2d5025ce1221a921eea43693_2","old_fingerprint":"b848dcb4534be5e66bedfd41c1a3d4fc_414","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_07.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_07.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"371b6dbdf9a6bb1cc7149725036c87e9_0","old_fingerprint":"ee03a71f13d604227aa95f316b445659_149","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":319,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_07.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_07.java","source":{"start":319,"end":319,"column":{"start":30,"end":67}},"sink":{"start":319,"end":319,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":319,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"371b6dbdf9a6bb1cc7149725036c87e9_1","old_fingerprint":"ee03a71f13d604227aa95f316b445659_328","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":457,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_07.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_07.java","source":{"start":457,"end":457,"column":{"start":30,"end":67}},"sink":{"start":457,"end":457,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":457,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"371b6dbdf9a6bb1cc7149725036c87e9_2","old_fingerprint":"ee03a71f13d604227aa95f316b445659_413","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":62,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_08.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_08.java","source":{"start":62,"end":62,"column":{"start":30,"end":67}},"sink":{"start":62,"end":62,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":62,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7f5ab93c86eea332709f1155775a3f99_0","old_fingerprint":"e2b668ef38f55d3b5f967e20caf6099b_170","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":327,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_08.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_08.java","source":{"start":327,"end":327,"column":{"start":30,"end":67}},"sink":{"start":327,"end":327,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":327,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7f5ab93c86eea332709f1155775a3f99_1","old_fingerprint":"e2b668ef38f55d3b5f967e20caf6099b_337","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":465,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_08.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_08.java","source":{"start":465,"end":465,"column":{"start":30,"end":67}},"sink":{"start":465,"end":465,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":465,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7f5ab93c86eea332709f1155775a3f99_2","old_fingerprint":"e2b668ef38f55d3b5f967e20caf6099b_421","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_09.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_09.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b9ec33d1c0831a83d976febb88e16069_0","old_fingerprint":"1e89853a81ba1fff4f50424fd7688add_78","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_09.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_09.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b9ec33d1c0831a83d976febb88e16069_1","old_fingerprint":"1e89853a81ba1fff4f50424fd7688add_313","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_09.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_09.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b9ec33d1c0831a83d976febb88e16069_2","old_fingerprint":"1e89853a81ba1fff4f50424fd7688add_397","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_10.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_10.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f076bfd482aaeb0e88624198f9c4de6a_0","old_fingerprint":"0a7b48f1c05eb4e3eee9a5213b11b249_70","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_10.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_10.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f076bfd482aaeb0e88624198f9c4de6a_1","old_fingerprint":"0a7b48f1c05eb4e3eee9a5213b11b249_321","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_10.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_10.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f076bfd482aaeb0e88624198f9c4de6a_2","old_fingerprint":"0a7b48f1c05eb4e3eee9a5213b11b249_407","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_11.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_11.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6fd7ca17ec7d42220be67b7f02ab31cc_0","old_fingerprint":"fcf9f87e78e269527abe9bea8b2fc7be_64","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":315,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_11.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_11.java","source":{"start":315,"end":315,"column":{"start":30,"end":67}},"sink":{"start":315,"end":315,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":315,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6fd7ca17ec7d42220be67b7f02ab31cc_1","old_fingerprint":"fcf9f87e78e269527abe9bea8b2fc7be_323","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":453,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_11.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_11.java","source":{"start":453,"end":453,"column":{"start":30,"end":67}},"sink":{"start":453,"end":453,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":453,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6fd7ca17ec7d42220be67b7f02ab31cc_2","old_fingerprint":"fcf9f87e78e269527abe9bea8b2fc7be_410","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_12.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_12.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3f30555c6f28dc2cf0ac108fbcb6753b_0","old_fingerprint":"23172def0344415f5cc16ebc5f739b02_63","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":359,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_12.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_12.java","source":{"start":359,"end":359,"column":{"start":30,"end":67}},"sink":{"start":359,"end":359,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":359,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3f30555c6f28dc2cf0ac108fbcb6753b_1","old_fingerprint":"23172def0344415f5cc16ebc5f739b02_376","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":426,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_12.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_12.java","source":{"start":426,"end":426,"column":{"start":30,"end":67}},"sink":{"start":426,"end":426,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":426,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3f30555c6f28dc2cf0ac108fbcb6753b_2","old_fingerprint":"23172def0344415f5cc16ebc5f739b02_388","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_13.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_13.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"90fe5da99c33219e9fd01b86718c97d2_0","old_fingerprint":"9efd814a055796a248d1fd06b4b9eaab_65","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_13.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_13.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"90fe5da99c33219e9fd01b86718c97d2_1","old_fingerprint":"9efd814a055796a248d1fd06b4b9eaab_319","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_13.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_13.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"90fe5da99c33219e9fd01b86718c97d2_2","old_fingerprint":"9efd814a055796a248d1fd06b4b9eaab_399","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_14.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_14.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0edd28de6737cca238923972b17b5bb4_0","old_fingerprint":"154c1a71fad5583f35d155c9d143ed3b_69","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_14.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_14.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0edd28de6737cca238923972b17b5bb4_1","old_fingerprint":"154c1a71fad5583f35d155c9d143ed3b_311","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_14.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_14.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0edd28de6737cca238923972b17b5bb4_2","old_fingerprint":"154c1a71fad5583f35d155c9d143ed3b_406","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_15.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_15.java","source":{"start":51,"end":51,"column":{"start":30,"end":67}},"sink":{"start":51,"end":51,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c8343e60cb3f94a8622a2793b123253b_0","old_fingerprint":"0b5ee2c7bddd6b390e7b761c36ef2026_121","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":338,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_15.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_15.java","source":{"start":338,"end":338,"column":{"start":30,"end":67}},"sink":{"start":338,"end":338,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":338,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c8343e60cb3f94a8622a2793b123253b_1","old_fingerprint":"0b5ee2c7bddd6b390e7b761c36ef2026_353","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":474,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_15.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_15.java","source":{"start":474,"end":474,"column":{"start":30,"end":67}},"sink":{"start":474,"end":474,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":474,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c8343e60cb3f94a8622a2793b123253b_2","old_fingerprint":"0b5ee2c7bddd6b390e7b761c36ef2026_422","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_16.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_16.java","source":{"start":50,"end":50,"column":{"start":30,"end":67}},"sink":{"start":50,"end":50,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"81ce6d28adc23236c7c6085ac28dc558_0","old_fingerprint":"a5848a1d6822467473773766569d2343_117","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":240,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_16.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_16.java","source":{"start":240,"end":240,"column":{"start":30,"end":67}},"sink":{"start":240,"end":240,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":240,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"81ce6d28adc23236c7c6085ac28dc558_1","old_fingerprint":"a5848a1d6822467473773766569d2343_277","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":55,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_17.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_17.java","source":{"start":55,"end":55,"column":{"start":26,"end":63}},"sink":{"start":55,"end":55,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":55,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2880cd5cc0f64070de11d9bc29875376_0","old_fingerprint":"06cd3708e63448979b5e1196166759c6_157","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":239,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_17.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_17.java","source":{"start":239,"end":239,"column":{"start":26,"end":63}},"sink":{"start":239,"end":239,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":239,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2880cd5cc0f64070de11d9bc29875376_1","old_fingerprint":"06cd3708e63448979b5e1196166759c6_275","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":53,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_21.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_21.java","source":{"start":53,"end":53,"column":{"start":26,"end":63}},"sink":{"start":53,"end":53,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":53,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d5c0d88f0af3807ad990faf83e7a88e6_0","old_fingerprint":"0ce5f814963b8946483ecf4399895823_144","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":195,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_21.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_21.java","source":{"start":195,"end":195,"column":{"start":26,"end":63}},"sink":{"start":195,"end":195,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":195,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d5c0d88f0af3807ad990faf83e7a88e6_1","old_fingerprint":"0ce5f814963b8946483ecf4399895823_257","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":336,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_21.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_21.java","source":{"start":336,"end":336,"column":{"start":26,"end":63}},"sink":{"start":336,"end":336,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":336,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d5c0d88f0af3807ad990faf83e7a88e6_2","old_fingerprint":"0ce5f814963b8946483ecf4399895823_350","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_22a.java","source":{"start":51,"end":51,"column":{"start":26,"end":63}},"sink":{"start":51,"end":51,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ad863e646b063b8649cadc61b2f4a7aa_0","old_fingerprint":"f63d94b98fddd72f72a6806953ba8a3c_123","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":140,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_22a.java","source":{"start":140,"end":140,"column":{"start":26,"end":63}},"sink":{"start":140,"end":140,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":140,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ad863e646b063b8649cadc61b2f4a7aa_1","old_fingerprint":"f63d94b98fddd72f72a6806953ba8a3c_223","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":216,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_22a.java","source":{"start":216,"end":216,"column":{"start":26,"end":63}},"sink":{"start":216,"end":216,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":216,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ad863e646b063b8649cadc61b2f4a7aa_2","old_fingerprint":"f63d94b98fddd72f72a6806953ba8a3c_260","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_31.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_31.java","source":{"start":52,"end":52,"column":{"start":30,"end":67}},"sink":{"start":52,"end":52,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1daf173992a42818f56e3e9bea782307_0","old_fingerprint":"403fd0a990995bec0c3e1bbc0c595867_138","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":260,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_31.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_31.java","source":{"start":260,"end":260,"column":{"start":30,"end":67}},"sink":{"start":260,"end":260,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":260,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1daf173992a42818f56e3e9bea782307_1","old_fingerprint":"403fd0a990995bec0c3e1bbc0c595867_290","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":106,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_41.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_41.java","source":{"start":106,"end":106,"column":{"start":26,"end":63}},"sink":{"start":106,"end":106,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":106,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f1739548b7dea8dfffd940e9f62ea530_0","old_fingerprint":"22eaf3e0ebf4f011f7517a638aec12c1_177","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":311,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_41.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_41.java","source":{"start":311,"end":311,"column":{"start":26,"end":63}},"sink":{"start":311,"end":311,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":311,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"f1739548b7dea8dfffd940e9f62ea530_1","old_fingerprint":"22eaf3e0ebf4f011f7517a638aec12c1_310","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_42.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_42.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b114c052f4be5d490db978a06beec218_0","old_fingerprint":"63e495fbb96aaa43884c48d55e0b9e00_112","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":250,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_42.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_42.java","source":{"start":250,"end":250,"column":{"start":26,"end":63}},"sink":{"start":250,"end":250,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":250,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b114c052f4be5d490db978a06beec218_1","old_fingerprint":"63e495fbb96aaa43884c48d55e0b9e00_282","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":111,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_45.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_45.java","source":{"start":111,"end":111,"column":{"start":26,"end":63}},"sink":{"start":111,"end":111,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":111,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1dbfe003884145568b838a8dbd78215b_0","old_fingerprint":"96b061c6d9bb689434c36c9b4403bb69_179","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":320,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_45.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_45.java","source":{"start":320,"end":320,"column":{"start":26,"end":63}},"sink":{"start":320,"end":320,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":320,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"1dbfe003884145568b838a8dbd78215b_1","old_fingerprint":"96b061c6d9bb689434c36c9b4403bb69_331","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_51a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"801ba416e9ae8e724ddf1342e334485d_0","old_fingerprint":"2eca3a2108b6d8e37e366c2e6a1ed52f_23","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_51a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"801ba416e9ae8e724ddf1342e334485d_1","old_fingerprint":"2eca3a2108b6d8e37e366c2e6a1ed52f_204","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_52a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2c519d4dc9182cdf2156405a5067bfc2_0","old_fingerprint":"a6517606c196f6b17a40a35641a8452e_29","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_52a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"2c519d4dc9182cdf2156405a5067bfc2_1","old_fingerprint":"a6517606c196f6b17a40a35641a8452e_207","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_53a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7617cd09cca24e40d9cb03026c5d7d77_0","old_fingerprint":"35ac5be8ac78a9f2d9fe2dd122712186_30","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_53a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7617cd09cca24e40d9cb03026c5d7d77_1","old_fingerprint":"35ac5be8ac78a9f2d9fe2dd122712186_212","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_54a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"082d543ca42c64bc90f20c6785812d39_0","old_fingerprint":"cdf7ed8db20b58b2eb0c125749efddc0_33","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_54a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"082d543ca42c64bc90f20c6785812d39_1","old_fingerprint":"cdf7ed8db20b58b2eb0c125749efddc0_200","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_61b.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6da40c622e852cda24ed39588101f054_0","old_fingerprint":"197fd3cc2ce24c87aa039b77691fb8af_2","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":133,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_61b.java","source":{"start":133,"end":133,"column":{"start":26,"end":63}},"sink":{"start":133,"end":133,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":133,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6da40c622e852cda24ed39588101f054_1","old_fingerprint":"197fd3cc2ce24c87aa039b77691fb8af_189","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_66a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"678ec2e84ede20a3c934db8cf81911d2_0","old_fingerprint":"b31c21f05fb923436f38ac753de4c250_35","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":143,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_66a.java","source":{"start":143,"end":143,"column":{"start":26,"end":63}},"sink":{"start":143,"end":143,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":143,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"678ec2e84ede20a3c934db8cf81911d2_1","old_fingerprint":"b31c21f05fb923436f38ac753de4c250_232","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_67a.java","source":{"start":52,"end":52,"column":{"start":26,"end":63}},"sink":{"start":52,"end":52,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"246033972ccd2c5507e094dce5e1a4c1_0","old_fingerprint":"66ec45a36e2bfdf95e7256d0280bfcdd_137","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_67a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"246033972ccd2c5507e094dce5e1a4c1_1","old_fingerprint":"66ec45a36e2bfdf95e7256d0280bfcdd_240","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_68a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e9974f2aa44583a7d8b81ad73d7433af_0","old_fingerprint":"fc217c2b8b6e3aad5b4ca0b908954b79_59","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":138,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_68a.java","source":{"start":138,"end":138,"column":{"start":26,"end":63}},"sink":{"start":138,"end":138,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":138,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e9974f2aa44583a7d8b81ad73d7433af_1","old_fingerprint":"fc217c2b8b6e3aad5b4ca0b908954b79_191","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_71a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"29508f179b6ce5f63d11a4230f333479_0","old_fingerprint":"793f6c0dbb9c5879d4f932ff29cf9abd_27","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_71a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"29508f179b6ce5f63d11a4230f333479_1","old_fingerprint":"793f6c0dbb9c5879d4f932ff29cf9abd_215","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_72a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"087731f09555ab57bad8c8dfba4d0e2c_0","old_fingerprint":"95f97bd9ee02834da3660fc008223b70_46","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_72a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"087731f09555ab57bad8c8dfba4d0e2c_1","old_fingerprint":"95f97bd9ee02834da3660fc008223b70_247","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_73a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"56e566f933d905cc7aa98cb33cd9efe8_0","old_fingerprint":"810bd2370262c76eba9447ca8165ef72_45","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_73a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"56e566f933d905cc7aa98cb33cd9efe8_1","old_fingerprint":"810bd2370262c76eba9447ca8165ef72_236","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_74a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8e18548a5dd684c69dd23df847c46f7d_0","old_fingerprint":"bb09bd66b4a7c882c171050eac86cc73_47","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_74a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"8e18548a5dd684c69dd23df847c46f7d_1","old_fingerprint":"bb09bd66b4a7c882c171050eac86cc73_241","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_75a.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b1e92d6dfd63a0f62dc263a702e59c49_0","old_fingerprint":"ccf8972b1b75208d55d7e409efe5d5a1_118","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_75a.java","source":{"start":226,"end":226,"column":{"start":26,"end":63}},"sink":{"start":226,"end":226,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b1e92d6dfd63a0f62dc263a702e59c49_1","old_fingerprint":"ccf8972b1b75208d55d7e409efe5d5a1_271","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_81a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3cbaabb5bac0f6081386773046b1bf38_0","old_fingerprint":"a5c4b755bba2562658ad9a7e65b816bc_39","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":141,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_execute_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_execute_81a.java","source":{"start":141,"end":141,"column":{"start":26,"end":63}},"sink":{"start":141,"end":141,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":141,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"3cbaabb5bac0f6081386773046b1bf38_1","old_fingerprint":"a5c4b755bba2562658ad9a7e65b816bc_229","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"502aac55626e8939f9f95399ab59772c_0","old_fingerprint":"99ae59571990a62c6a0059974d3ed83b_114","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":242,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java","source":{"start":242,"end":242,"column":{"start":26,"end":63}},"sink":{"start":242,"end":242,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":242,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"502aac55626e8939f9f95399ab59772c_1","old_fingerprint":"99ae59571990a62c6a0059974d3ed83b_279","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bf92a964b0e5890c65867d4ac71da7a2_0","old_fingerprint":"66c5b1b22f5376a03a44f4503a41f329_87","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bf92a964b0e5890c65867d4ac71da7a2_1","old_fingerprint":"66c5b1b22f5376a03a44f4503a41f329_322","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bf92a964b0e5890c65867d4ac71da7a2_2","old_fingerprint":"66c5b1b22f5376a03a44f4503a41f329_408","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"57f6ad21c98bb907b66b3c57e024dcd7_0","old_fingerprint":"b91fd90f4d616b80a3a14a4608c3609f_88","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"57f6ad21c98bb907b66b3c57e024dcd7_1","old_fingerprint":"b91fd90f4d616b80a3a14a4608c3609f_320","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"57f6ad21c98bb907b66b3c57e024dcd7_2","old_fingerprint":"b91fd90f4d616b80a3a14a4608c3609f_401","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"026c4dc08c59d01af8521aae88498bfe_0","old_fingerprint":"fd9e127149d6725003f4b90e9374da1c_168","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":321,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","source":{"start":321,"end":321,"column":{"start":30,"end":67}},"sink":{"start":321,"end":321,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":321,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"026c4dc08c59d01af8521aae88498bfe_1","old_fingerprint":"fd9e127149d6725003f4b90e9374da1c_333","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":459,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java","source":{"start":459,"end":459,"column":{"start":30,"end":67}},"sink":{"start":459,"end":459,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":459,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"026c4dc08c59d01af8521aae88498bfe_2","old_fingerprint":"fd9e127149d6725003f4b90e9374da1c_416","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":56,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","source":{"start":56,"end":56,"column":{"start":30,"end":67}},"sink":{"start":56,"end":56,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":56,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0685229b62fdae31715909beea5b3bc5_0","old_fingerprint":"88fe87a7f3e6bc8ff8edf61df49cd284_167","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":322,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","source":{"start":322,"end":322,"column":{"start":30,"end":67}},"sink":{"start":322,"end":322,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":322,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0685229b62fdae31715909beea5b3bc5_1","old_fingerprint":"88fe87a7f3e6bc8ff8edf61df49cd284_334","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":460,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java","source":{"start":460,"end":460,"column":{"start":30,"end":67}},"sink":{"start":460,"end":460,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":460,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0685229b62fdae31715909beea5b3bc5_2","old_fingerprint":"88fe87a7f3e6bc8ff8edf61df49cd284_418","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"cbc1f318a56d20e8f07644300d3e3dea_0","old_fingerprint":"d06726cda2b8958e94852e51337ade77_153","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":319,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","source":{"start":319,"end":319,"column":{"start":30,"end":67}},"sink":{"start":319,"end":319,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":319,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"cbc1f318a56d20e8f07644300d3e3dea_1","old_fingerprint":"d06726cda2b8958e94852e51337ade77_329","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":457,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java","source":{"start":457,"end":457,"column":{"start":30,"end":67}},"sink":{"start":457,"end":457,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":457,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"cbc1f318a56d20e8f07644300d3e3dea_2","old_fingerprint":"d06726cda2b8958e94852e51337ade77_415","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":54,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","source":{"start":54,"end":54,"column":{"start":30,"end":67}},"sink":{"start":54,"end":54,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":54,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"59fb39a3a0f61d5458f204968c2aded9_0","old_fingerprint":"fed9f03f865cb2eb3b4061e6e8a23121_151","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":319,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","source":{"start":319,"end":319,"column":{"start":30,"end":67}},"sink":{"start":319,"end":319,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":319,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"59fb39a3a0f61d5458f204968c2aded9_1","old_fingerprint":"fed9f03f865cb2eb3b4061e6e8a23121_326","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":457,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java","source":{"start":457,"end":457,"column":{"start":30,"end":67}},"sink":{"start":457,"end":457,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":457,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"59fb39a3a0f61d5458f204968c2aded9_2","old_fingerprint":"fed9f03f865cb2eb3b4061e6e8a23121_412","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":62,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","source":{"start":62,"end":62,"column":{"start":30,"end":67}},"sink":{"start":62,"end":62,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":62,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5e3dc00185b95130dc4c1de87b22c3b4_0","old_fingerprint":"1b57cf350c24d4f31e9dd54601b99e6b_174","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":327,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","source":{"start":327,"end":327,"column":{"start":30,"end":67}},"sink":{"start":327,"end":327,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":327,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5e3dc00185b95130dc4c1de87b22c3b4_1","old_fingerprint":"1b57cf350c24d4f31e9dd54601b99e6b_338","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":465,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java","source":{"start":465,"end":465,"column":{"start":30,"end":67}},"sink":{"start":465,"end":465,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":465,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"5e3dc00185b95130dc4c1de87b22c3b4_2","old_fingerprint":"1b57cf350c24d4f31e9dd54601b99e6b_420","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"460a1aa457170858c7b0f4afa008c94d_0","old_fingerprint":"6ea0bd217b54e9a51471fbf2160e1234_91","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"460a1aa457170858c7b0f4afa008c94d_1","old_fingerprint":"6ea0bd217b54e9a51471fbf2160e1234_318","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"460a1aa457170858c7b0f4afa008c94d_2","old_fingerprint":"6ea0bd217b54e9a51471fbf2160e1234_405","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0fd29ab308aea8058186374c37078f8d_0","old_fingerprint":"1aa3ab00cafcc176b48fe0a683e3c9b8_98","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0fd29ab308aea8058186374c37078f8d_1","old_fingerprint":"1aa3ab00cafcc176b48fe0a683e3c9b8_314","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0fd29ab308aea8058186374c37078f8d_2","old_fingerprint":"1aa3ab00cafcc176b48fe0a683e3c9b8_398","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0939315b6f47d338cb05beef1894c823_0","old_fingerprint":"834ee78c95d6af48aefd867729c5ce2d_99","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":315,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","source":{"start":315,"end":315,"column":{"start":30,"end":67}},"sink":{"start":315,"end":315,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":315,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0939315b6f47d338cb05beef1894c823_1","old_fingerprint":"834ee78c95d6af48aefd867729c5ce2d_324","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":453,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java","source":{"start":453,"end":453,"column":{"start":30,"end":67}},"sink":{"start":453,"end":453,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":453,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"0939315b6f47d338cb05beef1894c823_2","old_fingerprint":"834ee78c95d6af48aefd867729c5ce2d_409","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"db5532285f4c2a02a073d2da4827cb6d_0","old_fingerprint":"1c4b76547681bd48a398bced5597cbc2_97","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":359,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","source":{"start":359,"end":359,"column":{"start":30,"end":67}},"sink":{"start":359,"end":359,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":359,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"db5532285f4c2a02a073d2da4827cb6d_1","old_fingerprint":"1c4b76547681bd48a398bced5597cbc2_375","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":426,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java","source":{"start":426,"end":426,"column":{"start":30,"end":67}},"sink":{"start":426,"end":426,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":426,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"db5532285f4c2a02a073d2da4827cb6d_2","old_fingerprint":"1c4b76547681bd48a398bced5597cbc2_389","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bad5b04400868902c621b45066b00280_0","old_fingerprint":"b31261c4f004f16497d025862dada45c_96","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bad5b04400868902c621b45066b00280_1","old_fingerprint":"b31261c4f004f16497d025862dada45c_316","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bad5b04400868902c621b45066b00280_2","old_fingerprint":"b31261c4f004f16497d025862dada45c_402","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":49,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","source":{"start":49,"end":49,"column":{"start":30,"end":67}},"sink":{"start":49,"end":49,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":49,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71010c70de1d836099b4a8db5906f2d1_0","old_fingerprint":"3cb8b58571c5652bf89e66331d07efea_94","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":314,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","source":{"start":314,"end":314,"column":{"start":30,"end":67}},"sink":{"start":314,"end":314,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":314,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71010c70de1d836099b4a8db5906f2d1_1","old_fingerprint":"3cb8b58571c5652bf89e66331d07efea_317","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":452,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java","source":{"start":452,"end":452,"column":{"start":30,"end":67}},"sink":{"start":452,"end":452,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":452,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71010c70de1d836099b4a8db5906f2d1_2","old_fingerprint":"3cb8b58571c5652bf89e66331d07efea_400","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","source":{"start":51,"end":51,"column":{"start":30,"end":67}},"sink":{"start":51,"end":51,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e88fb4a50f19b3b819d1c32c3322274f_0","old_fingerprint":"7e1ade37dedb9a1fce61e7186b2ed498_122","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":338,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","source":{"start":338,"end":338,"column":{"start":30,"end":67}},"sink":{"start":338,"end":338,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":338,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e88fb4a50f19b3b819d1c32c3322274f_1","old_fingerprint":"7e1ade37dedb9a1fce61e7186b2ed498_355","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":474,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java","source":{"start":474,"end":474,"column":{"start":30,"end":67}},"sink":{"start":474,"end":474,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":474,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e88fb4a50f19b3b819d1c32c3322274f_2","old_fingerprint":"7e1ade37dedb9a1fce61e7186b2ed498_423","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java","source":{"start":50,"end":50,"column":{"start":30,"end":67}},"sink":{"start":50,"end":50,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e4f61a49a1a11e3b54ecc9e05edab692_0","old_fingerprint":"1789707c4ef2a558f5ee3de6efd53776_102","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":240,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java","source":{"start":240,"end":240,"column":{"start":30,"end":67}},"sink":{"start":240,"end":240,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":240,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"e4f61a49a1a11e3b54ecc9e05edab692_1","old_fingerprint":"1789707c4ef2a558f5ee3de6efd53776_276","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":55,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java","source":{"start":55,"end":55,"column":{"start":26,"end":63}},"sink":{"start":55,"end":55,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":55,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c6afdeddb5d3928a8dc1312f5c6bed9f_0","old_fingerprint":"21790d70cc3ee3f71c4d8bfd3ee3ed6f_158","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":239,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java","source":{"start":239,"end":239,"column":{"start":26,"end":63}},"sink":{"start":239,"end":239,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":239,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"c6afdeddb5d3928a8dc1312f5c6bed9f_1","old_fingerprint":"21790d70cc3ee3f71c4d8bfd3ee3ed6f_274","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":53,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","source":{"start":53,"end":53,"column":{"start":26,"end":63}},"sink":{"start":53,"end":53,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":53,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71be25e21dee3b4ca1add4d3f8fd003c_0","old_fingerprint":"bef8b08065aa35bda6bfcbef332bdff1_141","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":195,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","source":{"start":195,"end":195,"column":{"start":26,"end":63}},"sink":{"start":195,"end":195,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":195,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71be25e21dee3b4ca1add4d3f8fd003c_1","old_fingerprint":"bef8b08065aa35bda6bfcbef332bdff1_256","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":336,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java","source":{"start":336,"end":336,"column":{"start":26,"end":63}},"sink":{"start":336,"end":336,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":336,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"71be25e21dee3b4ca1add4d3f8fd003c_2","old_fingerprint":"bef8b08065aa35bda6bfcbef332bdff1_349","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":51,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","source":{"start":51,"end":51,"column":{"start":26,"end":63}},"sink":{"start":51,"end":51,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":51,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d21e8d649998e8e808f3d9d07c62785c_0","old_fingerprint":"40f9539e78fe7009ebbe216a23470bc6_125","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":140,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","source":{"start":140,"end":140,"column":{"start":26,"end":63}},"sink":{"start":140,"end":140,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":140,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d21e8d649998e8e808f3d9d07c62785c_1","old_fingerprint":"40f9539e78fe7009ebbe216a23470bc6_221","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":216,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java","source":{"start":216,"end":216,"column":{"start":26,"end":63}},"sink":{"start":216,"end":216,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":216,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"d21e8d649998e8e808f3d9d07c62785c_2","old_fingerprint":"40f9539e78fe7009ebbe216a23470bc6_263","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java","source":{"start":52,"end":52,"column":{"start":30,"end":67}},"sink":{"start":52,"end":52,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"51f87b1f0615e8bdedb2ffdb1d6e266c_0","old_fingerprint":"1f442e22e972aa47ee0234c5aec7144f_131","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":260,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java","source":{"start":260,"end":260,"column":{"start":30,"end":67}},"sink":{"start":260,"end":260,"column":{"start":30,"end":67},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":260,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"51f87b1f0615e8bdedb2ffdb1d6e266c_1","old_fingerprint":"1f442e22e972aa47ee0234c5aec7144f_289","code_extract":"                    socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":106,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java","source":{"start":106,"end":106,"column":{"start":26,"end":63}},"sink":{"start":106,"end":106,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":106,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"82654d706b5fca061a70ef25f1de8d48_0","old_fingerprint":"3993eb65df7f7018869d325d74c23ef0_178","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":311,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java","source":{"start":311,"end":311,"column":{"start":26,"end":63}},"sink":{"start":311,"end":311,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":311,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"82654d706b5fca061a70ef25f1de8d48_1","old_fingerprint":"3993eb65df7f7018869d325d74c23ef0_309","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a7dcf561f879e0f3a27687db55c13dc9_0","old_fingerprint":"48a7855cb66fd5002cb598ff14337411_109","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":250,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java","source":{"start":250,"end":250,"column":{"start":26,"end":63}},"sink":{"start":250,"end":250,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":250,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a7dcf561f879e0f3a27687db55c13dc9_1","old_fingerprint":"48a7855cb66fd5002cb598ff14337411_281","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":111,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java","source":{"start":111,"end":111,"column":{"start":26,"end":63}},"sink":{"start":111,"end":111,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":111,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"952d174416e8ce2dfbe84cbbd92cb66c_0","old_fingerprint":"89a7b5b3803d00d4be924fb633216fe0_180","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":320,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java","source":{"start":320,"end":320,"column":{"start":26,"end":63}},"sink":{"start":320,"end":320,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":320,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"952d174416e8ce2dfbe84cbbd92cb66c_1","old_fingerprint":"89a7b5b3803d00d4be924fb633216fe0_330","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba1725e492d9bb9be8c0265152bb6994_0","old_fingerprint":"18a3954cd42dc3e85c90541e6b0076c3_36","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ba1725e492d9bb9be8c0265152bb6994_1","old_fingerprint":"18a3954cd42dc3e85c90541e6b0076c3_210","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4546b178b620d3651e6930d99c8095db_0","old_fingerprint":"798c512a4596daa424c59aaedc64fca0_37","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"4546b178b620d3651e6930d99c8095db_1","old_fingerprint":"798c512a4596daa424c59aaedc64fca0_199","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"600c3f8367416150317c4f07520d541d_0","old_fingerprint":"7a7d00967775a860ec33b0d79f68f4af_34","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"600c3f8367416150317c4f07520d541d_1","old_fingerprint":"7a7d00967775a860ec33b0d79f68f4af_195","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bc61a31dce97a32482e65017611bfe00_0","old_fingerprint":"f1deb791b884f9f823504e6956b03ca5_0","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"bc61a31dce97a32482e65017611bfe00_1","old_fingerprint":"f1deb791b884f9f823504e6956b03ca5_218","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_61b.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"82ba1f1bc9bf6ddf23b09d72747e458c_0","old_fingerprint":"2d5396ae5369c59e6c625ba49155b042_8","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":133,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_61b.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_61b.java","source":{"start":133,"end":133,"column":{"start":26,"end":63}},"sink":{"start":133,"end":133,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":133,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"82ba1f1bc9bf6ddf23b09d72747e458c_1","old_fingerprint":"2d5396ae5369c59e6c625ba49155b042_188","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b6533d9bbaff9c91578250657ffec078_0","old_fingerprint":"5886ae1fd5ab2c2e41ae88d20e5fae4f_25","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":143,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java","source":{"start":143,"end":143,"column":{"start":26,"end":63}},"sink":{"start":143,"end":143,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":143,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"b6533d9bbaff9c91578250657ffec078_1","old_fingerprint":"5886ae1fd5ab2c2e41ae88d20e5fae4f_234","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":52,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java","source":{"start":52,"end":52,"column":{"start":26,"end":63}},"sink":{"start":52,"end":52,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":52,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ed11e2bcf00ca39cfe57ed67a35538a5_0","old_fingerprint":"f5de36f6486674397bac4ad10fdcf9ee_135","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"ed11e2bcf00ca39cfe57ed67a35538a5_1","old_fingerprint":"f5de36f6486674397bac4ad10fdcf9ee_242","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"08ef253e620ce2c88c9f760ad9e31f85_0","old_fingerprint":"862d6d35203e580c7c1892595a924272_49","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":138,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java","source":{"start":138,"end":138,"column":{"start":26,"end":63}},"sink":{"start":138,"end":138,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":138,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"08ef253e620ce2c88c9f760ad9e31f85_1","old_fingerprint":"862d6d35203e580c7c1892595a924272_193","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"201dd0809904b8db1e2fd2c716f755b0_0","old_fingerprint":"d0c90a73252cc7afbc4532a766d00856_16","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":139,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java","source":{"start":139,"end":139,"column":{"start":26,"end":63}},"sink":{"start":139,"end":139,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":139,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"201dd0809904b8db1e2fd2c716f755b0_1","old_fingerprint":"d0c90a73252cc7afbc4532a766d00856_203","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"61ef40458054cc6a79ededbbedc3d615_0","old_fingerprint":"3dc22311f6eb07e01ebb431a640e628c_53","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"61ef40458054cc6a79ededbbedc3d615_1","old_fingerprint":"3dc22311f6eb07e01ebb431a640e628c_254","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6af80661799f130f3ef616631389153d_0","old_fingerprint":"cbd4d9e17d2cb8c72b76a290bde87062_56","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"6af80661799f130f3ef616631389153d_1","old_fingerprint":"cbd4d9e17d2cb8c72b76a290bde87062_248","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":48,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java","source":{"start":48,"end":48,"column":{"start":26,"end":63}},"sink":{"start":48,"end":48,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":48,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7a33815070633bea36d4b9a7a4d6ef13_0","old_fingerprint":"6c4400cee62c154bc972b62420fb816d_58","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":148,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java","source":{"start":148,"end":148,"column":{"start":26,"end":63}},"sink":{"start":148,"end":148,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":148,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"7a33815070633bea36d4b9a7a4d6ef13_1","old_fingerprint":"6c4400cee62c154bc972b62420fb816d_246","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":50,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java","source":{"start":50,"end":50,"column":{"start":26,"end":63}},"sink":{"start":50,"end":50,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":50,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a5f8c1da86d1662215fa5267047a3b0d_0","old_fingerprint":"b1d869fb2e51fa715a8fd8516977e458_110","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":226,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java","source":{"start":226,"end":226,"column":{"start":26,"end":63}},"sink":{"start":226,"end":226,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":226,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"a5f8c1da86d1662215fa5267047a3b0d_1","old_fingerprint":"b1d869fb2e51fa715a8fd8516977e458_270","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":47,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java","source":{"start":47,"end":47,"column":{"start":26,"end":63}},"sink":{"start":47,"end":47,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":47,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"74fecd0917e8bb2f0d43080809045a32_0","old_fingerprint":"c700e6d2479fc00b527c2c51dc62d419_3","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"},{"cwe_ids":["319"],"id":"java_lang_socket_init","title":"Usage of naive Socket class to create SSL Socket","description":"## Description\n\nWhen creating an SSL socket, it is better security practice to use an SSL Socket factory over `new Socket()`\nThis is because `SSLSocketFactory` has built-in support for SSL/TLS protocols and other security features, such as encryption and support for the configuration of hostname verification and trust managers.\n\n## Remediations\n\n❌ Where possible, avoid creating SSL sockets using java.net.Socket init as there is limited security support\n\n✅ Prefer `SSLSocketFactory` methods to create SSL sockets, something like\n\n```java\n  SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();\n  SSLSocket socket = (SSLSocket) sslSocketFactory.createSocket(socket, host, port, true);\n```\n\n## References\n\n- [OWASP Transport Layer Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html)\n","documentation_url":"https://docs.bearer.com/reference/rules/java_lang_socket_init","line_number":141,"full_filename":"/Users/federico/Developer/Juliet/java-1.3/src/testcases/CWE89_SQL_Injection/s01/CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java","filename":"CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java","source":{"start":141,"end":141,"column":{"start":26,"end":63}},"sink":{"start":141,"end":141,"column":{"start":26,"end":63},"content":"new Socket(\"host.example.org\", 39544)"},"parent_line_number":141,"snippet":"new Socket(\"host.example.org\", 39544)","fingerprint":"74fecd0917e8bb2f0d43080809045a32_1","old_fingerprint":"c700e6d2479fc00b527c2c51dc62d419_227","code_extract":"                socket = new Socket(\"host.example.org\", 39544);"}]}
