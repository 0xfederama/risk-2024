{
  "version": "v2.8.0",
  "id": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
  "repositoryID": "00000000-0000-0000-0000-000000000000",
  "repositoryName": "",
  "workspaceID": "00000000-0000-0000-0000-000000000000",
  "workspaceName": "",
  "status": "success",
  "errors": "",
  "createdAt": "2024-02-21T20:18:12.480083+01:00",
  "finishedAt": "2024-02-21T20:18:31.526833+01:00",
  "analysisVulnerabilities": [
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526974+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dd19a217-229e-4c31-bf43-2b0ab09afc01",
        "line": "20",
        "column": "67",
        "confidence": "MEDIUM",
        "file": "antbuild/testcases/CWE89_SQL_Injection/s01/build.xml",
        "code": "\u003cproperty name=\"javamail.jar\" location=\"../../../../lib/javamail-1.4.4.jar\"/\u003e",
        "details": "(1/2) * Possible vulnerability detected: Spring Framework Remote Code Execution\nIt has been identified that versions prior to \u003c 5.3.18 or \u003c 5.2.20 of the spring framework are vulnerable to remote code execution. Please upgrade to version \u003e= 5.3.18 or \u003e= 5.2.20. For more information checkout the CVE-2022-22965 (https://tanzu.vmware.com/security/cve-2022-22965) advisory.\n         \n(2/2) * Possible vulnerability detected: Remote code injection Apache Log4j\nLog4j versions prior to 2.17.1 are subject to a remote code execution vulnerability via the ldap JNDI parser, uncontrolled recursion from self-referential lookups and some other vulnerabilities. For more information checkout the CVE-2021-44228 (https://nvd.nist.gov/vuln/detail/CVE-2021-44228), CVE-2021-45046 (https://nvd.nist.gov/vuln/detail/CVE-2021-45046), CVE-2021-45105 (https://nvd.nist.gov/vuln/detail/CVE-2021-45105) and CVE-2021-44832 (https://nvd.nist.gov/vuln/detail/CVE-2021-44832) advisories.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-152",
        "vulnHash": "a20834072f8c87d1296be85ed774b275962b16f97c4d6190f572d770e24e842e",
        "deprecatedHashes": [
          "af0780edb4d5c1e7f5c5ae88a2964de42abc2d56c6c75361a06a7c7f24f20085",
          "f9b76ef5480a3249f61ac3b5e4fc29b676ab8cb300b28577ef70a562059d9d51"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527025+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "58b6bccc-7206-4d56-8766-dacb6d972bdd",
        "line": "20",
        "column": "67",
        "confidence": "MEDIUM",
        "file": "build.xml",
        "code": "\u003cproperty name=\"javamail.jar\" location=\"../../../../lib/javamail-1.4.4.jar\"/\u003e",
        "details": "(1/2) * Possible vulnerability detected: Spring Framework Remote Code Execution\nIt has been identified that versions prior to \u003c 5.3.18 or \u003c 5.2.20 of the spring framework are vulnerable to remote code execution. Please upgrade to version \u003e= 5.3.18 or \u003e= 5.2.20. For more information checkout the CVE-2022-22965 (https://tanzu.vmware.com/security/cve-2022-22965) advisory.\n         \n(2/2) * Possible vulnerability detected: Remote code injection Apache Log4j\nLog4j versions prior to 2.17.1 are subject to a remote code execution vulnerability via the ldap JNDI parser, uncontrolled recursion from self-referential lookups and some other vulnerabilities. For more information checkout the CVE-2021-44228 (https://nvd.nist.gov/vuln/detail/CVE-2021-44228), CVE-2021-45046 (https://nvd.nist.gov/vuln/detail/CVE-2021-45046), CVE-2021-45105 (https://nvd.nist.gov/vuln/detail/CVE-2021-45105) and CVE-2021-44832 (https://nvd.nist.gov/vuln/detail/CVE-2021-44832) advisories.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-152",
        "vulnHash": "a3960af3cacdad59ec184c80a422fc2b993c3c24aa7ced7e176c52a35cde1e36",
        "deprecatedHashes": [
          "15ed7ebc27e474c3b285f0d3996554d677849127c8d16ee1007670ed9de3489c",
          "60f49d160ecb22db8c22261607a145bc228aa9fa5d2e8cfdc2d04c7f81152d5f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526841+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a03aec9c-e240-449d-9d1d-73359ec2506b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "85a0c7388525e53ea70f8c540f5a97812c0d01a5fd2d50290185cfa2b88159a5",
        "deprecatedHashes": [
          "2420277e29fd0bb6a2b6430cc2087a3794b2a3d7d2bb88d5ce95f37d86ef8ebb",
          "5e701acfd68844c75b2d261921ec0d5d64856e6226e0a6efbc93ee1f67715c9a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526843+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6642e2e0-b387-4f50-8efb-0ccac0b58704",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e175a9c8e998327f8f02e1d8bc89b3ba756e8a839203e28f95f6c5e937cc5687",
        "deprecatedHashes": [
          "9181895ad9029662774a3bb222f92a57a810decbd06ca9387c2af9c7c1f71ecf",
          "d7f76e52e009967880cd6f39a9f15d079e6be60151d61dab90ac5d640b48d2ca"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526843+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "398627cd-266b-46dc-8f8e-df58fd4778ab",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "48885f371e26add835ee2eb74a88ebbf64d25f94752a326f926f2845ab1c0e7e",
        "deprecatedHashes": [
          "60f028384ad493dddc4db54f678bca3643578f8b56bd1e9a20d644c164d8d801",
          "2bbd9c62744158ba33740ac2d443e4645088213d5440f4245de34282f91bc851"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526844+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d6efee4-e721-4265-8bd7-d2e030a96047",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "17def22edf6695e76ce39e07c6488ff911fa6d751aede2565028a8b1d54f0a82",
        "deprecatedHashes": [
          "42a3aad8d0f22447f3706c7095347cec4833518e954cba5f17bae245f08dff27",
          "6f98d3ed69d606bd97b8dc6364ae7a39221eb0d6e187edd8ecd8c1a075c040f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526844+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "481b1f53-272d-40c6-ab5d-ed405c4ba9b3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ffb2627e64b7d739b3839417dfe7f5a8a5aa2c32616c175aa243842b1303ad04",
        "deprecatedHashes": [
          "859d41f6b1773adf3cf4c3756a087db7009ffc77bbe9dd4ddf2100ab89d1e08d",
          "bb0bbc99b7d7e48f94c87a4ee5279804df1e4efcea56ad0c4a9a44b90752a4f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526845+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7319896-c089-4726-9572-aa75e09013c3",
        "line": "104",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8aaed2d3c4d7f2efd1088f9ce04948dc7c1c4cf920110feca0f0a857b224148c",
        "deprecatedHashes": [
          "4cee7c358ee2b64f61288fd7af03df346098a0349f713c5e7d415ba8be61a538",
          "7ac5d0d0a6a67416485e73421755590c922b6c7bf80d6fd5d491ecadbe0447a7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526846+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0433ca13-2b4e-48fb-909a-3122b7e3340d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2022b586c6db18a61650640f7dc50dd260cbc8032af91c67453673b6d8ced7e9",
        "deprecatedHashes": [
          "e05ccd195332b4416a437865ced8388ba65fa267bc8ba8e69b1124f8cd615206",
          "d2e37ddac8958205d6ea9477ab5ec1f5c2d0dbc6a1090af6ec86a4928baeb84e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526846+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4d49f4dd-c989-4f76-9df1-c51f52b86cda",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2ca04b80b01ec9698773c7ca9bf490580ee08edb20d35be3b86511d86a433ce9",
        "deprecatedHashes": [
          "77509875134eb353adbf56500f41e7ac3b08b021c922fcd8b23ebff65e0232ed",
          "f7006cade9c42a90525acbf3e55e61addd08389218e01df3b5a679d23d89eae8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526847+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "92b8350b-14c2-43b2-a90a-0f90aa2696c9",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4d52a14890bffc048baba8496ca45655f314bbdb59281b860d891c0422e010fa",
        "deprecatedHashes": [
          "c70dff8b2bf1594e0e4d9ff37d4d9d5272b34a9cd0a53823ada65b3b38c4ec10",
          "4c123f89a06fcdedbee496566ceaf3937c18d6f1fbee55ce925e60527cbe119f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526847+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eaff5d17-d537-4b36-b9e0-b9867f95f87f",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_66b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4ba54ddcaab0642323d46dd30d04b25d8e8bcd0da123cfcb158ac796a429da82",
        "deprecatedHashes": [
          "cb7c97499513e44decdce63d4702938668751cf101ef61c13a9b213ec6eab02e",
          "22fc745f8d1d27628c0df14b1ba1a13d44ac7471f08fdcd40c354c470cca0671"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526848+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5f86f23b-cc5f-479e-b316-936f11931bdb",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_51b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6285117246da6ed42ee8ecd422ff9ca0912d9ecb8878a10a392f57b54523414c",
        "deprecatedHashes": [
          "b9492fd6d80e1a3c52fda3002ed68d7d25138245beb6e578774ae213bae3695d",
          "9af0dba0094a325e73c9dd4761cafa298776246bc012fb4635f0a16bdc08d76c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526849+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "44234e8b-ad12-4e85-86a5-3c311f1e2ea7",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3a652324f7297a00fac28e2803addf6d76eb92216fcfae0a4b6719516d3b6b85",
        "deprecatedHashes": [
          "650417a15f9654abb5862489ea3cbd81623bcf2798240623c2aca4343dff6782",
          "794491e5720d63e807c5c4803485490a220207aca0a01e7e1147b874ae2efeb6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526849+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5db5c49f-5716-4a90-a815-83a5fb9d2396",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c39f6f2d7dce377e869f767c99e740a9e920069607294311b5f4fecb33881202",
        "deprecatedHashes": [
          "b5cec92c5ad98b5057fd004be0d99e038e943cda1b32c868077b0634ec84296a",
          "804087848e622c7d94479b0d38e1de1f30746bb3b6ef16116c406d3d1a62b7a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52685+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9df7df51-5f7e-4bd1-a80c-7cb6f5d69b6f",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_74b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "480a35e8fa8dc6b432443038699293cb62f9b4f768f38a8be65536be6e46af79",
        "deprecatedHashes": [
          "53bec03243db9e4d253a104055a9edf876e4f8dfd157e0cac104ecd76d360e9a",
          "dce0957f943a8c981b2b6525c6bb28ba95c84b1db8f4f3f518230fc65aefd933"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52685+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7ab89226-5f58-40a2-987e-add4de9dc09f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3eb9fa640c1f0fabaa83148fb3874bfea4887f6e7aefd54e7fab9bb78aebab75",
        "deprecatedHashes": [
          "28a3585b96499077c8f90c89c4624638896f69bd315ded7582de5b75912a7141",
          "515b141268f184788929b7f70a09143cbccb31442031bc7071934f8a72725a45"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526851+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a56b103a-7f2e-489d-be76-dcb7fc2cbc55",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_72b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9487501914c56f699055d8d2737a4ec397b4ff97d2b3ba223ac923f63dac9502",
        "deprecatedHashes": [
          "4122d0110876e7284b43aece30add19907477ba7aee040e2ef84a441d0355558",
          "135df06a83471ebae80c1dad92964dedcda424a4f6b29f939eddea9fd7ea0d74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526852+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cc7a5566-75a2-4e85-a6e3-0fe5a7b56337",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5525ec1d0f0e5b74a20dd37ce56e6b375d6854e0d695cb40803d3240fa329a31",
        "deprecatedHashes": [
          "9bcb5a2b131d684f9f7e2161868d6a6944e8b384695249c12b0ec3ddf161bb99",
          "b939a06b2fb615cb19077c5c8e11033c5eb5a3c5b2cc3c67a54712f781637080"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526853+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d15b7253-dd31-4894-aab7-1f59b83efcc9",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "72ebc292fe3909dda5c5e2747c938db82d8cd8b85d85d1c80203ba4909b74249",
        "deprecatedHashes": [
          "6ea3c00a29370c3011cf38c1bbb9141eb1c090b41cb84375e9524e474b826d90",
          "b439967c302ae20a2f8b9c333489cccd3e0ac6975fa41a8f62f9bda5533d779c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526853+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa0917a3-ab3b-4c2a-ac1b-c6aaa702ba80",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_51b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7e498c6dfd2835015757bacea07741e782a637c2822c11e3297d3e201040f034",
        "deprecatedHashes": [
          "f6bdbd0c474f2bc6f68126eeec0644b51b4738d8b4ceae1c2f27d8c900f44a5d",
          "469f690699a0dd30ab42d9060df1c0a15a38f5a0e3561ee9f051f96402e19edc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526854+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "02d61676-a0f6-4b52-8a98-c056ac90de5f",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_51b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "49fe77d05aaacfa0d560f6b51471ad99dfa83761a14759bb373d82e1ec12249d",
        "deprecatedHashes": [
          "b518901257ba004f6896de81275334797393f09b4788b3189d94627e133ea013",
          "2230ade7198c8e19b1984c073fd2dc1b26c010e76a8f7b48b92f5abc7ab21b2f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526855+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dacfa313-8041-4a4d-b34c-77672da1f3de",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_66b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "07b03201c1326c382403894454638dcf8406d3afab77fe8b853c4685daaa0d86",
        "deprecatedHashes": [
          "e24763b51e2f79760dae52f03a70be2966c5d83675ec640ce225174eed83507f",
          "f664467f784c617c828e5df4777a8d5230de8fa49b10108554e2eac480ff9649"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526856+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7c7f9a63-ba45-48c5-a247-4b9e8643b006",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_66b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c98b5f4acfa09735606f66c230f9b612808ae2f44cc2f84417e86eaf3def151f",
        "deprecatedHashes": [
          "acdd5a72c8d674c1bfa1b2cd4c2dc5821510973f1824709a9ca8b289aa76303b",
          "4039f4ed8c1ff961cdb659c80a01d7e127dfa2a69a90739758be3e496801b841"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526857+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "beaa6037-c235-4140-86a1-7af7ad2c36cf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "59e7f2a4a84685a6a66f948cdfc35c7b08108e3b0233a7b134580663920c74d6",
        "deprecatedHashes": [
          "32ebb29c229dd59a5a50f4b00cd973dce075f77b86bc07c1bad1b697ee3e994a",
          "073f651c8c959e7cb65a00ecfcb5345a3427d424dfbf9fb158df1d4b4a5c7fb6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526857+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9e3e92fc-2582-4fb7-8709-7eaca0cf2658",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b1453ef69afef0e08e6a5b9db34363ca771fda0bb88b60246764d1a5aa5c6e2b",
        "deprecatedHashes": [
          "114759b3d647eaa71c13494db783dbce62c610302a54129ba6b10477f3c4bbf5",
          "770049632a2c00669faa12f847b4ca526ac95fadcd7971e09dfc5e4570aaea8a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526858+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ac40ad43-1202-4ef9-9545-cc2b108544f7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9bffe2d4fabdbfcd0335874a3e8239b4d8eee89bbb8b32bed3a7894c1270554",
        "deprecatedHashes": [
          "da3cc74ef2c29d7ad212de659c69bcbdc5de0cd8720142fd026a37a16c564fb2",
          "492937070e0f04bfb3635d89c0bf9116e1408d20729e13f91ca47bb7ea7eeb3b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526858+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "90915a6b-51ea-49a8-9f4c-626a93c04e8e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fa2368b1c1736c3e456889454b16cb3a1e319ec813426ecf73e1492387e48408",
        "deprecatedHashes": [
          "8e5eb96ddd4e90d64bf5e32c1c990df96ffc759ae04c924ab4288159f20b3e3d",
          "87946c11d57b28cd5e1df6465f51240e19ebb7638fa0a5ae7ef69bf6ca6d0fff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526859+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5a2ba6c4-62d4-4245-9bb9-551989c41a22",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "34ff0476c80a743c729ed725cf3778b4f3263d6dd8b20937c7ea70d887337ac9",
        "deprecatedHashes": [
          "3fe7495ddc57bb8fdf7f031fc1cd136bf012690e6a556a866c6d8830b15895d6",
          "8e54783a25840a8d968d59e0d6df8ece82bc044a4f663bde3f93c84b58ca6dab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52686+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3b4289a-0c1c-467b-b46e-5e9442eb0d49",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_53d.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "78161a5a4f4bbaf845e084d1d5eb95ba545f745963498ab83fe54ca8dd4e3f1e",
        "deprecatedHashes": [
          "f70154f8fd2b21cbc7b427175ffc105878e2d49708f968df921086ace75fea6f",
          "a1dca5650fc38d8e9806be472701e7ed8147ce3dbcd6a0a45465d8bb0b516918"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52686+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "beb5c5c7-1c96-478e-a23b-63a4877d6093",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "dd17a5ee775d7c5bb4fe2cbedf132a5c5a53df0e2deb17966dede6d23677dd85",
        "deprecatedHashes": [
          "82443be816feba09b1ab52ca56480827feacb98d9c8e2786f83b99984935a237",
          "857175f5ebe2f8a14ebf57439c6bb13d240a6e6f998588d283a3d08de4e7bf63"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526861+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "02d39022-c9af-46c5-aa8e-c73e6d7a65e2",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "91a984c876737c93d4eaa51c8d62766e9367fde4b7336c8a73a8e5ab6aec2795",
        "deprecatedHashes": [
          "9c4a8afd91c85e39e8c3107ff7ba4a7ce06d2d50be7c7b65fb0ce594e7dde073",
          "413b2395ed3ff0057df0dd21805170333341b585f8c73da1af12f48442a05f1a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526861+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "469a2914-c6fc-43a9-9c1b-162c6b652eb6",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2fc60ca9ef89ef4dbc6c8ae106947590de1b2434a84ece9d5c15fc67022bc643",
        "deprecatedHashes": [
          "fcd15abd40471722b006c44d6458e03a37a29657f50cb873fa62f96fb8439ed5",
          "7f661a9eb2f866cad96265c4e08526ed4a77a45cfd16d8376ed84d271f6aa880"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526862+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6c877b01-f389-4f13-8169-49da776042e5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "164c540a848f42f529db50d8a2896b14f4468ac0316caa3f760fb6cd02705844",
        "deprecatedHashes": [
          "02f0c37fb57595f91358a797386ee5e4fb058fed1380a1722fde9e0d7f23d18d",
          "1e880df28fc90b707403ce6970bbc0bc9e6dfe63616dcd7f5e2cd2b8e6de0da9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526863+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "59fea045-719e-45a9-acc1-1dc21254278f",
        "line": "46",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "085fb030461a36b98ce80f1a5e60f4c09abe7c326c56f6c2993c0ec4e81a1625",
        "deprecatedHashes": [
          "2d106f5076b92384aa00e07cb95420e081f33db7ab9b3ea9f1e51e74e07f594b",
          "3f74372e6ea3b3cb41f0857b0e5e90915f35eb9e4987e9146b780c0fd2e1cd4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526863+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5fa9a05f-9988-4661-a958-05e293df2f40",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f3f5c4c3d35d0e593f0c303aa004c75523dec453128d233a5c23b0f153ff6cd9",
        "deprecatedHashes": [
          "1704012ce4daf7da037ed35e1b02a100c6c445d4b1da956e4ef15cb018535bfc",
          "6363121c947851d5b1bb16203e1d72742502557ded2f63e508774f633b7de61d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526864+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "252983ec-43c5-4bf7-a6e8-075a545e84fc",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_81_bad.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "911b11a98de55ae260fb424e23b815b1700e5ebb2526b218e6113fee63c81573",
        "deprecatedHashes": [
          "533a5c87f31b295dc6cd45ce1d9d97dbac1023d6d920e932805dc13d5f3766c2",
          "e5ee006d7baf1b73df66a4f0e64f771b5ba295bff3c5a47d58bceeee8564104d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526864+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "82cdc872-fc13-43c0-b520-e35046c09dee",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_53d.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e3e3724bb0ba142e11e2d0515bbd2f45b6881e8351c28d4e642ec5c4ca228cab",
        "deprecatedHashes": [
          "39de9f90264742df3a6be999bbc69c4b6b120778b02185a3165a8e77e56554d9",
          "de6dfcf73105f6515eacde4fa1afc2ee0903b4f3b7cd88d6a8c6b8861ab4c3aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526865+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d5c36046-02ed-464d-a95f-f34134333499",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_53d.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c6d46a687994587c38a17df05f34746d2dc53bd0c90014552f3b46e0b75f361b",
        "deprecatedHashes": [
          "0e73bbeee519e9b93ac8b44efbce56de12a2b180aa95006c17c5935fe8195326",
          "1e33ef01138c55a3ac16d334e5238c15aae3754fb80ef3b675577b8b291aad9f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526866+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e5ed8763-417c-4d9b-b2bf-b53f6161741b",
        "line": "53",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "60b15bdf448c00fa9b6d356964fed58d0ef3ca9b0ac3157d21889452e347d112",
        "deprecatedHashes": [
          "a8795368eb3d76214807ec791a29f958562e65d76fc76bd8e1c804920ebb8b50",
          "6204790a7efdbd42eb6fc0bebd0e464dff5b6afa646dc15976a10e0960b4a5de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526867+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "114e3b57-5d19-4c90-9576-f609c8e1fce8",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a6dba538ea0353858c09e2646c2bc7c9aa7e6c888f2c7b6f01839bdf63d8c4b2",
        "deprecatedHashes": [
          "24bb9138b93c1e427dd61ec27978b4031f4415a52da96bad311ab7f9347435ab",
          "c3aac4322fdfd3f3db322fa23e52238eda7d8a4dd144db8faf1b8b3c6c6e6bdf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526867+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "51d183e5-1e31-4edd-a65e-afbf8e51b218",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1b9439371f87dc18aea4c27b333a12dc9148f43a8c46773b475f160e1ec421fc",
        "deprecatedHashes": [
          "7dcdeea3408e3f2e1a93004382fdf0d5805efa7f77eba44bcdee3017b6756276",
          "16b09683ad159bcb0abf35d48b3b520b86f9fbd93b389e133ecff71f221fee3c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526868+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "364b7bdf-57ee-42c5-8b4b-36e6fb81319d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "35044126bbbb4ced545293898072a00a4c11825e8499f46c025c3a08a1f08361",
        "deprecatedHashes": [
          "b283395b9db6553661bdf5e068d5fd87927524495683d433461cd3f50c8ee5ba",
          "9ae35572bf3fcb1f95f31fb83d6db5eaaf13caa95e8b3ef801983a5949fa756d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526868+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3112597e-6386-40bc-89ed-6333bdc50a3e",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "897affba79eb6522f647a3ac07337e2f4edcc15c855f793390fd4e61fceed8b3",
        "deprecatedHashes": [
          "1b8f246214da8c58ee98487ca3d19c015781791bc01274eaf5edfbb6cd45ae72",
          "e678cad389e9e6054bdfe9acb5df64211f972152ca67273c9eca85f869fe759d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52687+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eecd70fc-82a5-4d25-8ad2-897d6474941a",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "27f2717e14e5743315e5e4e4933d7a52553d86cb7674b0d9e972f935cc721b1f",
        "deprecatedHashes": [
          "a4e5715591a38939646762ef2ce03297da36276319743cfbb3ce7942722d6e54",
          "0d0715537959f17d08c3e5110d753b91a300c48f4261f457c3607bebd700f537"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52687+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3975440-df53-4d47-9f96-063eddca5b5f",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_54e.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d3ab322b7c37684f7f82c100e1afc42c8c684fb072a004a55b3e26ad6fe587e0",
        "deprecatedHashes": [
          "165812b590c2c7ae7b1f8a5d477904844970f15b425e3075df900cbbd9f764b9",
          "a08be7366ea80df6e376f3a650a95b5b60eaffce2251c8e7f36d78b8a5ef49d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526871+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ee086fb2-2f87-43f7-b8e2-341034b8ebc9",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_54e.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0ea427536aba3269c06a054ac0d787aecb55ce053a89b3beb589b6be9d9de5a0",
        "deprecatedHashes": [
          "9d4effe822ffc68df99ede29b69698cbb3dab5c73aff5ea15fed4d5f8e99f1fe",
          "fa66f05ada189051448981daff37f5276bd0010ee8d2bef7ef0d7556a9d6b73b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526872+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f5f8c475-82fd-465a-8566-646dadc51b7d",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7cb9bed97f3d3acf84181216b4b043b24fd528cd677a6e14585b9aab3d837d1f",
        "deprecatedHashes": [
          "de3d23c1055a0bd75c96243f1c80b9bcda73543d79da4b6e51cbee5cb4be2686",
          "5cb58ed64a16a98906d6c2fa048b1230f049ee8458cab08d2ab676fac9b2588a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526872+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "959c37ff-fc7a-4556-9892-f3b98462a074",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1f374320a25112e53abf286cb58d20d1df9f27f991e3647fd8f4fe90213e91f4",
        "deprecatedHashes": [
          "58483e2e0fb4a7a8ba85f1fd8cf60da1fc41c489f08aa42782028f50a6eb47f8",
          "65143ea1ccd154852788979aa42c28bd1051d0fd127d167c3b1fed616524da8d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526873+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e85e8f4c-d011-4344-95b2-4c693fcefdc3",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1cb5d10469219663bd58cd601a4044112db98ba692a0bd4f694f0d2360d29c9d",
        "deprecatedHashes": [
          "e565854d8f642ae4994121b0a96ee70b196027f8a43c2edfa202f4679d95fe1a",
          "2f5b7cd641afa8b605e7b8ff2cd3acda3dfddc92afc80a86c684e90ac367023d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526874+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d999db32-08a9-492a-933b-edc92f8b71c4",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_81_goodG2B.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8e3acbf6c87be1f993bbe4c3d3b984a7ea7f0e33c6e6d16f8476f81000291d9c",
        "deprecatedHashes": [
          "c997a6c2083fea423c476cc25885f95b9183d204471eb384849349c5e846e17e",
          "43ec35efa05b39fdc3f2234fbe45c68725813e25ae4b77da1abdb2b50b8c8258"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526874+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "39b8690b-3a78-4391-bd24-a4947daec7cd",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "035978787b1cc076c777c9e508b4e6fa6e9b86a42a856fb866085d077e6e1355",
        "deprecatedHashes": [
          "6f0df8aa63ac87e07a666622c1daa6500e0793f2b0cf31322fb565520dd34b06",
          "e6ba9f3e712c6a6da40374a494ce33e76ecf6a4c7f9cf7a2ece171c6045ed632"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526875+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3b259658-b5be-450e-bc98-cd80a6618d4b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1700ae527731b0a5d9746cc24579faa1cdb51fbe572b132e55d897e29215adb1",
        "deprecatedHashes": [
          "a71d2bbfd99294dc22ebeb93d35716bab76e4293bec0a32f5f0b6730a75e2b55",
          "62b27f81e1e57707fe3b8c979054adc19e40323ca6231efcb73634f1ba1631a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526875+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8719bf29-1e85-4da2-a7bd-b6dbceae2b61",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7bc466de794eb335545d722e676acf38f53868f885d89f9b51f45d4a2ee45db6",
        "deprecatedHashes": [
          "544f1d3343fac983c42bea5ee5711309519261f0ce2bbbdd334124b6cd8f2dc3",
          "d160c9934bf42dfc033d843844faf8a44602a6dc83d7a03bc1b292faf755f0a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526876+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1efef17f-2b43-427c-a6ec-c3bc56e003ea",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1d375703be7584f9826c787e8dc9ece093f9851d18b722777a50d9e431a7d283",
        "deprecatedHashes": [
          "612cc77f7580979fb724eb0ce811e261455d71bb81fa55948222c1697669a6ed",
          "96ffb366fc69de7527a7320b2e8eb68cdf7ec2b5dcbe69074a0e12e43c7fca13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526877+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c8ed1d6-547d-45a8-aea4-93a9a2bd9c2e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "70f1bdc3ef143c2a614347890cff4a9b2921f4757cde482efb344025e6b74ce6",
        "deprecatedHashes": [
          "d0b4f8a0046e5edf5fcd8bc259f7e70d3af5f46842f420c2307ddf9e19925515",
          "2e2c81ee991aa8ca60666c51d46e7dc840e9acf5cce2149feb5784ae7833788e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526877+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9e5e928c-521c-4539-8aab-f2b2be6791b1",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_12.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a06ef29a1f5dd8fe57bc33c67e32e7ca44c6ee3509acccb652bb62b0dbef49a2",
        "deprecatedHashes": [
          "eecba4057132d39ad585297fafb031b5d84e65450f9e5114b933d812f722e84e",
          "19c372336425b91655a085985c8f94a446479e7790d17947e0e35e7154b9ee00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526878+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26a88b33-4438-4d3d-98c7-66ca03e9f1a9",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_12.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a366e017b8c3c14a1f83fbe91f0bc1628af6d2101d372f6849ca83765f042a56",
        "deprecatedHashes": [
          "4311c1462dc7b1c7b3f741fe3141439212ae3e5b3118a1fb879ba5fb9610b0ad",
          "c29f23f10d4f2d46f06914ecb73543b31567e0fe2365d4fa48bd12d5f1d85e74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526879+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd442499-ab66-439a-aaf1-96abcf89cd2a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cc724e11456b2bc0e59c3f6676e6eac36059ded3c4cc13a65794131757dd5573",
        "deprecatedHashes": [
          "a564cf083639233476a2ead75287b3405af42a15b215518773e4643018975df1",
          "3a2d52378e8d287c4247974eb500eac2aeb588e1e54eb570e1e38dc97968f263"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52688+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e9ded1b9-a4c0-41c5-ba6f-083a8bee2bde",
        "line": "61",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_12.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bff233ad71782ffadcc1369143e7ef4b0cc2c53649ee461c75aad4e62a286098",
        "deprecatedHashes": [
          "d27de569f7d78949952b88de0fc1bbaa9baa32bec17aa1014d27e414149f2af9",
          "f31220c2a8b7e74c7b86971d42ebdfc2913461dd80d4c9c811766cd208c6450e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52688+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a7e9055f-c552-4eaa-b95c-bfabaa734151",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ebdc4fc7fc823497f2b71ea81011974f74da6b45cd0c6253d69b93996e2a03e4",
        "deprecatedHashes": [
          "c353b6048bc14ef50d3d8c05f87a5866cfc42b66eb836956c0e3ea3477e91406",
          "e8df3a29827fb63723c401b9e2950a5d97cf38643ef05a2fca44392769cc9a7c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526881+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4a71e7fb-5b28-4ec5-8907-8ae47826a522",
        "line": "93",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ad8af2ad0b56d4c9fc3969b9b7a1aca85b69b0d3fc38e5d53547642eeda1a788",
        "deprecatedHashes": [
          "b105c6ab3f73035785c0e3fe176a068375e1002e60c12f569bdacbf3bfa62310",
          "009f968d706aaddab2cd29d90fc74d12594f7dd09a1a85b296fa7015039fa18e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526882+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37aa391c-fc0e-4d2d-ab35-8366a0fbf5ce",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81_goodG2B.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6c22b92275349c0587ef7a0e3497e0e27fd4a72a922eb5b7e7cd096f5c14ca42",
        "deprecatedHashes": [
          "c47d4d29e83eb53257dafc3f4d09af849db636cc99910469f1dad3bc6e542865",
          "4767fc3b0aeaecd628a6f2ff2720ac0c742f07be546749043cc2ccfa5063e911"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526882+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b89c0c19-eacf-4ef0-907b-b700af9c05f0",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81_goodG2B.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3defc2f8d1e3caab8382b9e63c2fbbfe2427d293622591a2a78fb0dec5da8730",
        "deprecatedHashes": [
          "0588657e8b2bef0c4540edbd1cfa1ff8f58b3505b7c516a01723558f138d6a29",
          "1004c958596bb2b24c5cf009320e7cdb08ebf99d196f11fcdd68f34512d7ffea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526884+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bf5f7c9d-0bce-4df8-92d7-f238a4f56691",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e363b3728b00cf08373f902ffc2a52ad4c17b9eeab5a039d08eddc46d41f8de6",
        "deprecatedHashes": [
          "725b5fafa336deb180863dfa5cc11c0c3a66e96e2cbaa15faa335e8581a6ca56",
          "9667772d59cb647f4d0a8ae7945d5d556ed0a85fd31c04bdc9f248e0f8078db9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526884+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "de516db9-69c1-4fe6-a030-ed0db14a8dc5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e802cbf32b958797dc5cbb1dbc017e6e163aa9f9ce3f0b40bad5e0fefbec5115",
        "deprecatedHashes": [
          "68759a960875f19f94001706cb575d808f40eb21261fe7e1fa4c95d8f3bc8a4b",
          "08064c9f092c4f8e10053c37cbad1f77e2f8e3bd2606fabf3a5bebb5369a8f84"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526885+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b04be96b-dec8-42f1-a656-7f502bb1a139",
        "line": "112",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c705c7d7d6007e6cceb9d43fa8d2ff3361a426596f213a123130f4a3e7aa1587",
        "deprecatedHashes": [
          "4c4971b5b449a171ca63f0344b5b5dd7b2a569b8eb6b685bfb091997ce5594b5",
          "07052d965d90f49a3c636a8d09a5aa45cafc230cb106f49f24997fc7d5f9414b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526886+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3491e0ec-7ad8-4a35-9a09-b3fe13feec4a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4a0ce4273477ab1c03efcdb056629310ae9d7fd0ea2e0bc3e92bc09464e0439f",
        "deprecatedHashes": [
          "d755d520676b50d68ca7e7512316a3cfd21ba58d900b9b87643e202a27af613e",
          "f5fea0ffb2f532657c547917eeee934cf17b5ce32bd430bdeab7825dd30a7cf0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526886+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d5f5ff3-8f73-4d94-8140-211f12fd4aa2",
        "line": "126",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_05.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "22d3ed28741bf823e1fd23aaa569243a33a80cc7e9c73d5faf88eb657f8d01cc",
        "deprecatedHashes": [
          "71836ffac70e174296872ae4f53962edaaa2b3a39712ed69c87e95bfa8044d4e",
          "015303c9b622f12ecde09d1d12b7e7ee17dc0caf3ad438525358c166d3df1355"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526887+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "939b40a3-0006-44cc-a63b-8c143ac89b8a",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_05.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0098bdca6fec1d9c837fc544444d519bb09110616938639c82dbbcb2c70a5eec",
        "deprecatedHashes": [
          "ed9f126522e75be3f3c284d1f43f511a0a5590e9d705c3b18a43abf6662e66b4",
          "07b540cbc83e5a89fdc2ce8a08b178651d2ec2ce0a53e9dd0841204b1914e789"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526889+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5be42052-20a2-4973-a6e8-79f798a49797",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d7d4525a24fbf177ef775d47799e802ad3905da139689defee631595cb43f8fe",
        "deprecatedHashes": [
          "1e1487f95f316394980a1d0477643b07fceb60e9c445623e916432ec9804b344",
          "46d5ec11374a8585fe677e04455bbe0dfbeab4ce21946f5378ee8f9b351d4b5f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526889+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "03a73bdb-fed2-48da-867c-4bacee5819be",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e20c0f34f857fdcc332d7365d1d0dafe86c40a0b959bde9ec2bbb3ea1e52bb5a",
        "deprecatedHashes": [
          "c6dce5edf32c7a0902937b5848e83382752e42325ecadf74e0020b1e597e6289",
          "3d2b800f680760d3a83a5ccda81d04715e15e6892cbc2d19f1267ba275ce252f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52689+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a4bd24cb-a667-4090-9bcf-cd66164b9d90",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a6009984d7008d839d956f3ce116a26a43fed0c5e84b1212396e06a34d932857",
        "deprecatedHashes": [
          "a38f232bf21431f92756ff99f5e22ee394e1fe609f80549a322b6ba623e04c3c",
          "8f5905351716fff93e575eb5db4dd55ea45582f6b938448e5fedb713cbb2211b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526891+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b83e2bbe-2655-425c-ba93-4df6ac5e391c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cf6fa8a327209953f89136156e4b42170a184febf15cbba762517340cd6d9dca",
        "deprecatedHashes": [
          "b559d476260def690fd44303de02dac9f551c8fa8771f250fe93b5e6e4cbd572",
          "c057129517aba3bb021c30f1ff863f09e95c55bf2cbaa486676ea1ae110300de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526892+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c2a97a68-e56c-4e2f-9d34-f0f6fb9398c4",
        "line": "50",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_01.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7cabd502cfd0f8dff36e0468e71703c03aaeaf7e8a56f793a71df2b28ffb7ed7",
        "deprecatedHashes": [
          "5bf3072caffeba4b4bb6b235d35089f948632849df7b99d71fa6c712aa518c9c",
          "90f89487d006fa4164766feb9b7be00c5776aa213f98e260e4e744a0d96f102d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526893+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dde9db00-5260-4462-a12f-bc190945088e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3767c24518c3ad7a8e3a68378b46323ec4dc1f2d18e7352c91641d3f9d8f5716",
        "deprecatedHashes": [
          "22c831e5cae56405c3d6ef1518f822095e142b50c09d6895c269f09a08e61679",
          "e85d5e63364516a1521e85b04c08ea3d5fbd33567f42f457f32c94a7c9c546c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526894+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d373758d-bf0e-42a6-9eb9-3f30d0b01514",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_02.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c56396927fc8ad0ceccb2e3fb2902fbf815f518c70e0ba03df92ce41829521e5",
        "deprecatedHashes": [
          "0c55b755c8cde46c9550c08426ffda1951f850fff9aded9b7ccdda6c1c5dc31e",
          "a7fddb38017cc78235c929ed2de2a3aa01577a39ac50d7ec87ee79235c03d7a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526895+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dec9bc2f-2c95-47ac-9cce-07ededf9a681",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_02.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "99d61956cfea1ecbf7a6f0ac12a89d59e2b5b096dfe1741fa2e09bab04ab5363",
        "deprecatedHashes": [
          "272817e4798ad7ca244b2dc4d8450d974b4dd3de7387e4a16cdce5e2120e1940",
          "dbbbe0e036236adfe7868cb79c886895e028b6aa872ef92193249ab0ccb3b3e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526896+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed00afa5-9cd0-495a-9472-a1b8d10252cf",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "764afc5383cddc347695bb27b76fb007c7616ce8a88d17caa43057d8ed51b897",
        "deprecatedHashes": [
          "dd06d8c09fe0a47069490a48084ca7c5a11a232d5bccee6fb490d6aec3d8d66e",
          "abd885915dbca98875c4c672e1966a805a763f4cf2e52af7348a5a9fe296ca4a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526897+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "216e0528-1056-4254-9332-922e6a9e10e8",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_81_bad.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "369732914cd07dd5f3e6a69ff24b277f6c663ee3e1a4e3f0e9d98fdea05447e4",
        "deprecatedHashes": [
          "be6847b6cbf09686c0a0da835a146d1bfb709fd341ffd64b9cf899b479f59720",
          "0086cacf152238e2aada916287fde1002cad05b566a43f2876599dbab45f25ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526897+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c96fae21-c29f-458e-881c-5989b1f73db9",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "38420f295ba40b17341e590e2ff106f751d5157318a3fbae6b3d4a9d6cd27675",
        "deprecatedHashes": [
          "73b553c9b88dce2548895f15b8ad0599b466e9a65bdb2a5ced0c811cbb7d9b7e",
          "a7d1de2c9a86efbaa7928da3582a2d082bfadb1c52691483490109d84161a30c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526898+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a53b504-ebf2-4ff4-8cb1-01228e48f1d5",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7b8e68d6ce6f59eeb3bbca85b8b7933d960c30c2685e9db3cc066787c99dfb25",
        "deprecatedHashes": [
          "f8620f925d97e4cff4a83abae7f0f4d772f818ccfb8338bf52e55dc77762829b",
          "7927b475c2bc613fc576cf156946319e6ea9549afbec6ff9b4ac6eec30e4ad85"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526898+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10dd957a-f5e4-490d-8555-90ab6defc0b5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d560e622483278dc467f1f76f3ba04dafb2327e11fb1e3ef51cdeb86f74d51ba",
        "deprecatedHashes": [
          "1e37efb770bbde9b0d72e7c97c324435fcc9a8d97d6e9e22224e2b7e95c588aa",
          "40af4b3efee5d84afb2bf52e7851664423963143b851848129cbd72f05c878fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526899+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa0b67c4-abdc-476b-a673-9f3bc7d1b9bc",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bec51c1afdb4574134e7ea5b623b107f0f43bf116ff94d093d7bfd184f422e78",
        "deprecatedHashes": [
          "2ba125f6055f24f7a34ddc3e21e91f93a56ae008f04896a131b3a84e96106cd2",
          "2c8bb27b9f202b768b5d726d4f3c28c6ed6c78f23131d5dc21c0203915388b79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5269+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6cd8a2e4-6d22-4444-8b7e-cac112412c8c",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_81_goodG2B.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3e13ddac1051f47ffecd43849a315fae07acc63ee202da7e48fab943d165b973",
        "deprecatedHashes": [
          "2fcf46e07605f35ee0a573db665df39e5550160db5956570d7688f09746c44fb",
          "8613056d811f39c49300a2ead4ff5deb7212116a1cd03efb05e52973df1f4f6f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526901+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "434d6dbe-9ba6-47ea-9739-1085c10cf56d",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_81_goodG2B.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "145d237cc0fd5dde7447c7d909da407a6103f84e6753bc7ac82ec1a48a571a56",
        "deprecatedHashes": [
          "935d03bd14c1a2a4b743704cdbc4513305d2c130c05f9181d93d91cd1c6a86cb",
          "7f0b08e110c07d90016dc1c6e2cfda20f706a9a5ecaa09bb38887377a8541703"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526902+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "14ba5732-024a-4d68-95cc-1f8863c02b33",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2bc0df93d83f30db1229ea932a9af8b0c0b25d01534c415f41de419b4e084cd9",
        "deprecatedHashes": [
          "02e7af5d7dbe544b9069b548d334f31a28ec8dfeb58b3cc04ee11f61c3d5cb9c",
          "a459dae750a292b67dbf0d55a4d660ea09221700e9e7654624664532152bacda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526902+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f91c121-8962-4155-9394-2f6fc4bee609",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_53d.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "897f58081f00be18401985d85889e064f044b597d3575330c7ff68af4d330a50",
        "deprecatedHashes": [
          "2a12ff1d80c612572a4a7c060448e3227694a1d52f0e807db150982146bbf9c7",
          "28b744890f2877542bd52b256e6145b493076247f5c284bf907556e37620c3b1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526903+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "311c60a4-0c0d-4d66-9b53-5edc04042e43",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_53d.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "324dafc4a784419cbef7f8d46116415647e540201cc90410cf4f12a153312dbd",
        "deprecatedHashes": [
          "795f6f388d8e9420c606e0a7a7ecd10963a9b3e47551ae126983e4bc52fb868e",
          "74a2355fedcaaffdee199ff4949489570bfc6a64c23c3babfa6c017aab296d1a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526904+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cbaa3d57-18ff-4e9d-90a1-fa8aa5c996cd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "aeecf50c970c751e57bdfb9a26f0fe2ee3fa784f8dd58587a0904d2184397132",
        "deprecatedHashes": [
          "9da309d03e9afaba8a3ae3ffa4d5a84ba48bcaf24b08c41889c4d4f29f4d8680",
          "175cd2d7d3618fa0521915cf6c13eb7a3ac44970245840109727ca206642ffec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526905+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce4d6b93-6be3-4706-9a9d-a06963ea1dcc",
        "line": "52",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8214eff984583e724ab259146fd7e32b9e4ccb4ab98945fa9dedfe9d900b2ce1",
        "deprecatedHashes": [
          "d543889268f5f6ce60714372779db9159a826a970cd2cfed299162d83f0c7f30",
          "67e63cbc66af3e39442947f8208e09a86cc6a84f1681ebfd5725072a46e4aa0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526905+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "64afddec-e33c-43f0-9d6a-5f7e21e3ee3c",
        "line": "108",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_45.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0c477f9498532cbd05475e986114ce4e150b4312f88611b0426ad04a0484950a",
        "deprecatedHashes": [
          "101da7f5f45441a34103316cbb6454ea2b913b7ce56476a3544decbc805c07a8",
          "352b37d8fe18d0e87479cbb5e63d56773516519500370b91194274e97a73b085"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526907+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "039eb32d-d560-46d1-920d-a713165a296c",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "814a33295f3547dc09d55593a9953ef4fe1b42242440063763a875217e30f388",
        "deprecatedHashes": [
          "b46e5dc383d5f816335504978cd099a92df627543ab0f6ce8c6e720129ec28be",
          "ecb60e29a738570ed5da43e967f1ece378b031c4987b1000df51d45a00765c6c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526908+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e3a66d9a-2708-43f9-a8e5-4bd07dff890a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b801c18959963a5374de84f50a9df28793e8bb0151b004d11b6dce87d383baae",
        "deprecatedHashes": [
          "2f1376f5d30bb5e579a9814dba0b52eb2dcd9236d7bccff6281fce08d3aa4be0",
          "45fa820d790105ee8ef914975843004fb26d7231b36891ef46273b8287586a66"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526908+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6a37c081-76a1-4a94-8f14-c7c12105c24c",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_14.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "40a989d73996baa9936e5b5d145936dd7071ac26ffff0d2f4335cde57b66672d",
        "deprecatedHashes": [
          "83443fa2fb4301cc6e1e7727dc1c2fe5d1dbe8479108933f28b3825701ad0069",
          "c4d421a153cadb288f1f29c0a906328068514126e428a730791ccc897886d6df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526909+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4574a93e-a388-486b-9c6c-25faed952a40",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "861a144def0d777aa1fa94869c1a8503aaca990c973d3b68abeea2a85fe31ce0",
        "deprecatedHashes": [
          "64c4746fc7c4bc7099fb1b7e1d84acb8c2f410a5d73c9d6b7e07f7c498c8a80e",
          "6a663b67325c48e206d2ef72c98888d19e9a6ac3e7c00febec3da1def89b6bfd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52691+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d665302c-1613-4e28-ab0a-6360db826690",
        "line": "105",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1df26c4035cacc575de8d8ac9529e4e8451aeb439bea9674d803ba699d1f7074",
        "deprecatedHashes": [
          "6b5314a096f04c95c7cf8528a99337506d3490f93e737ac0d7321aebcce8f382",
          "1a6a2d888c921828a2b74d43ec95f5bbd52af57916a4413b9419d01e6bb2e7c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52691+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b571839-0e4c-4b6a-a454-6163534666ab",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "70b13e75df03e0630dbe99f314619275b003f0cf0d7d409d1af5d9cbd2d5e064",
        "deprecatedHashes": [
          "42fa97b84254a0a6f586084929c7a3094de6590a0b4b5d1b3e50e1764e8072d8",
          "3d09e79c22f2989533e7d235143f017c53dd701b09e92b23d8312d76dfe82b1d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526911+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b6b700f-a42e-4709-be84-b78826d57be1",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2184d76ef65f1da9e387718ce339c5e8327c363de47010486a1ce2a6e084198e",
        "deprecatedHashes": [
          "655f89b5666d2da6b7e553704a6cd3175f18d4c0ebc2aa4edf9b144fd781a7c6",
          "e08b1e3fe5c962230b391674bcee0768326af01a828e44391a88eb1c933bd804"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526911+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b79ded1e-9ce5-4eb3-bbb4-17539ce949ca",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8a24df78afaca66d7aef7c261b570784eb05fedd2182f53e1ff617b08ee9baaa",
        "deprecatedHashes": [
          "b863d4d22fb2915039371e8b4e2426e287d98a10dbf938982cd3dcbec6d1ba97",
          "2257d6c88447c74c75e781a942efbc551669766f5b983632c05a0a395edbd45b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526912+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ccf2ca1-923f-4aa6-97e2-65937423708d",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_61a.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7eab6184d0e7e2343a8dfb6c8cea9113d471bf037c7648b9f907c76bb12f76b0",
        "deprecatedHashes": [
          "8c3b977442a4f227a38a13a12400d51055ad496258a5aafbe70e4afa3003b297",
          "4895b57aad176bd25e6041bbab929bd5fd899f4feaba469b7ece3aec8deee5f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526912+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "de2a28c1-637c-4d52-99db-03ffea739b75",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "70e9d18cd0b227555b90dfc9a0f3eb18c658da2f5c0632d14941bc9f3203b211",
        "deprecatedHashes": [
          "53c5e5106b758b8416d4d1055838f53874ff10d329611b954b5a2f1e11f9afa4",
          "e7a2d3b3d9d702f7e6640c3827dea99aef2e3d275e190c999ca35198b593ddfb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526913+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "814e1d37-ba0c-4148-ac6d-322fc93d1e5f",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "750c0c2b169868b55c272a8096bc5ec0f4c7fac289215f8b7b5458db6cd63a66",
        "deprecatedHashes": [
          "f6d92d3ac048768c10e2192aa00d283d0a7d1e4f0416f2fa5fb55d22bbdaffdc",
          "15430bd51df4acdf859be871fe5bdbf0fd15ec1887cfe7508b25f0553ef38024"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526914+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "73d364c4-096e-4d7f-93ee-ff4ed3fc46aa",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0a1ecf2350c7e1ea920bdedd2edde0a61afa8c7bb7266ace712217c07879395b",
        "deprecatedHashes": [
          "97da0347f1e2b06c78fffcdaf6088d0de91d0fd81640eec78ac429c3ef7621b5",
          "f8a19d61e25408139b8d81e089dbcbd1129cf01413b85d0bac08dfefc17d67db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526915+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "42822fa0-2616-450a-922c-815a72774303",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8aa9a9a7e0953c927629b4cfebb0f2a553cd5b1e96b11b655ef2187a845b9e26",
        "deprecatedHashes": [
          "fd7f67808215011776be7d0fb0a90042420531aca4267264e65e519fcc8fbba0",
          "1aa9319fea2593cace2e1f55509420dcfb361d03e4ff94e7db1cc98591cf000e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526915+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f92dd889-ca42-4b53-9812-13122f31380b",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_09.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8471fceec79867551ef917b5f68c6b38554bc0ccfd9a3c0e7da1012c9d2eb7f5",
        "deprecatedHashes": [
          "c17a5728e1f30c466803fa781eaf56994a8dce2e243226dbdadf16aeb530773c",
          "7fad0231d159e64c681cb2e69eb00d4d803bae45e27690796421f5be2f84465f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526916+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d81a5a86-1263-45d5-9ea5-78384c366cdc",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_09.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "25bc35c7bde98ab14945ea80ff4e352f2b2c99c05b6c4a9f7b7d6c67d813d3a6",
        "deprecatedHashes": [
          "90f862edc1db586b9c19cba9bcac9bc917f62eeee5b6c3bf54081ad7adfc1928",
          "9f10462f9da2ba456c918eb2e88eb1e59572326ddfa5a73d650cc0504a5e8ec0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526917+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a5ae5c46-7315-434c-bb77-2b9ce017b4d9",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_66b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ffb6db4219b05099d39e31c9c2fccaf0bd0153b23178bc8d6399b08dd2760a5f",
        "deprecatedHashes": [
          "abd84722903befa3543e1f915380fe7ae581fa0fc9445ad327cc4211a70df242",
          "416f30ae0bd91af221715d21cd9f704087166eaa1c16f0771e232dafc2886393"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526918+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c9e3069-79df-4e1e-bac7-b535e24288af",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6dc01f0536ee5a85ab77e6ef12a475d2012a5abef60c8e8eea24e5233e043f27",
        "deprecatedHashes": [
          "698a06b50c611aee4cf06b9f550ababf2399806754f3dea43acf9f9fb3e789f4",
          "6aa59fb594b8dd786596c3997d2c3a522f040e29bae3818230e3634e07ad4cb7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526918+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef67f433-2d33-4928-9b52-22cd95a41dfa",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a0d7da4c3a8ea7717b567665855baa577214e0b88cddd486cc3070ceac3a854f",
        "deprecatedHashes": [
          "7082e846ba8cdae359b7cdc77318f107ed1082209a4a4e74e1f6e01e404dd63f",
          "39a85405cf90a4a4861fc1eb2581ef10df6acedfb93002e2d8b1c5ccfaaf9af9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526919+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3386f75b-1231-4946-80ad-26684dbc9348",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "581b8911e0521fab986d3dd2e7316ef360f96f1d174d6b4f38193eb26ffee0b6",
        "deprecatedHashes": [
          "5d38ccdd806f98ce7d8e80ee41b29068407e2760a6312b3e65a3d8cfa3f86bd5",
          "f1db86fe780ca5b8cbacf8213b0e37fbbf86f918ac881ea4a42cba0446022f15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526919+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "385f926d-7a92-41c5-8518-50b9ee4cbc6b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8002dd29c14a70e1f389d33747a69f8529c628c43ab3a1bc86b1e037ae9bdddb",
        "deprecatedHashes": [
          "9057539a5cd226b45e0ba72e425c9cbb10b50a23f0bf97e53db76549e5fa5313",
          "04ed4a70f26c4c945cd1459aea0966894377f64dfc3b2e6f6cc826cdd339ef25"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526921+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a9ff0ba9-256a-40e3-9355-1f2f64ab0440",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "65dd8bc97fd24396371d5c122ba9f86a1b3ab4ccd72bfa159460cccc518092a5",
        "deprecatedHashes": [
          "15b2f58485621dc0ce91660e5de3de8e09add728bbe5a52ada4e75ddb5ce3355",
          "b4ff8f58231cdf14ae6abae4c40e1a7b0a20aaa4550b4a3ca0a3c887cdbaa25c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526922+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b36a443c-b0c7-4ab2-bfc7-9304364f55f6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cf122f230cc76d89d6956c1852e2721afd8807b3cae2bc79ff42d43b028416c2",
        "deprecatedHashes": [
          "2bc75615d4f17e6dbcfc5ce454d7b047d91d0c60142b3c0cb76694a2e838aad0",
          "83ae54dbe1fdb9785b2dbe335c5a39e7f618017dfd5a059aaf3815889238d6ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526922+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "16cded53-df53-44ed-a202-1cdd0d5d9141",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d04b8cfe30a473f55fa1c861884a0c03a543dd2f526e4ff0c3a774ac070e5d95",
        "deprecatedHashes": [
          "f321f2696135bee64a7fe004b007c42ac452c1346a987d5584dd280cd1f54011",
          "b0078c119cfe8457feb84690b982606e649f7068d37bd34176236b59c756b337"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526923+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7224597-8bd0-43e3-a3c3-336d09b52e01",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "172a29c7dd7dee925978c54af33bdf40fc51bb4b0512447e968cc8e98f05347a",
        "deprecatedHashes": [
          "825437863f70f15556c09df6e7a276cc85e16d35898ea85f1dcffa65d5885c74",
          "2984abcc946c1de01638bc57aff0ac935932d170d5f89ce77f36a85b1d743250"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526923+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5c9a92cf-bfad-4252-912a-a0371e1161f7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d89fbd8c67ce79fa2a3a5a2151bc0b854b247c29b9d94465697116685bd8c44e",
        "deprecatedHashes": [
          "c073c6643ccb3abcddd3990bfd47358afda1948201105d95c3fb69f88e0d4e4f",
          "72b9ce1c64c925999b1ead4f8c971c5bc493550e23e584b5d5d3594e7570d39a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526924+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dbab56aa-a963-4e7b-94f4-9c9e6ced2ac5",
        "line": "113",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "07ad0adc4cd7da039e204c835b7526f17affa0888261c73c9f5e642132000832",
        "deprecatedHashes": [
          "35006c7531b04c1409396a0f95afaf9b4a63f510dbda925d1e262ab3d3bb5e87",
          "4859199331bbe62ef85b504ce713641af44b065c6aa292fa8b463b2e043d882d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526925+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a5b7ffdc-e62d-455a-83d1-87317714c197",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a1fed96ec12b2834f90be554c8d6d9456a9ab2900a581a41d7f39df4333b5328",
        "deprecatedHashes": [
          "e165d98a992df3ac8fee59b94d8349828472fb8da8464e9c5b028f229951afb9",
          "349a96b124068f23bb299d7fc829bdeffdeb64760d5dfa5681892aebc4cd7a90"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526925+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "62121353-a11e-4550-83df-e0d4ec21f45a",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_72b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0276285b1687f5ee73388d7dfa27a50b328f65317119e2a0944cda93346fb309",
        "deprecatedHashes": [
          "f6821eb04657298d9d947ff8cdb60ef53b74f1c3198fca866f30283f3a3cc431",
          "eee2acda8ce0ae0348eea4a784c915fd4bf39981018eb1779ffe9152c736a352"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526927+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "533f4bb6-3454-41f7-89d0-61758b9ca813",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "46563b918ba63c7f221d33c06e78f100d212192de4e061d61a6c0bfc189c1d39",
        "deprecatedHashes": [
          "4df8d5811b0568e9cac5c6cc5619b4b9f4844381a5ea88d160349ef05956865b",
          "a8f5409c5de716b16826475a2f9dccbe5bac3e6c93a6a5f349a2c882953f9a59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526927+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "036fbce9-4966-4a3f-a9ff-3265a7f5f954",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6afc4b85c388f805f28c5875be96c5704958e78b5ad9f09f1becec5392db4cb4",
        "deprecatedHashes": [
          "c4db81833769d06ad93b0341ff47c42f5b7fbb87ed24ae538fae5fbf6c5d3d57",
          "05e5a03a5ea926bcc6acec7301c17342ad8036033e264f64986a197185494781"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526928+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cf1d0b2b-7a62-46a3-815b-be86a16fa263",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_67b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "62cdf3ca98a2757fd40229a0db9631b354f33e20a496752af2183bcf3d6be6ee",
        "deprecatedHashes": [
          "436c4709d452729e52c7cca0109ed8d73af7f62962cc8591cd870828bec250c1",
          "3fe609009f896e17d19317f90664f78823c1b628371b8a184ece5b5bbba1a17d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526928+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6d2e6329-2af6-48f3-971c-740c3750656b",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_71b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "760084fb3e8524c6cda432a50884818c96717ea56c2f810fb153be894c072314",
        "deprecatedHashes": [
          "f99041071ef8b1b924a01e8118d6c6b42ffd8319e61a37bee865dc5b158a8437",
          "172199344f18a5a8fbb6215512a29797d526af625b4773c042be664a1c4cc023"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526929+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53a64db4-ee9b-4bc6-a8e6-842fc35a7e77",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_71b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9684735519e60821004a02d8256c5898e76e356e3e4de70a116b18c939090052",
        "deprecatedHashes": [
          "b6d152124aa7c43d2c27cf134cee86beac7ae1abe8f51662384c8d6026ef5aa2",
          "3bb90ee9397741d8da3ea7cddf755c67cf6a84fd9357f638b4f867f08842feae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52693+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "59e76619-c4ff-4861-ae48-d0d436a76e3e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "28c86532c40695ecb46db6369b2ca7e31c99de8e3d8c4edd29a3f1cfeefb005d",
        "deprecatedHashes": [
          "f3bb17509fd75aa60d4c1d6744eef3b186d73390d4d8d8744e2eef18f99d380c",
          "79c1c7d1640b5d54b7394051ac180dba32f22e9aea88379eba6a8eab78f2ef2c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526931+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "956798a3-1f8b-419b-8f1b-bb6c6545c387",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_06.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "579b9b42a946cdc40ec446a4427465da8806b4554654a2a60b6b7fc2570a8a5c",
        "deprecatedHashes": [
          "6535c244267b2db0256f4e9d93965144baa7493aa7ab25408fb4b6665741c5d5",
          "d8caab85071e3e80a474f6dfa5125599e4e192fe9f349ad97f1219fea5a24731"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526931+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b07d668-d9cd-446c-add8-bff2ee4641de",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_06.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4c2a14bc9975636f3fdd90c07b0af499f3e88e685817604718b9842fb90840c0",
        "deprecatedHashes": [
          "238ba3f285b2ad46368a70913954d841443debcf1be0b6279404a10d1e944c19",
          "df7c92949537eabca63b5cab3403f1b9c83f9706cd5a49fa7ac461a8e3168002"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526933+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a4b67927-d8a8-4a46-b3b5-ab4a25082747",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "49ef08711aa9cc19e266e085a1df6cc95fee413644b138d6b61418344699a1db",
        "deprecatedHashes": [
          "75456c1620ae42bfb37820ca1bed5998a70f90813838a22e038a95eb80f6752e",
          "c28ce7c2e6b2e6bcaeab4f15bbd77abc4f629fb36d1458378551105510c9b4d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526934+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1c7fc165-5413-4ae6-a190-1f015092cd59",
        "line": "125",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e540f6edaf01be1f936a89568657a004dc73f9db94c0f8f894088cc04ff20e24",
        "deprecatedHashes": [
          "abeb58ecdab28a26c97ae1359c96ac703ea17aa222efb85c7169aa2ac6b2664e",
          "e2c62b6b7ae97036b4d5edf5ef6768cfc4562b24544354ed89720dd889cd6fc4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526935+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2528f3b6-2117-4823-a849-e4509de0b7d3",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "079359a8e72ba470aaded21ff4fe455610cff5a317bfdd3678d954c6e82e4042",
        "deprecatedHashes": [
          "3d25538f097000d8b58b8733c83ae2106c7c971d3c90ac2c4aee67c0af18393f",
          "7f5ed53ae46cbc519a1ccf03020b1babbc648eb758da138953fd1dad513074d5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526936+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "15ed5a52-4315-47bb-8737-05e26c123705",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e413406f4eb078bd7eba825ca0b24ea2f209a391591161b1d03ad85613cc045b",
        "deprecatedHashes": [
          "7bec21f94bbad6765a9b94ab0a49af79cd5bc6ab7cbc5cb864f9f24aadb63879",
          "f8af8413a4878dfee003b569fb4b2938f3467d8e3624ad112b64b1a853674308"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52694+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "41475ac3-02c0-4fc7-8e3e-66171eb8f551",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "af78ae61062d5a242f9d4e20bbb7b81ae5079598361f679c0d1f0d2da42525aa",
        "deprecatedHashes": [
          "2359ee6ebe68a23c0862361962da8e26d882753a93eb85cab752103291985ba2",
          "03abf838ba9bb51919e7526208ab2ee0969bd026157376f35018ffa934740891"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52694+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "717ab04e-87f7-4e76-9ba7-78da7569decb",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cab66f649fc51c4296618db345c6f4988f9791c94b9ba2d270f5b363eb039179",
        "deprecatedHashes": [
          "e06d7a39ede3e7ad0dbe05246e02e552da1c2a0d5b0109bebbe3c96181396087",
          "acaebceefb3a3156749ef4708a172b583a63a7d4b956ede950e42f7f78660411"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526941+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "21ef6aa5-ac48-4ea1-baa8-5bd60f12a866",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c3f534ef4033965867dd763ab82defd21c514ab2798823db6dc1439c1467d935",
        "deprecatedHashes": [
          "ddf66d4f4bf57b030e7597b7e21e267b60715caddf3e72a2e0e45d131c9538fb",
          "fbb0108c0d55a0f3c2e08916e2e4d437c76ab2481b8353f696d0bcb0d055f79a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526941+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a5f086e0-fa5d-41de-b534-a7ce237e99e7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4aca3ed705fb1abacc5f315a169679a1ebb986b7353697d1b5f8836dd76abc46",
        "deprecatedHashes": [
          "23809d1671944f9a31738f49794e488968f5bba4072ced3731ec0a352ff97216",
          "80f109194404465f8a62c2bf36f1c9236093d22dda38e505aa8db8a486fc8698"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526942+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "716bd295-d39c-459c-b4cb-9070c7984e66",
        "line": "100",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "61f48a86ed1a6a5cd62d5bcc74d3790db9343c73e99abd159b5e31e35d04c5d3",
        "deprecatedHashes": [
          "91a57d32f2ac2e004e4b7887503c8d76ebd12cdd0a736602aca60ea1da93f471",
          "41fc4016754e8e06fb1c9716a346e9921ee64ab1ca675cf1cb3587e3739eb599"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526943+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f39e4de0-8597-4f22-8edc-c8e34e6605d5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8c0d4204537307489ae0af5448fa1f4e3fe54cc9b2fab45ca3ba0b7a6b53c297",
        "deprecatedHashes": [
          "a4ba312f7cc9d2a5c5f7c155b72ddb0cc9742b2f06c63fbd85c0c6471f24d52d",
          "bcc253e4339e542c95a65f6c47595c61fa2e4ca83ca3047be51ec654ab700158"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526943+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7178e3fb-d306-435d-8558-0bc7cae30790",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "75aeefe24fc59ff10427fc760adf7e1f22a4646088fb21ac28958a4532aca411",
        "deprecatedHashes": [
          "f9437e0a00f0f525bb34025fdf79120d6ffd2a4e8260afe4e8a9b151399147b2",
          "2c5c9226c303dd3a4a3d0a17250c931bf8b51a5951951e67bb773a1d725e4678"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526944+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "85703227-a652-44db-b361-ad56330a5221",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "44eca87e3ce07b6c418f0d6afcb3f8aac560b833124853d0976131e24192079e",
        "deprecatedHashes": [
          "95669a957a5a808e41a3d4520f7aabe8e798ee0de10882e2540cc808d3a40473",
          "e02a1ffc9c572e687b9612c2698241a5373a73432429566e350636ed09bc0ba8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526944+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a532f62b-6ddb-49cb-870c-82da8ae9c5bd",
        "line": "51",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "eb6326581fed4f93bab1821d5168111a7d99cd895ddc2a3c978f6b1267eda402",
        "deprecatedHashes": [
          "e5284e0c008452761483c7dbfc24dd7afe947f81a5c0ee503f0e5a80552c88e8",
          "de0ce584bbf468a92fcf198c12bcf45ee5eef1eccd4163fb47627b8895612387"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526945+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9af5b025-201e-4b6d-bf5a-a3c4ef2f79b7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1f8508ee5d1596b888b3d019be0eb230124319c60b6a540311e0f25ab46008a9",
        "deprecatedHashes": [
          "185b42d68929346cfb688adf23cb672b85b9e818b3b11fae03971944a084f611",
          "8db315fcacaed55980c10103208c2adeb465c80226e184dd232a4c8640d1b1aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526946+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed83b9c8-dbb7-4664-bebd-a6b4c1006cac",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "16e50317e390f7d98b4513383d1ede7f59fb48a321412bd5a01a9b44c085425f",
        "deprecatedHashes": [
          "4b88b8f8518a4fe632387dd76993f338e807466e2d8c68a3afd97dd594be3473",
          "2981ab35ca144d7d82cbff24a49bb0b8188e6d77d2ade81728035361d8e54b38"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526946+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "47b02733-5a81-4e5a-ab95-950b4ff8c428",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_51b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c8b4b3e69f9f03ef977fab0c57482cebdd07dead2dfb430ed16b2aff08a3a219",
        "deprecatedHashes": [
          "d984527fe88fd767513b6a8345acc304ba1998c7d8a45dcd8d98c5a2212ab5a0",
          "1e0a0c440559cc731b0c568f335639c2cdc9d2b020024e3cb56a9f091ef918db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526947+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9e56f8a8-390b-4514-98bc-0f2506d81712",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_51b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5341b35d83fd413b63edc8a8d0b42810e7a6fecae87cccf4625edc9a30131a07",
        "deprecatedHashes": [
          "b35038daf72ea46dfe05f44113508ee86478806fb62700b3d3ed76e0dfdae619",
          "84af36978230ddd1e8da4ae49a526620e369829c66bf001569da7af22d29fa9b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526948+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6d6ce0f7-6d89-4b83-9e69-67fa601a4292",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "14ba543df8a056e0a01abe98af04d39d06d898b0ff729bbc24c92a360c628ccb",
        "deprecatedHashes": [
          "f83c06d044535660f8194a511db11a00dc54f97ca3f869786136c2a6ed385cf8",
          "7120b9b222094caa57d605051d2dee8db830f65b4993d885be90ad417f98fecf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526949+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "256b23bc-f672-494f-bb35-804df9e66650",
        "line": "52",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f7cbc3e449b851bd95d41ac97c0980869796fc5d621347073ab82a92ce6cae88",
        "deprecatedHashes": [
          "975e71b4b0cdc18c657a49d11ee8f3ada689f25b85058eb5d35bda86053d6d26",
          "356e19655ae61647fa8f231962eed7471e0e2a1139cc0f70198267dc72601033"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52695+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d3fa3f36-2f4c-4713-8f41-76173b8657f3",
        "line": "115",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_45.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3a1365b94ad26729fccdf2d43251e3e1d94ccf6fcbd08b9e73451efd38d93025",
        "deprecatedHashes": [
          "fbebc526d9ead164475afc09b9fba8f327d8802acc4fc34057eb6c2b39f31002",
          "0758b1673c13329c2658c0c8c2d066f1a5cbc584e590b6bfa7adbafc51066250"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526951+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f89eb2c5-5a60-4bce-9954-9e5369852f3f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9e28e348a4a0edb5613dfb0f86de63dab21d6df295898d238f6afd9c92963898",
        "deprecatedHashes": [
          "8996ccea7ec773bf120ed06130424479f65c27532dc47a1f37792a401949fb0e",
          "453149cf21aeb41b78f90100d763d98db275389e0f4e9691ae3b5498de84a2f4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526952+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9cd359a8-a1fd-40e5-8f65-8729ddc4c56e",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_01.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8a7462321102a83fd56098c8705756d008fe76a66a16e10efdca808398f28c85",
        "deprecatedHashes": [
          "32d87866e2ea35912ef1bffd042826622aba999b28b2a68766a5687e85e388b8",
          "7b6c0ffd691b1a976602a55e257adde51c8fa3301fe67107755c6b37d7bad8a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526952+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7260cd32-a416-4122-bebd-f23b210f3942",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_01.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0ab7d017cd604cb42084d86c6fa9020e0f627c437c104c20a37b55266c2d7e8e",
        "deprecatedHashes": [
          "308e4ca770df877fd0cd76b29662522f59c9c49e470a411198105b48d70ca017",
          "bd515d9cda6979fa7b4b04fdb971c35cdac0b518109c5e0af829e312327ba825"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526953+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "89dab840-c13f-46fd-b015-43920de425d1",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_51b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2a2c3c1578f08c7cb7457c9d32d05c6aeacb25f601fa5091d7b3e307a5d45bcc",
        "deprecatedHashes": [
          "0d712a6119b1595f61778f0fe45d8bbea31532627c5b76a44b04202d4bc8478b",
          "a645d870f7de0fa030c31ab5b816771505303964fce4e2062410840f164788ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526954+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d194dde0-f3aa-46b9-9142-a49ccfc6ad30",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1fdb9daab88b4ddf23d87f8086fe7833ef0792edb3099108bde55f2acc1f3559",
        "deprecatedHashes": [
          "a967c01bffeb9785665860bbf37c4b97f5bf14922894a360e2e5f9518a53a7d6",
          "ac252b00285a338d9c568f9e1c5148f0b5dd35c1beb6baf2a87fde097eca624d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526954+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fac1b5ba-c948-44bd-ae90-7bd4a9eccb46",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_12.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "664cf7ff84292ecdc65f9b5b94e3dfb3c479da31bf02d330e063f2a991c73410",
        "deprecatedHashes": [
          "473f932848d18c0aabd4c7783804eac6c0e567629b77db80bc2c833124b0d12c",
          "9384f316f6e6edb495a328f87dc4c73362dfb56d54b363c9bdec96964b7d2a02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526955+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a6ee7e15-9f15-4498-a571-5b0aeba6a4b8",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_12.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "135e83608e76784505221e950e6bae377a7c16c54afebad78c5e40cb19fc35c1",
        "deprecatedHashes": [
          "2f073530f4acfa5f7323e389eb7b221eae9a44c55a5e3f3041b55f9ed4619a5d",
          "73a78b6f4b780413160bb83a6acd0f6d66f1c00a5c178446cb04aa76bfe173f0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526957+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "65aac6f9-b84b-4a86-a966-b29f614f23c4",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5fcc9d48e3ee83fdeb95be3b7ab1a717a4fa6f3ff3d742878c86681c92e1b5f9",
        "deprecatedHashes": [
          "3009d5a241d7d2dd9200f9f52f8473af0de96e895081d9c026546f0eafa09dcb",
          "fb1f43a55c0e414a3aabd531187c0f24265c50c2dea8028e2d5ce679a442d1aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526957+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "64f9c712-b1f3-4a6c-948c-18c0d16a23f7",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4ca004c8fa8d032dbc4e663e90aa729047a8b354bae8af1a148b67503c961c09",
        "deprecatedHashes": [
          "1f37725d76dbfaf95e36c806e482346586c40582c5b780b0d81ddd901a6a0fd8",
          "27f578744d35d023357050c3f35af31ea94ea19ae12d8e9ba307f14bdfb8f9b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526958+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d6763dd0-fedf-4668-9f5c-86ba2514c641",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c970c9822c0dd4abf8f4f632c487999cfc50cd12dd60f679d22bce381c31a9f9",
        "deprecatedHashes": [
          "813034d5d89a06850193414ff0a33d33742664f6d4db4cf910d4982d477b7e6b",
          "d0fd25479bd12c833fa39f87d3d6ba3eaa8952b04da924df88d523dc7e5b908c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526958+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e553c3c4-0fac-4bae-9bc1-0fbe7139fb38",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "809977c7b817576c0ab6844fec4809530209421e1f0b72935598192c2ea766a9",
        "deprecatedHashes": [
          "f41209678f276876e6156d15eddd661ff9ff9e3888f170587ee1d6cf5cd7efbd",
          "d0029cac373a3783a7feda27b475efbbfa53cc0f05326bd0674b810d5621613f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526959+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa9d01ba-bcb3-45e7-addc-8ce50e272e70",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1d1d663be7b3702cfea730f236dbbc41ecbff75faea14e72ba5452d0b5918d3f",
        "deprecatedHashes": [
          "1837214ac1a846e5ee456dc807b8229201afed29d4ed8f2705e640a1c6146a9e",
          "34194377ea65a1a21407c46bd0864894e7a817d805e1230670fb60807da68070"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52696+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7da0167e-ea9c-46a3-b39f-04801127fe1d",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fef099672b6fc28ce76e4c0cd4e234467d85b9a1eb79874b4ee97f476f06c29e",
        "deprecatedHashes": [
          "2bd95b6047e4f6d873b308d25543c20a6b711a09ec492791fa6e678e81309e7a",
          "0f48d801cd647da12a3cb3674284f743c69f560ca8fcb645e5eef1a5d4e533a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52696+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0544de6b-1fb2-4eaa-9d30-14018b6e0325",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c16ee003973e4128a72a0b41f91f3656bf6c43fa74acff15fbe65f565574c444",
        "deprecatedHashes": [
          "556c157014698b1763c40f2eb70521d858a5f5d10b0fc8a19d739be21af05c77",
          "a611a72f4c111ac989e3ece4c1c073100616cb9c7e873f374af135a0aaaa5505"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526961+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "09b8a5a0-8eb7-497d-8540-65485f0b5a0d",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_51b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "04243592c623c3d3666b0b6caa2a7da9a1f3a55820abd3f59418c01974ca2eef",
        "deprecatedHashes": [
          "209dc864103cac36733e48c92ce22570e2977685ca406706303efe5ca88cf537",
          "fe85795306effca0a58abe58bfe05541bf2dfdceb91448a1537f2da79a5d1f20"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526961+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ffe9c71a-07e0-46d9-98ac-ece71c0df082",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d8cfca316450d02ab1fbc8a67e970b8f2cc2fe712f0aad608533c92449f0f2a8",
        "deprecatedHashes": [
          "906b952ef78646b269887224c0b4915521b26962383d593599e07a241a7c1ff7",
          "4f79d7c09393649b5a53a6e831567939ce7b33e80d74eff8c3ce4c468cb08293"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526962+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1832afe9-26ed-4406-8863-29000fb2229a",
        "line": "58",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_17.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5c30e683dfe7bc2cb9fe33baa27573bc21ddf8b5b5be475c15d9152aab5855e8",
        "deprecatedHashes": [
          "aa857a85ed982e61a48f024a2be599be220fe24806fedb259e4839baf2ff9a05",
          "45c6d3e5a5baccdf370b898678dc7af5302d91e951a2eb4bb6e5ba7d5d9451dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526962+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "99aa2fb6-34f7-499d-bafb-78a4f25a2e43",
        "line": "59",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_17.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "d19f7e751bbe37af810e2e31ff1d113ac55fdc0d4d5f50e0135736c0225d150c",
        "deprecatedHashes": [
          "dd08e849422277b88d804a4403ab25ab129f1467e640b414acf14336430910a9",
          "63a7f236571169dbd9351f0fc1fe08a8bc5f9fbd2510b383f6324436a7b9df59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526964+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "67de7364-88af-4752-9ee5-160e49029573",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_72b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "637ef97fd437645a5681dce33570bf5d2192a286c5914454a68995003526d323",
        "deprecatedHashes": [
          "fe17bae3eb493fb2d44d4efc6ea0b17b133abe9bcc739a05ff5273728715babb",
          "5ef7b2aa8cc80da3158a2a1141d3dd2cb43599cc29f3a550b21a26cb8442d185"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526964+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9863956e-148e-4681-95b6-d254f36271c9",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_72b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "63737e291d67d36fe8c2a04c96f25ffd794388f8e6a5b42cbf3d28446046e542",
        "deprecatedHashes": [
          "7ae2a5318faa33b7f3afc674c2feeeb193b8cb158650425bc1b3158c86bd6834",
          "9c7097940b20f7f24956be5272b6710d26cd5089aaf5de1e86a1b936e12e860b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526966+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7ddf9b47-50ec-4f86-8af0-85be5fd49f64",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_66b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "94a9ac76ef84009170cd47dc46c4a0ce84deddcc09acdbe23db7de1c463273a9",
        "deprecatedHashes": [
          "4873865ecff7899a14205edf7c9e52c77d59516ea613bd092ce1a621a2b7efca",
          "2b19a60cbb504f27bd6c139da6063bd732771af90bfeac6655c189e33632c456"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526966+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e8c47d2d-53d0-4213-aacb-8a8de15b176a",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_66b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1bf7f7c7b118a418b580b10eda1e8edf1977dd2321734c5ba4968d704c497171",
        "deprecatedHashes": [
          "d230398761c9993f31dc3072ecabcaee62a1aa7426049973831618158a598354",
          "3c477c76538f29a5d9de87ae000c4daa93a029020099958efd177dcf4bc6ea9a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526967+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d1a01ae-75dd-450b-a85c-05fa8c173c56",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_67b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4783d90b947519f5b11a0521b8369f2a1c042db69ce7d42e29fe236a88b97c88",
        "deprecatedHashes": [
          "f1479bd07480a7d9405c8ae3ef028653db2feb740fe37f1bc52bc48a1579a11d",
          "601cba4014cb15e389007714a447d5a588e19a8d442facd2e734f97d948d67ab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526968+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a13d732b-42bb-49f9-ad0a-d2ab9b598665",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_67b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0a1a0d297c034404fb067a3ba4644c6e0189afa557422d73396865e68bcdb009",
        "deprecatedHashes": [
          "6b63b37e2e3d258397e7625df62585cb991890b51b8bf8d9123a637458b7132f",
          "9c0a82998657413b04089ec58f1559dd2f89cfdf4b02aefc52614fe13fa5e0b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526969+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "135a5147-4adb-4e48-80a5-a18b862a47fe",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ed5115a95662b64a0443f9328ab5e3cddfdd28bcbb32dedc15f45f2e3bcf42dd",
        "deprecatedHashes": [
          "16acba5dff7bdee0b4569506faf4f54712887327afafb836cdae808c99f9efe7",
          "f2910cfa6dcd53b8a8a9f7e35b9f052da293fd28792f2f5856b9b7f295c8f25e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526969+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2095e128-f2c1-48f7-ba93-3613a19e0ed9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ef6fff27568c2c13fe23108e0d03019636a013559a86af9ff624120282924509",
        "deprecatedHashes": [
          "1478878f0cc984589bedd3410a8e024ff48ec72b7360930b4a8a8f9305f97d6a",
          "e8c3505afa8d2208450a184fd0b44951fdf7ba510d1b347f570e3394d7cb375b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52697+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4a73b3db-6fbc-46e6-821d-6b38c8c39093",
        "line": "106",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_07.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9c9fe46a2f6a1f7295e4ae7de5954b04076b11690499b0be87e421e425894382",
        "deprecatedHashes": [
          "51bae81cfde74cdf47022116399806d8b5bbed4d2189b6095f3b1ba9dfa2e37c",
          "0c10b3466d0bdeea4a497fee8e786722257dd248091128fbd27e418dc7ed6ab1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526971+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eae52001-0c34-4c10-8b30-72978cccb961",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_07.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e4d8895a7b38de5db696e8b331dc9e3a311241c36ea066733adf7e247267f68d",
        "deprecatedHashes": [
          "103ce9ad0f706b515e743a93bbfeec3d470207f41daeaa0e8406cd9a9db3cf41",
          "ed95a7a53890d0403c28c1f73c91262f2b80bedfb0070f692d210e0eefe9ed70"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526972+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4a70be70-0d6f-4872-875f-ab9b762c629c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bfc9288359936d1f5a8e201120cf4589285de6192c0b5a01fd8f2a928695b64a",
        "deprecatedHashes": [
          "dc8051e636f152f878a81468578f6ac6ba6ee147521183e393e19fcca215f128",
          "7123b42aca47eac5a61eac03528206c8ead072b0d24a35016fc683433edee02e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526972+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5101c0b4-b4ca-4e95-b4b9-63883f801019",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_42.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "81d62a40ef46ccd7bb9e39b8a27a2c20cd936c7ea3fd762ae0548a1a7d522f84",
        "deprecatedHashes": [
          "016d1ce1c9b0c07eda613b72cce564f21e662ff8d9f21fe0dc71bfbde9e05d20",
          "c112c6062d92327b2f9aff2a85eb6ce432789b8bd7b7afa105cdc4cef80726a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526973+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "79fe3b78-e2c7-456e-bdcc-5f2783dac5e7",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_42.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5cb709544d90daca67545171f00c7215e5196cc9501f1e67404e672fed6a0a09",
        "deprecatedHashes": [
          "d12bbfb9c2f8cd4d17f79d67ad225b107d1937cabdb5a3c30a79c76f65aca238",
          "11fac67f5c72688e9d8e0e1718cfaef672383c32c95ae1781d641b4e1e4d56e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526976+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d5bc4cd9-8358-4e22-8898-681bdc4965cf",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_66b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "01393f9f1a4f84958f0d925f25450d13be4b87bbb62f1ad41d92df022a9bf873",
        "deprecatedHashes": [
          "77f37b8898f3c26a89ec4eee5b4ac53b2c900c815442d8a8dd976e21996c820b",
          "6d62209788f91518deb296ca281c4485f7b1fec7e324bd45706ea39e7ef3f95f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526976+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce11f203-d961-43f5-aa63-b18b863cd3a5",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_66b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0b8d77efed900a680df2b18d9fa73a363d6973b9cbe42a6efaa0b251735ddda2",
        "deprecatedHashes": [
          "1c78fa25eead6d69f865cc8feb3576f55eaf82f20b48eddfd73ca21efb0c6846",
          "0ce717ed6dcbdbfa3507009c4dec71ea91496552fed36a6078210bfe6bd403fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526978+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c67c5eb9-2ada-4499-ba66-dc6b2eb5ff56",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "61659f7086e61bdd04ffda9ba60c409ee9e96ebd8d6ad24b340052e026ef50a7",
        "deprecatedHashes": [
          "90575b5457a83758fe899602ff634d3128079f2a2d16afc9c2d65a939afd9a2f",
          "414053ff494dfde0f9fc84072ba155923540f3a8d5562dc24b10ffcef38486a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526979+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3a7b3b8d-a9be-4164-bdd9-b8ef7531a8a7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "45a37e9431bc5e57645d25c7935e59e07194a7a950e54e81e77b7f68bb112932",
        "deprecatedHashes": [
          "7e5ea06f945a39c6e079b79cf719481378707a47a044ba7e932adaadd27cc094",
          "d80ed39e14458936231a9f8371cd0f132a41feda43fccea0a05596b7d59cfeec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526979+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "817c8fac-849a-4f68-9c31-73d06fa2dcec",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_81_bad.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d94b4dbb2fc670109d6f14e055be85a99b594df37f710cc967677e32dc9d1b78",
        "deprecatedHashes": [
          "569a489eab417ea37ae6a7dc12f4be703c1c8db5e434de0ce569b82413dfea35",
          "5a5ffe9eaf93b1e59946c287bde6afedce535d3137e8910f7ca5c3a5da45fb17"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52698+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e37b51cf-c5df-4179-9dce-6aaf8e95e0fc",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_81_bad.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1ee785aa6f22ae2a140b1a03c86b36d1fe23065892f1f82a23af34dba8b1adad",
        "deprecatedHashes": [
          "5c560c7040bba34bee574d4d9cb25a4c87c43f2d74902018b45e98ae707493a3",
          "f48e010227a9aeaf28af89441a09a63e517745e03007b48a65c7174512561024"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526982+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d24c9b2f-5402-4639-ba6d-585ebae5ec84",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4c21a42cbafe570074348073bd88b39e07455c04e3e96ee506c4c9b77a5a1043",
        "deprecatedHashes": [
          "c03912e95e3b8bcc218317dd7d61cff3d2a8ff6541408cb5cb80903acf28b0d0",
          "19ce682f7fd902e055bc164e1b02c8b484c56c94fdb463264150883376b4a7e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526983+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "614f535d-a32e-4367-b7c5-719e793ad92e",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_73b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "91f4647c7febe6fcebab51476d8c2cd6824b75ff61d99d30b88e45963fb297cc",
        "deprecatedHashes": [
          "e3b5d2c0b5fb1216b82083fb6f825c66809601a6540607d46a2365816e3bcbe8",
          "ff094a4a6fbddd2011c60f2117fabbb3a481f310acdd257a5d7579c5427305e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526984+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "993e8067-2767-4910-901e-6b3eec1916b0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d70aa293ee495eb624d0ef330bd10650d9f3646c0f35f90cb4cddb61f0d01edf",
        "deprecatedHashes": [
          "1029ecf3480051bd2a362b4c4549412166abe37e0dfdf52a35802aa8c2686263",
          "58fde3b7550f1d9fbe77d20afa0336bf8eed18ec6e345da41a7ff9cc7115d1df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526984+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9777eba3-f704-47d9-b262-43fabdd726d8",
        "line": "44",
        "column": "6",
        "confidence": "LOW",
        "file": "antbuild/testcases/CWE89_SQL_Injection/s01/Main.java",
        "code": "} catch (Exception ex) {",
        "details": "(1/1) * Possible vulnerability detected: Information Exposure Through An Error Message\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-63",
        "vulnHash": "bdf561c43194313e4e76d159232e301077e1af5ce6fd69602545a979cf00a63c",
        "deprecatedHashes": [
          "9bbd94a39c7100669e278cf965cbc1c5d32a16964bd68c76c018f96cce2480f8",
          "c03beb40d489aa36e8c40cb32aa3a83a9ac828b6ad07f85788b1f64c673333d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526987+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9dcef13-e510-4cfd-9d02-dd2c2601e089",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7646493203429a8682ba3ad94af10289d3ce6f8da578fcef8363016afe5d0a16",
        "deprecatedHashes": [
          "fc302670bab754ab08670aae45e07709db831c3196b71f1614263acfa33cd79d",
          "fb596d976e932dc2940c879977c4e77a51f124b871891de8f0d42b0caba597e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526988+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5414968b-d93d-4e53-a16f-de67923486ba",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bec9986832de3c2dfe38780a31a572b20cc5bf843bfd6ac36b7ef271cb83820e",
        "deprecatedHashes": [
          "669545eb68b420c5dd33f411e8d1a2fadd933b04b00808bfa6215dea95b68755",
          "d1d9f4c14709ce9ab3086cf84a8ebfa4f59864a23a3ae1108face4c34df14e0a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526989+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "126744c3-bee9-47e5-b4c6-86a4809df889",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "88c4836cb89076f80a97c9e141f917b80189c7fdb38c660dde435ebac0ce06eb",
        "deprecatedHashes": [
          "868db1212ca4a7c83c5d5b263875bee671246dd3df057588cd24b57c31de061f",
          "b03ff9c773334d91f49a3c5c41136cea102973ef9362386dbf08137f37322757"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526989+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26c760e4-f77b-4e6e-860e-4bbe165cfc22",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_61a.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b6a94626b87d4c34371e2ae0f54567400600f1912e40be710c05a01740f20eef",
        "deprecatedHashes": [
          "bc4266138c6aa8b2ef21f1dd73ef4b3423261df6be2071f19dbafbc11f6f598b",
          "4b59a151fb8ae8a75aae5dc52e5658da43a639d2a5c2d01f5b8d30e70374ef58"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52699+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f2e270f6-97d2-40f0-b9e1-95717276a645",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_61a.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b5ec28ec29cc642e224c1ec29d05f4eec534cdb79bb9b911a46bdce3995d1fcd",
        "deprecatedHashes": [
          "887ceb053aded6ebd60192b3024924937f75d93498511c55845214ce1e07d3eb",
          "1d9666c5cd9e4b8363833b7b2458288d40ef869bf497154ae45505e37f74aad8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526991+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7549c067-5416-4163-96fe-03ab350f0ba4",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_52c.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2c1630747a6b2010786ddc16a72fa8bf19cf5632dc4fc6efdcd27482658c61cb",
        "deprecatedHashes": [
          "4151b2a51bc0dc7d6ca55e2453fc696097bf1165d8265de0b3eb2b7db4da5054",
          "06bb012def0bcd0a35c4a3d67c28bc1a2bc7948a4c963c7f85d88748a6adcece"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526991+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f4c1dedb-2241-4d8a-9cbb-c55c0a9695bb",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "118d4bf943f883523378353ef153372037c1797fd15cd40ff1f0f4e235022570",
        "deprecatedHashes": [
          "dab97c02e91dac8d9efe8c68d1e3f9765df9b9d410c5a4ecd80794eca5e33fdb",
          "614334b4b7e1545a1843fdee19a4937772c52825299fa742d1820c7e19d2f7f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526992+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3894a495-48d5-4645-a331-ee47a9684b70",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d3e2ec8d1c2fbf48fea64af5238b0c6fbcbdfd9b4ef8ab1959ff5df805fcacd6",
        "deprecatedHashes": [
          "a8d6feac30bda42bea05d369d5507cc79138bc8a344be712c055634871b679e0",
          "f351295fb19a6d636cbd49e34762e09c6dd7015d1a0dd66298c7f61aa2685074"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526993+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a529e8d-f43f-4fe3-a327-c06e5a519108",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e690a8e398d87a7d4ef73df0a75cfd77652f98fad991480cfded29165c2a0dc0",
        "deprecatedHashes": [
          "e23d2d0db1fd3a1dcecba68c4339df77b8ff37bb1e4a5d24ac88379fe7d6889c",
          "1d5512ae012d6ad37d90763e294a1b36313e7934b1b5b89a02628d65c17ae4e0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526994+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "74f8084c-b57a-4b2b-8e25-b917a59012ad",
        "line": "47",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c93958b59d88bbdc9e7126ffda2363caa3fb3dc7ad02a8c38a4a77daa63698a0",
        "deprecatedHashes": [
          "1d09e13b60b6096a10d47aeabb562a7910c26de51d95b6eb80680d223d2db18d",
          "c71f74370af25f6a7ceacbf4eb9020355e10ee3e556b8346bc47956fc6ff131e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526994+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e3695bb2-6b3e-4478-9c75-b005138b530d",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bd9a4ab2a669649325769b903c60be6e7c75bcd3b4be730e1c03c06226cf2a0e",
        "deprecatedHashes": [
          "12f42e163c1a79a53398685d63a47dcf16d0c9bf066f379b2aac31cd80d013b6",
          "389e61790aa8b2da87d86d43b31a0aebb242f2b15062e39eccdb1dfb1849d12d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526995+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec35a985-b3e4-4960-883b-741cc4242bc8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7cf90c114fdbf26b1f9359d815cab804f38279e8fd5321bfc4e19377bb83eab5",
        "deprecatedHashes": [
          "7ea8d83d85007d826834085086955974b9f951915c7e3bbb9205d5f000e3ae10",
          "e2b80524f74c89ee5a58e8cdc64ae26bca9da04ba7b238a7674b4f75970770e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526995+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "294d5155-6fe3-4842-b86b-269a365582a5",
        "line": "103",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_42.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "15ddfe014bdbba7880b09b1c6aea19acc3ff1678588a0dd5406275816d4f3d20",
        "deprecatedHashes": [
          "b1cc4c3009d5ae7c0475cf09600a6d58f4a15b6a72ce2fff05b8343bd7c106c0",
          "dfc3b720648a407e5ab8961ba0c8352a323ffbbb180b6a78c02b5a6c5d4c450c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526996+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "62d730cc-9a6e-4b01-94a2-393b753505d5",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_42.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5e5f2a4cd112c8f436e6641f49e35fdd5fe23b79d23e91dd2f2f93a755b43904",
        "deprecatedHashes": [
          "5b9f207456e808158ba4cef444d7cf13375561fa1a0cffbf703b32a0a9e0e84b",
          "1d20d1eb21078cb27e3f33b6400aa2015ed43d768c95fb60c55fabffbb0b3171"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526997+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2dfac3fe-b741-4f11-85a6-60954be1579d",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3071790bddec7b193604c026481f67aba466145f6d5e26e3bb10e3316ab54d63",
        "deprecatedHashes": [
          "ced83104d0481c818655850b8a0f2f8e3f6bd4be124f9ab821bc31b0cab0c1af",
          "063f8b492915e2f744a55aeddd5632589029d952c55953a8709c0d6b69e6e847"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526998+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "12964972-2020-4a6a-ac77-ca958469c9bc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "54660f51f9382d6d1d76b82c2d0377622d6154cd55e5e236fbb9fea7bcf4de11",
        "deprecatedHashes": [
          "d11c5a88f1536e1956cff9e1eb1a9cc5329c51aad82c49b85e0c8268d6c8e81a",
          "28dd1b1ba109081a24812035a7936b07ffe0e7065fdf4b29087e147067259fdf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526998+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9be6df24-f5b2-4f64-963a-4144ff850020",
        "line": "55",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_31.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5bd3a71e74142b39854d57fa8544cec7838d7fc953e7237bfb494c184c264b91",
        "deprecatedHashes": [
          "36df74007964d19aea9551eab00aa8f981174786712c877dac001657e26f4189",
          "0806c003326a233f773000039abe728a6fe0158d0dc7062709cb350eea8e4d64"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526999+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ba2d77e-5c1a-4798-8522-31cfb8d42910",
        "line": "56",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_31.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "79a02d2d36cdfbef7a7d4452647a4499acd58a81cf89d7d357dff5218bf18a75",
        "deprecatedHashes": [
          "e4b259124d4835d4c72f86b8bc49c1b33383b754c559cd8b90d6af94e627bb7b",
          "95297fb45c463d0d7e2b64e5614ad1e01a14c0def33b39f5beab8dbb45d25b21"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9bd9f10a-c7af-4edb-b469-b94c001d2a73",
        "line": "54",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_75b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9658f49a17af0d23b0c4c23cc532b8e3686be4f31a9f073f726d20d87d0472d8",
        "deprecatedHashes": [
          "b71dc6e38ebf0c14cf00f404d96c7b468f79d6f8bbe70f666eef93dd14ad4f6c",
          "cc51e1a36036768dc66b6141a601eff40135762a3b0db84bd1cfcc2474790e22"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527001+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f7324cf3-7c9d-4eab-a1f3-4b03eac36fae",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_75b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "50ac79b6be671bb9f7b2c72432d5645e9204fff801787e5d0983f365334d63db",
        "deprecatedHashes": [
          "65284c59481795aa9aacbe6c613d84e04bed129e675dcf514f966a87bcc5d70b",
          "8a8ef40f17f3e7289af28b019f3c8bcefac6d56561f8896162341dfa79b61c49"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527002+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dbb9b7e8-94c2-46ee-898d-63cf2d9bd086",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_68b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "149dd91d871ce2f7b0501bba46cdddfc46b631a423d7c2c1d635d3d0485845ef",
        "deprecatedHashes": [
          "b1e44d3d362c0a42e2518549af4ee31d6424db3e5b5c0a031b69a27172e32283",
          "9f788c343a057d9b45c637b94276b1be36f19108f1fc5b0e63d204a712f3855c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527003+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "05b5d092-b49d-463e-983f-c109f26c273e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ff66f2a26776159a328af753fb9a40099d98bb5291c80184f52aae21844f27ed",
        "deprecatedHashes": [
          "f07349e7fe71562203738f5098419f80c283e71a504e1d72c9f1eb5c222877bf",
          "cd40c51862c301850ad8175fe8c5aaa862045e2f3932be2a20658c41f850d47d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527004+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "540473c6-bbb3-4d0f-ac26-8e7dd954e7e4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b6f8fc67e445a84c33ad8c703c23e569a54884e3bc10a0561d9962b088d4f702",
        "deprecatedHashes": [
          "53b58c321d1f48d274ff985cdc301e84ca5cb1b00c53b77a69608a85324b9cea",
          "b9f6040510d3a30afc973679b1d99d4b5445c8bb3922c72925acba4df971ed1a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527004+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "613a8493-6f3b-45b0-896e-45eb3ad5f22a",
        "line": "107",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "00060d3f7a298e849f72e2c6120351740b237e15f358eccce6e36bdcd6ceba9d",
        "deprecatedHashes": [
          "3a4b45132dd97381d3bb58aa3bd5fd79b37192d85b7bafac75fe914ee92017c2",
          "3f691bc3c5ce2133048bda5621a062add3c096c8dadd55c2469030fb53c07080"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527005+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a0b7dc44-43b2-4516-b7e8-24939c86d160",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "06fc281e0b2d27177a09801d69b679a8cb6f3fb58169413f3aea9a66efd7eb2e",
        "deprecatedHashes": [
          "e74b3ff10d126e336be02ab38267b0051fbda06c03c0e7d340c62f113dcef8cd",
          "71f82f731b05496bbe6a771613c8db733b59dc456cc58bfd3e7f73bc7b0b7502"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527005+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37c823dd-9cc8-4c95-88b5-dff6c75d6c4b",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_01.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "34cdced271e3489b0eb311340e6294f8f3026ddcbe4549ace56fe989386ca551",
        "deprecatedHashes": [
          "efeac83ecbf52eb2f0e1725ba6b6a3c8c2bbcb5ef1aa9e3494d1ba4c4378fa20",
          "c1fcc71f7a79f0e36e3bf9369f417c7c6cb1165993a4c4c603c89956323d17e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527006+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "49fcaef7-2f66-4dd4-9d96-f783d434af2c",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_01.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "22780fc9feff842bdcfc8cebee168a803f260677dee02e4fe4b6b55e581d9389",
        "deprecatedHashes": [
          "ada5734123ddd571fe3fc254c0bd28c4753b5898518c7b69bb638b135f81db31",
          "bc9dacf6811fd38cfa8dbf53ed0076a420c2e9e217aafd564dac0d9e8f3409f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527006+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f352a27-5b04-41be-a51b-f6579be1d47d",
        "line": "54",
        "column": "45",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_01.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "98727e4a84fc223f7ebf506adab6def5608795ab511f4ebc625e754684db001a",
        "deprecatedHashes": [
          "cb87a54c73c3becd6b93b9faccf62611570643b923ef37d15076433ad4aa61bc",
          "72707c79d79f28c2bd41cbf4e3c305c1a0320288d22cd4443ff7e3939009dbeb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527007+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "346e45f5-cd9f-4e17-80dd-6a18a3675a32",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2d58564c304662b99bf1239b963517e88bf4a80db3ec3f9aa525c21ecf0d385c",
        "deprecatedHashes": [
          "960b8ae2ae76da27ea2d7bc1103e2046ca623848aa4b2c5a3fc9a2cc721ee593",
          "414de4a1ff4071873a9d0ed00ae8a4890c6c3c316452cbddc29c4327cda439b1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527008+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "69b62fc9-a04b-4ea8-a3c3-d02fb0e1fdaf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "16dd167ba470fd9fe11b064d5320cf0b9c487a148fbc12393d51e435c891618a",
        "deprecatedHashes": [
          "bb219733b04f28990875b3e60605ec5aa9c1f3f51375e0f735e8a1e20fbe8b06",
          "1dee16c0ed56f719eface065100656317be82372a7269bee9bb28dab0290a60b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527009+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a88e0a71-e2ff-41c2-bf86-71fc2ac068da",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_11.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c88e10300ad953c1ec54aa0034ed2f3a70b12fb21a75fdfdcbada71d001a689a",
        "deprecatedHashes": [
          "f41e25ce5dbcb8b56728076c22dea49227d8596dfd99d8d6ea6d14db4bb80f43",
          "f87e3730881233c5bdc37e6c15afc98f4af51204b870b105d48c4e382dfb9d6c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527009+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "09d2b5cd-6245-4485-a478-1941e4524936",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_11.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "66ddac448097ffb22dd2f8a1bad7fc37bfcdd43e55684e7c66eae23d28ba0218",
        "deprecatedHashes": [
          "9c7d23394de5e0c8d4a51a371857792b7b3a1674384e14a0b985f4f416762650",
          "94be42a973c9738360471cd7f29f37c54e2cd23bea6cec0dd18aa8c01b19f30d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52701+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "18c3cec8-08cd-44b8-9742-166102d96c0f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d43be49046937625766bd0ed090c42ab6228be806730c1947dbb326537672db1",
        "deprecatedHashes": [
          "0086ce09ed04b0c8d38782157bade68724b597e7310bfdfd79376dda43cfb29f",
          "a2a84833c08dad43eb9d054f1bf76c66383086fb5147b1abbe828f046351b007"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527011+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9100a0a5-9e4b-4b64-ae5a-52a6b50bd3fb",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_12.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5afb39352256785a6d7e2ab99b81a238f7b9bccf319905f057bc4a9ceddd9a9d",
        "deprecatedHashes": [
          "8e59a5796b391bdb396a32cd5f3283cc8e7fa6fab52bf77c2ad886fbbc74756b",
          "3d710cb08c6fa9260ba3e9877d948a6b71d7854464f8e309a0a0f9d70c697704"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527011+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3bb391a0-a814-40b8-b4b7-6b339ccfeede",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_12.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f8e5d41c02794eb00970fc6d49759c93189c65c3a75b7abe57435ec505ba7ee7",
        "deprecatedHashes": [
          "4957384992d10430a6670414f9e886f5d426e4ed79d16c84939eda5cdec91758",
          "7c6ca8974c015ac685d6d1dfe8268a67cb41f2fcafc8d34b3dfa7fd8a2d15b22"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527012+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "be9c4f3e-db00-4a61-be6b-f20b50d44ff9",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_12.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "184b71942335fb7409e99b51e45a87240dd05ae94797b7351da03e9544eae92a",
        "deprecatedHashes": [
          "ce98cd3cdfcf7f64ad06ed772c8840470df00d49288a2f30f573110d672907f5",
          "d9ab1df23ebc32c19887ad340080d3c94c56905bfe430af93700defcdffcafe7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527012+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b93411bd-9b23-4e33-a8d9-34ca42a45a1f",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b43c4c6534c4bee4a7cbb0b5bc70c817255beefa3da7b152f7ebbeae237cbb46",
        "deprecatedHashes": [
          "c7e1335ef92044471eda244bf804bf714d4831bb04b2be6317f769f499f7ab72",
          "c4f484aa43a83346a9c3fd132db4fbda550b573a884296b905bab4b184c41940"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527013+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7cdb40de-0336-40b2-862d-35eb84104332",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "718197cf818d8c448cea28e533cb8d267d32c07f8a3caab2b5c72a340530778e",
        "deprecatedHashes": [
          "7cbc8a75805f25f94967f941262c20d7eeace26a7735bbebb9b857a69425e9dd",
          "24d892b17399a1eb54403ae76ac16fd2f6b7072855ce20d8f953cf035d328e69"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527014+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "defb4d61-bdc9-497c-bb87-b78065a83af6",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "80999ffcaddd4d40e8d747ace71957d745addb48f19675f701254866045f9cb2",
        "deprecatedHashes": [
          "25f2f4022a430dd5917c51585aad836943f830b8d015a3f7b6bdceb7fe125acf",
          "f5b87f3547cdd7d0349b242e8866d4376619811947e1db492596af5005775081"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527015+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "60137c37-d40d-4920-9bcc-dab8f73a46bc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b9c3f2cfae84381a0a2746fe7b80aa5c0ca291ef0b8881654db175e0548bded8",
        "deprecatedHashes": [
          "0869f08f4428ea314408af1477f1a109d3c3406b7e7c185604f7149345f340a2",
          "6783224785f32ab833449cde85baec12a91e92c1138ddced1b09426ef5f730c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527015+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9fdc5e47-5ad0-4aab-9d30-1de6c5b2cfea",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_51b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "31b0b748cd47f97d7ce7b6566fea525a8406437bcf4be589d2d44f2c6bdf6857",
        "deprecatedHashes": [
          "2ca2b40149a312f00bbd202ccc2c4a6e35cd24e2d4c4112b44f632f83d3c286f",
          "c75054130c88019f5cc3ae3e1614cf5ce213763bdd863957c5fb812ff908a246"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527016+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f1577856-a6f7-4803-80d7-9d2ef1bafdcc",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_51b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "95f38fbc4a9ea3444e3e91a6119c1417b342d4ff4149b6299c6562a7ec4dd1ff",
        "deprecatedHashes": [
          "017b4780fe361813908ba7523d307218045259a17f904525443f76960ea8acb9",
          "f666fde9ffd9c909da890d1789080306a7dc9efc3262d92a47555bb1ca04fa3a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527017+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "beec1edb-fa32-4486-8676-b7620e5d34a1",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_72b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "87c106fec4af4fc2c77f2a646b0629cdfb8d9269578adab9fcc7a31a7198037d",
        "deprecatedHashes": [
          "a5eced6c0de5d480e37524edcf36b2bc77ffa85b2a40f3f235fc8dc3284b3360",
          "df208a943e0896f93fd5112c0a5fe636f00f845129deeab9c1d9254cdc892207"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527017+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "145d411e-8506-4835-a46d-9def9387f2fa",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_72b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "137f6f72ba2d0b3146df14af337c47c940fb88ffea25cd99c2ba8f94edffe8fb",
        "deprecatedHashes": [
          "37861bb0329f39c41779f04a3a1d1e4c5cc37e8362d71f5293464d9a41e3598e",
          "ac6b708e695d90bf3ed7a9d29273e075719090c558c455a527e2ed6387285154"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527019+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc132523-c934-403f-ba77-775b3a575437",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ea7a4bb756577cb34e0a9996ad0e5d754058c18cd3d59ace4b366fd305d5922e",
        "deprecatedHashes": [
          "f8676a09e8e9495507cb7eddd31dac3331947ca9fbadb055d4e2459e0c75c074",
          "7d2c0bddba6f282ba0367e8d7dcff104abc809d4166f89dd3e3717a703091f0b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52702+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5ead4f42-e186-42e7-9990-c4ac2b9b3898",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "60419acbfc934113f4898084f5d0157a506e3108182838d8776eeff049723ee8",
        "deprecatedHashes": [
          "87112dba6f3151f733b019d8410c3eac6d88b1daf6c314534f749e7e4b7c44d4",
          "0ed0ff82046403d64fb21c417291c22c3a951820c6a6534ac5f531921e921eda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52702+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0bba27e4-0ea6-42b6-87f1-dba21901491d",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "146860d87f40a48e8a8487ffdfad810c7f31bc6ce04d2bcad853f28f8d2d884b",
        "deprecatedHashes": [
          "2f0090adbcfc7e18e878d68ee3ed09eeae62daeb298dcf541119a0c0a819be24",
          "43eb41256186fbda80bfb51efbf708e262e15884ea9205076cda7b3ccee7184a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527021+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0133ce33-be6a-422f-a276-7574d52ffe78",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ea7eeac1f4fa44166879b021ef26965832e93877aba99e4330c88b8b167f789d",
        "deprecatedHashes": [
          "7ab64bd032b9c13abb41f1183d0a8447cb768dd72029df9ba6cc3cd0187122e6",
          "0860afe9e7c26be0da27fe3b616abf8fc0c8ab31e82b6a749a6a3ef9678f9077"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527022+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "619f1e1a-c935-493b-a9c2-5851be1812d9",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_03.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f8752b96365839776ae5acfb1ebd780e74f4318a0da7e14e6062a1df7e4958b1",
        "deprecatedHashes": [
          "970b27d0539599c20a223ed7b071a0be49481a6a6e965c32fea3502f90ec5ee3",
          "734cd3b9b9945417cf9292c25a655db0a39829eed84af6e89646466e0b348e45"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527022+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a80fc78a-8b43-4ed1-a783-4acad09bb3fb",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1e514cc3b1888121291ef48dd025c1006f02696f2423f5f33bddcae82ebbe7d2",
        "deprecatedHashes": [
          "3ed282c3e92cbe38e360112bdfee819afa8c3210c84d05c2ac644cd5d630c42f",
          "4e72a7ded9b7831e2d592c3e194640953d4e1995ce8f7d8b840996ea9f44b17b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527023+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8cabfdd2-473b-4702-a852-b84705cab8cf",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7005124dfeb103ac1cf7f6a4dfbd84f5122b0a47de7f09171af9a92ed6c90722",
        "deprecatedHashes": [
          "4565b2612f4c683160bea240cf304908a8698079eef61b2527d310fcb3916e6a",
          "93d5832f073b93770abf9707619a07182f617c5341b775a1478e3fdb0e6e9ba1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527023+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "92148d1a-7c08-46c2-b3fe-0b084b1a42c4",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "211da6ca78cebe95eb2537fd23dfcffc4910ea399e1e0b187ec765a375f3fb52",
        "deprecatedHashes": [
          "5d5fd085b11c420e5794779ab4449dae2d171655bc3fc7b3a6eb2879e45969d4",
          "ca45b8b6ca100dc827c1778df918c951fd49702c544249417d6284be7b9883e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527024+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4a1faf95-5fbe-4409-9db2-601040ed6bc6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f107dbc050d664a32ba4462ded62dffc59dad0f1a5eb8a29f87c34c61d96e67e",
        "deprecatedHashes": [
          "055caeb6da4360b17af255e1947d3bed0cb5cf22cd77bb5d0fb044a3494baa94",
          "81b31a9138e276c5829acf4f1e4a1c4b456795c03a265c81ec5bda65b87880a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527026+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a9ce33f4-f43e-48ed-a67b-290b5b74b58a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a7c653b896039dde324a9458f2e53c1b958aff8ffee12022ee28737bdbc1f145",
        "deprecatedHashes": [
          "016ce840c4f2a648dfe997059da9ba6dfe2f98926e1b0416e392fe72c87eb48e",
          "3b3e453b2f3f59eeb6a5fd36120ca73bd5a690e8700a119e9e3334738690a88f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527026+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8e1abc91-2d62-4e8e-9187-12b3cff827fc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1f93eaf44410199800b0a840c016e98a503fbd297b9a4f9bdb6769f95e3bfeb9",
        "deprecatedHashes": [
          "e19f09d03f0da8ac0ec147919cbb3c2fa229e68837593e4218c4898db6fb9278",
          "0f0bd3fc3c7b0921af9c5de7eb95c61adbf2e934ff160eafe6db002eee1f1228"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527027+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "222b6a38-a702-43e9-a2db-fc110a91e8a5",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "da47d956a998b084892b745d8004177ab8cd8416bb86b7364bb2d56e7c0cb882",
        "deprecatedHashes": [
          "7ab5d94c286081288136125426771c8e355f60269ec8a761a464c89ef22a9cf2",
          "ddb0706398e7f79b84fe3879377b7f2d4e5704885bf8c0c7f5f1aad24566ccf1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527027+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1c929a07-9c79-47a4-afab-575cfa84b553",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5716ca359dcebd188195dd9833301a0b4bc9ae8942f367ead22c07c50a02f1f2",
        "deprecatedHashes": [
          "cd288d457ff40f4d5133e8a749180fd0cd898ac619fdc0c16eb6ea20604d773a",
          "6e2fdf6bcb6c362f9a8e95c685eceaeb82e1216c56f26455a3873710172d9193"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527028+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c3af2288-8768-43ae-8ee7-861f3e6bafc3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "32009719ea6102e74858c3e0be84bd734f6a31af68c272d2cadd5b78e9ecd186",
        "deprecatedHashes": [
          "27eb045ca67ebfb063893c358ce64586f31a948a6facf88e0d3495078a8ef896",
          "b19314a8d63f417b85870329ba0617ef527053990f0a2fd0a80b53d3717a35d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527049+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "49cb602c-1f36-4b82-a847-67dbb252194d",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_71b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1b6eacfe3587d1d77b9c09a1f3715d480f47f1366c12cdbd25ad542b1d518fd2",
        "deprecatedHashes": [
          "18f0dd7133ad67af334dcd092793f88179724cb2f880b84fd84440ab4d3681e2",
          "261f53ddf4f39961eb06b40e0adfcf1df9bd58ccd46e731431bc7b843fdc7d07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52705+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e12dc133-0408-4953-b483-acc009513464",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "94294e9205f6062ffb9f5f073a5f81c16f5586cfdd35b19550bdd4e66a5c921f",
        "deprecatedHashes": [
          "2b0cc69753cea709efed466e1058e7aabb7b78804840616c59471458eccc1911",
          "e237009bbecd29af892c00b5cb661d1de4c0c49916ba3453c35b715bc1da96f6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527051+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8d1c02a4-2daf-4705-9a21-7f338dc034ce",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "532472800ac71cf05e4960fefeb7c033c1974f9fa02d1d015b987ed252e5e1fd",
        "deprecatedHashes": [
          "4f21ddda1d83219a575dec139bb6ac16615b788646296d84e6e219cb92a7d1da",
          "8c068e8539e70c6e19a2578da4296750832d161f1a51b475d199aa949c422728"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527051+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd9fa736-d21e-475d-b9dd-5f7bd7f65901",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_67b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9a486e65612dace62e56656c8a0cee246f65b29527ba8540692ac11fce44a0f1",
        "deprecatedHashes": [
          "e38446e5fbafe2b31498c1743e4efc013928d536eedebabb56999c700f3383d1",
          "4698f89fe0569c85a24da1a068103804fb59c4192f37704529a343e2d75ba9d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527052+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b05adf4-16f1-4984-a728-2e530d5a1afc",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5f00c0acc831ffdb8d9e58785cf1a28cabafbf1f11f1200904979432547e3033",
        "deprecatedHashes": [
          "e47796a3f4905abe51097ce2b036d1f61a43119bce1cf555a865d5ea70c98f84",
          "be452488a1590204f7c7bfea1e908c0cd5258d4c7c1aeba4aa031be214945d07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527053+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d91ede50-916a-4a6b-a8b1-15229b696e6a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b25482f6286082cd2958d4e1485e59494fffa7fef4864c8cf138f7f567575485",
        "deprecatedHashes": [
          "0f561a985eb068aa4bbb1ebe8b148c9839565d7041e482f3c76ac9b88b668c8b",
          "84a7c0ac31292b689f45675bf68073ebac34c30eba177826652a3c0cad19fcf8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527053+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "74eafc80-4992-40ef-81e3-cdf9c9a0747d",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_12.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b181ce2745982768d8b3916e65d2bbc86e3251b9d1c6ec0414df445df26e739d",
        "deprecatedHashes": [
          "292e1df7ca6564cec7f790bedd2904a78f0df860c424b005653489b8168e9a70",
          "95030920ff1ab62beb7ce3bd63cab47939d883c5b89c0f928150f5b46a7dd912"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527054+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e372959f-63f4-44bf-bb93-06d07ccda115",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_12.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1e8faf5e65de92c4686b81e13e293472c55476df85648dd277b4b6ec3d4b1aa6",
        "deprecatedHashes": [
          "d98e0e28ffec0fbaf1433c4919be3bd4915e12111e79ccfa3176fb25cf3e3795",
          "06223211eb839ea9d36d9df1cbf815216ede81b36e3f80c61a7e3144a7f53a73"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527056+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4181f23d-cbdc-4228-9c01-7a1112edbf6c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d463018381362ef726bad288d790d16dc9321b756c8ed585fda173eb3e0d8a48",
        "deprecatedHashes": [
          "e2249258cf405da5b44ee461056b20a3266664c549fd1700a0965cbf28711447",
          "4ac3a6514b8a7030901ff799161e96a5d1c5aa39a52897b5c182b479526a3630"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527057+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5ed4080f-5466-4c5f-88dc-efad02cc53a3",
        "line": "47",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "173500283700329e3f80e1559d2e2cb2a2ccd5c93d57b316c98ec084fd69d701",
        "deprecatedHashes": [
          "3131baf929d5891a82b708053da8d03b009ae81d94e1472b60333f92fea95f26",
          "c56d677ea5dbfb5ca6ea2a063c5206a7b07f1dd18760742c81db3d9e5e8fa7a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527057+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "76bfd94f-edb5-4429-bb91-9c0522c1e159",
        "line": "53",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "642c0636daffcfe1d691df583e5891bed5a83fbd4a727770d2e1fbe5bbd4bca3",
        "deprecatedHashes": [
          "87f2be18567b2feafa31f8e722f10a0e26209a8abbcd03970e1403ef2fd57183",
          "587168a883363b81d15acc02a2c383eefc4d97b570e9597402f233c9f3136acb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527058+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6ba92b05-0370-4d0e-abbd-b2f4973043da",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ba3ca0a42fe016d493ccf5fb5d4066b7886dbe863b7a714d1e69bd853fc6c79d",
        "deprecatedHashes": [
          "0a9a2f9c83968b965484fe9947afa2b2f1fd47a20c870396edc54995c8e1a3d5",
          "4bf6ac172cc7b974c3fc31fbc0a9bdc695b55aa01c111f4d3b13dde700dd331b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527058+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8fb01233-c6de-4483-8918-156178a41b4d",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "95611636cec4885d1d66af2d06253dea59099ce07ea28180aec3dda3c958d44a",
        "deprecatedHashes": [
          "11e22b651c187c372d29bb6d9ed1d7365b5691210f080e9da9521130f6f65906",
          "415bd53d59ea45e976c9692245eb5216225fc861ab4db3671373f1894903ec9d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527059+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4e4d50ff-f337-462a-8faa-d6427226a334",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "73b976a0422d6c9351117c2f799353d86399e5d73bd8937cf0eac916449a5fbe",
        "deprecatedHashes": [
          "9cc60541e6f0894fb4436e159a67d9b80d0df97e1d33bf205bd219e89eb4c48e",
          "a80ef36da2a36667deba2b4cdb2297e26aed72511e69154f4518a1fdc53de5c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52706+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "94d573c6-f426-42ac-93bf-5925e2f3de1c",
        "line": "120",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0712989a28eed0dbaefa6f8e27c41dcedfffc00d5b69b465a72ba93ea264468e",
        "deprecatedHashes": [
          "522d6bd01ab0ab94f089615bfcdbd2f8e86bc58e6bc77ada737c5b460b6c838c",
          "5e5c7493565ee8e728ee89d29bc46218652b0c674b9b33f96acda15fd3cf6b05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527061+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa133545-16f4-4e68-91ec-d71e0a1aaf82",
        "line": "40",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "64cfa59708ae0cfab1e0650b6f03ce74937eb6981c1f4cb63f0de73d7d672a5b",
        "deprecatedHashes": [
          "fab53bdf2c5fecdacf8f9a97487075f47cebf8e0c6f18294a55b5820b18143cd",
          "4ffcd6550ccacf4e834bd5deabec1d68718bb253a32f093a5d26009e25bc758a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527061+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "65c7616b-7940-44af-a356-225a88b76e50",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_74b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "09e1666a20f121f6aaccf839a726c1b5e6be614509500d9a1a8618913d011d8f",
        "deprecatedHashes": [
          "f6279840d43c17bf15a955771d85d5f0ee2876027b833467f22f0a8707541ba3",
          "2ff27116c1a98095f88f177c9bca3ac4f41e511878e20181da988f1165611d7b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527062+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dabdbd16-67b3-4e6a-bb3d-c1ffc65bdacb",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_74b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5126bd75cbf8c165a550e7ee3883bfa30dcad292f7effa13ab5d2eefcb076407",
        "deprecatedHashes": [
          "542fb7b15ea0a0a91202bd17c642537050e748beba1262753c03f8c748fe1ba7",
          "5ba51a1013e29426dc198762c9846daa7cf5ca9c67ad9e11c0bacb021d3a8a3d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527063+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "77689979-228d-462d-a5c2-bc97774a61db",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b0a226a808d045fe62d99e9ef49dd876b9123c3137c9c214f7c369f1b9643e37",
        "deprecatedHashes": [
          "6f4b13c35b7cdaa1c66d8d2656814b908ecbfef0039f62d8b2c04c6a659737a6",
          "48b51bddbe96ad2f00f6cca69c7f24dc29a4cabc8068e163ad088f2898d9a05e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527063+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "93c72d92-67ab-4fc0-8399-1f818e150707",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_13.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3fe6221b141cd77fdc59fd26b7d7edc9d03b3622ccd57ee2e342f0cdd6991531",
        "deprecatedHashes": [
          "6c48ba79d296ee4cc666c5198e430e5c0f0d043fb354f18241b85ce66e63b4ae",
          "d67fc6e083b5185afeb88568372fa9142f03b2bff2ce106d1f94b9d748e119bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527064+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c17066f5-df1a-48a3-a168-2ddfc19d8e8d",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_13.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3edacc2ee2a673803e5cdd735f9f121285b466181070e79384730d0840d7423f",
        "deprecatedHashes": [
          "bc20afd1145dcb0ee463d29521ff3dc4d81ba995e1fc670ba83d52a3e43d0be2",
          "898646121490304874fca8f6249f80895b06a68ff9396360104c473ce9543f11"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527064+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "94c90db2-3e3b-420f-859a-687d67dd29c2",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_13.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "2ad696d094720fcc9acf4fa0f2328acef4c67488008561afab72f1d1098bebd0",
        "deprecatedHashes": [
          "f1903a6be9f8cf16177ddf933a3eb110f2db8f900bcf5edf1d29256edb68dd4f",
          "8f9092a36ee7ff6bf0033b4f2fffe99272c1ba0546ce51c7e7e7dcd99c34d53c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527065+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d640646-025a-43f7-a3f6-0d81146a16b0",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0f917d454bd344f6e2fbe0a28d99da0130224f83bdacb9d0f5f1e9d8edb32c3f",
        "deprecatedHashes": [
          "3727e65e5bc7306855a2dd251fb7c1e2426414762076106289c49375f73ff4ea",
          "e331e08f41de91fac79e8f12367f6ecd34127af5357160b551fb5c77f50951f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527066+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5657c172-0ce2-4f9d-9c12-87f4fba1a088",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8f9e9cefd8503d2aaad997e31baa044b3c1e5d6ab3db1e856574210034ce89ac",
        "deprecatedHashes": [
          "3849d6057def34750fe62f25ec2b9d6a38fd756e8a6bf4a37f0698fad08eb7cd",
          "1c070a20b12599d6b5cf73d1b83323534a33252a56a12eca54d78bc98f6c1be1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527067+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d95cd4ac-0c49-4a3c-8f90-e4a999da1e28",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6ad73fb9a4ca84ba9b57ac607861a432f2f1ce2c332e349861700d07e077070d",
        "deprecatedHashes": [
          "76ef0c1093dd3aa44aeeea9b03a0ec99ff2851e9971f55142833727c66a959e2",
          "767cb5f123c22ae636ee7759c4d5a2b6780849c9d2ad6cb8bdf4ff64c7ec7e74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527067+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "93bb164a-ec99-405b-b770-ba2849c1df6a",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "db676fa4700b21da20706d5955eae630ec209d1d3d726d8198163db84df93225",
        "deprecatedHashes": [
          "4119274f4235ff8c4c835212227bfb397187c3aaaadface44656964a804d515e",
          "69ba4a0ac254cccd185149e2f8b29b0e7221f50d2c12e3736f5bb7985c94cb2e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527068+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4b428baf-cddf-4118-b9ab-2a08120b64fc",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9f76cea6264071a1b845406c7b6b660182c649378c3d933ae43295ce67076288",
        "deprecatedHashes": [
          "311379315b7416f0d4a80ce31ae8cbd72833b684f3ec3d54350f45b6ca97f0ec",
          "ee9d863df9efef727ee7a92ab948127c9749958d6801a78da0f51f0677385590"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527068+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cbdc8b24-30c9-46b8-8931-0330b0e30258",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a65da544bd417be9aeb44c159e27ddf0f48e451f3ba32fb691d6493d37ea2a15",
        "deprecatedHashes": [
          "0ce72ad3f93a95663d7852eb7da805c08308d48cccb02edee1050198bb027457",
          "b92762c656ca3f290ebfa3f914cad1c8524d07fdece52a7552afbe8cb0823d76"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527069+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "73700a5f-d687-4872-b49e-585efe653334",
        "line": "105",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_21.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4ade7c38e31c550b84be6f3741a1fc779b3c30647885925546ed3cf8ff60fb6e",
        "deprecatedHashes": [
          "9df2d0185c2eab60b080a76ca0e5ad4652f823718171f0be11f86e5198ebd628",
          "17d0483deb7a9df8ec7cba85cd694a0eff5e62a9189f4fd03ca39ec344e3be77"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527069+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5f8e8205-92db-4b2d-8f4f-58b4c66f6d31",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_21.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "344628a2397c1cd092459327a98d2b3f14b7fefaef65385b2968175d959ca69c",
        "deprecatedHashes": [
          "2be1f40a083012cbeba7d1c15a97e47c2c934a379ff8b968bd1702534cdb24ec",
          "7d0ec500a01502afa8d1c73ca9d92f948ee895284ed0fa9ccce756abd6fe7037"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527071+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a639b0c3-86a2-4dfe-a87c-631fff5487cd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0978a94887a04643f7662d5ad29278e15c1e86692178bd908b59fcf84ac827f3",
        "deprecatedHashes": [
          "e386ca9547ebf501c65414bb9c0fce153e75741d801aeb86529050fb2b9611bd",
          "7c91c4425639c227963ba9891552e5f3d05b26a21d895cf007047e74fb77a00c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527071+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d9c86736-81d6-45e4-adfd-20aa3990abac",
        "line": "64",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_08.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e24921cc4f3266bb503d3ec3ada2f95260c3e75239c3bb3ad6c6c0ddf0b92274",
        "deprecatedHashes": [
          "9360c526211eae5ec7458a0ed5cf63642ce8abd7bb3b7238fa95dbcb0581553d",
          "2870f95f0273340eef1a7d017e4b18fc7aefdfac2f5f505d82de3413a0207d2c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527072+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "24c7fb98-9d93-40e3-a26d-6f311911d2d5",
        "line": "65",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_08.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "01b4ced0f1997505f60b1a8c87314d0dcad875ae9af4124a1da6bcffe98c9cc1",
        "deprecatedHashes": [
          "2903d78197552c7a5fb2fc66883dcf1c0376bd046690751f0768c04c907b9ba2",
          "f48200aa78f4e90da2b3a38265e54190e10d866c403fb79712cd69ebed525075"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527073+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0658a9b3-a94b-45f7-9247-96b53feedb5f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "37c20bc39f0bd91060f4871c4a92a8f8ac06f954a0c7ca53f920511f258afe9c",
        "deprecatedHashes": [
          "853255739077ae68ea94e16de9f346434395ad431524b8829b5a85f3677551a5",
          "98e842be012645acea60e18cffe3d57957bf7858fda1f2271356bcf1a92481be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527073+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "af098688-69e2-4103-b5cb-0ee2bee513ba",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_81_bad.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a07e1668f4da9239a98fec2fbae56f0ceba39dae61c6bbb1997dcb8ed1d289ba",
        "deprecatedHashes": [
          "af0af547bad64bb8429c44ee2626903501c324b1fab20cc8c62cad8039ab6342",
          "cc46effc6c5e0ad9a1f0a8c6ff13bafd0204d4c8035cfd2473016d9ba4ed26ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527074+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "00e207f9-2433-42cc-9d69-de9da50e3543",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "65d1fe9f613abed053ced5eb11698e59c7ab1b41c4fc7d6e100e508e4f78acca",
        "deprecatedHashes": [
          "f5892ac2ee83747b8a93954be09620672a922d8b2c77372afdc04b1bd930c7dc",
          "e37e876c29e1aad361d86b66ffe9da40546a92207831d817f166d6ef897b7b66"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527075+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f838352b-0dec-42ca-92e0-44d4c2b8f880",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8e3e8c45b36e132711f5bac4e11274017a1660934374b26a0fefa5f8d9fa8e95",
        "deprecatedHashes": [
          "7cab0a01fc3ac024c8a76daba8d25ff9a9d48ced72636246ea468840a53a9487",
          "d61bddbc8010364733d772a893070f77ee128a54a833203e0426d98d292a8ff0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527075+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ceba446-6272-479f-9d40-039ae6ed3c58",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_68b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "36f0b9d56aa509fa3eae47b9df37fbaa36e7c4e390bd2006d67efe8f62f999d6",
        "deprecatedHashes": [
          "a26938b231eb2d3f4189b18141529f1a70050356fdb751a7dfb85868a51a4f3d",
          "4325f6c916c1454962cbc4666de5f5ab331a636dc5feccf88eef0a99db40263a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527076+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d84e5735-745c-4bcc-90f5-173533d898c4",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_68b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5678ae2f518cd4f4b41a8c1c53d3913b9b55e0e71cad1786f8a444a10e0fdb17",
        "deprecatedHashes": [
          "bc2cfaaed26808f69811c401a2599a81b8f6ca8b4917a81b2831dfb655bedd6f",
          "1180807ca16592e6c4b447f95c362fe29298ada93011007a781b77e58ac37658"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527077+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "425a2dd4-d290-4f2b-b47c-09f5063caff0",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_74b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ef72e8c562ba51a92ac917c91eebd9cb4630db697eba66d035fca19a304046c2",
        "deprecatedHashes": [
          "60a748073f38cdf00337a353d87c9bb59226ebe2bee3bde1097ddf38494762eb",
          "116416f58f513ea084805b0c3770f17c70d5f4544659c723b056ee9d29fb39a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527078+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8dabd0fa-5708-46a8-b897-1b21704502e7",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_74b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8885e8abea1fce891e0a246770ce07169109be19273b49eff533b858817d9016",
        "deprecatedHashes": [
          "7a58bd494084daa945d1504c97234a746c902962809f63fdab90aa248682dcb0",
          "50b7ea625e278ee1840cb28f569cc9ffbdba59c9c0c8448dc1280aa5a1a4d8c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527079+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7b497666-9cc6-4f7c-aff2-41a7993cc25c",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bec7159aa083cc470f0ae0e7fe81f5d28870d12b473d6a31e6ceb5b0f436564d",
        "deprecatedHashes": [
          "9677dda5cb4168a94b090fcf3f5dd2f3993683f6f3af85ee7c9914db70d2c2b1",
          "4b3bcf50bb0a51824f47feaae015efd609481fded621117aaf505761c3b152e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52708+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b703bf39-17a6-4c20-8991-6d4b41311af3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7a72101a1d848365fad2618bbabf75380c604fda37c8df194d6373bdb71c977d",
        "deprecatedHashes": [
          "cc5c301ad675fbe30cac7d8063570901422b607b004118d4869914605c878f1c",
          "199284edd2a2b3dc1a309939d821345b56a464bf998898461098558430d9699a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52708+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "18a54455-495c-402a-933a-3e5b934bc18f",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_03.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "29c6b4cb15aa800af5fe84b5f0520f82873a9d92c4fb2b4e841f87c347c2f89a",
        "deprecatedHashes": [
          "bb173dc9be26c103ccf3490e3ea704738932abb4723f52aea3375d0e3c55946c",
          "2aebb8863735c161b1370e8cfe01816f4852695b295886abc3fba401aa87e8f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527081+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff073491-6489-45af-ab4c-ffbc63a07e30",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_03.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e07619036523dfd4d642115c6c525e37568abef899258e273f0acf8567181ba1",
        "deprecatedHashes": [
          "61e3373d4ba09a8d032b575efd927a70bd3be043b0e47aeb407fb57da7a8d9bd",
          "4b7968392fb2f2f91ca526d3890b61707ef775069616e1751192b3d90a87828f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527082+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "426ceee6-7025-4a9f-95ab-210c062e06e6",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a5aa10061e6886b51113f5b58f616675ec4a5031beba96968f36964e41f07deb",
        "deprecatedHashes": [
          "f8bcef2fc36852fa31271aeb68f1e8391fa5823237e0360ff0ceeb316d05368d",
          "f04be9b354a7d6f7171e4314082864b0842152d6a48dd57050632ebf54a78849"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527083+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "506fa063-d212-47d5-8480-ca7f8f7c2464",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4faceef17de4bc47a49d1c363e7a82e1fbec478f5c2a53848471d5e2c9f72d70",
        "deprecatedHashes": [
          "4abc616d23b3fb882f85b181b1469e66fc8664f6394bc3ede8f2f4bb8c98e894",
          "70d0d61390e11b99b9a7237290d45aeffbc09cca3da45f185a9071a7f1c0d941"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527083+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9d02a11-d477-4b16-bd4d-e40ecb297183",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_02.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b891dea5af4b87d834a91686b497753a242268c31a6ba1769638350c80c477fe",
        "deprecatedHashes": [
          "636756f7a6aec27881b362832f332dc231f788f66f85b71c0bd44290ec3b2624",
          "0b117b79efa379ea05eb502e6fb73bccac0a4045717d2366393ec6a036e06665"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527084+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd14bb63-26e2-40d3-b748-dcc707a9c8cc",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_02.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "aea27347a5d0d27c119e6f5603bf723fc0b7b6ade88fe628f18acba17d357b00",
        "deprecatedHashes": [
          "be3c17c124bef4d96a2d5726d6d6bc0c44848a87d86df26f9e5360f57d83b556",
          "83a11b032cfeaeb1aa51e93c8d60b4d6eaa932c67431d00fa22a8d69f6146a95"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527086+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8e374baa-903b-40f9-a9b2-f34510f61b2c",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d5370fa5a02399aade4e92d2efb26f7bf8d3b03bfd7aeda76a7bad4cb0c750c4",
        "deprecatedHashes": [
          "059865b9353363c6fd59416cb21e162c9ddf1bedb5b6d379478a8c1080681412",
          "04b8c78e42f5cc0c3ac26bdf613fb112f5e4abf8e9cdb770852ed541a5f0d460"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527087+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d1f7f52b-f79d-4454-a3f6-3de8db4815fe",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4a7314af6abb4738e424d6ce2a537701d910fa638fa8df804e7c409676243b36",
        "deprecatedHashes": [
          "11d4642f9610239e6ceaf49761826414931da855a2dda2860a558ad43700e05f",
          "d96745d1bfb04119cb3f85ce672bddfea1a0a030a043b4f7ffa7aaedbba7a587"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527087+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f820b13-3b9f-4661-9529-85856b33a7ef",
        "line": "102",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1426f13dac6119f56f9f9d0d787a3869e361478053dfbe5c40875a4d6eef8b7b",
        "deprecatedHashes": [
          "8d5a35b75ad48f28f68eb4d2c718cbdba5a0e756757007fafcc645f0484d01e0",
          "f7f0468cf65b61dd904f9bc91b016c01f6d0e4a8eee64b50677b1a02e0495d18"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527088+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b18ab933-eb60-4f7e-81d0-474ad31b0bec",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "094e6dacf2f60ae28165ff820b772b1f5b9d1873b71912cb0b3350606dea7366",
        "deprecatedHashes": [
          "37ec6046fdb5c8900ce1ef55f162f01862eb54ab359fd8202a2e0fb7a358fdd8",
          "adcea724b19984d45e38d4f65d9a253e97d37f6ff45a68c2969491e7c3c59e55"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527089+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "afde8e3d-3cf3-4e1d-82dd-b8ae9679317f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f2bda8868f092fd6f5514fa86670243bd6ceefb7672b84dfeeeca119d1a1111c",
        "deprecatedHashes": [
          "71bbdb92ee7d55803929a6957f6e615f0965d5199220889beae6eb23164228aa",
          "738a7b588fb706c84c9290f859b078f99d2f921b1bf62985401b76729d11085c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52709+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5a7404e6-231a-44ea-9059-31e8a0fb75f4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e757ba3835e5c06bdb60980628e0493b576298e3d9d800d10c6f5cccb8abc2bb",
        "deprecatedHashes": [
          "9e6b8114c6a7bcd0240c2bcf993c68562d433194152158a9701e64b2540b2962",
          "4ed118a54f0ffd5b4b9011f0db748d0e0ff91028113c1b190cc6eec6f6bc12e0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52709+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cb15f1d7-42c3-4c5c-bb53-1de8b9866bec",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d92cd2864e30b4a1a0838e9b8842b1bdd88fd4fd165a4dc0a8834233a76a75cd",
        "deprecatedHashes": [
          "ee6e3a0a26c6275b33ecacc14b32cdbfd98f3867b8c5c5c088118c7d0968d7d2",
          "917c5bf573588207a58546dee5481ac62d00a05a19997bfe365ec95251f08a4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527091+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5b20c5d7-c7cf-4737-a87d-565ab6fb6ff5",
        "line": "100",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "08d806b0aac61cc3711f0db81f4056d8afec4002b87ab84edc296c8a84c78607",
        "deprecatedHashes": [
          "67b467a6a0ec23fe7b53eaf4c5ca735f0f39de323b452b50405effbf6e6248fe",
          "c8605e011fd6f3a3c7ab528dd82064753eaec593f651274c691fca7c76740636"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527092+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5ad71c3a-6953-4b84-abbd-89d279fd1fdf",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c280e8f969454b85958db56916c586e47ce97cf4d43e41ac136875e7ea72ca3a",
        "deprecatedHashes": [
          "fb76a042d49254ccc74205d8f53c79684f91b465a7490e67f0091d036c137d05",
          "12d21f910c3136b9187928560f9a838139674e1678b93b58ffe347aa8f06bc55"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527094+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1591f4c8-3d21-42a8-a28e-d6117123cd72",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7ea4847b0cfcb4d0f5986409c20cdd84bbc699f46a9194bcca2455fd362a2004",
        "deprecatedHashes": [
          "ea5cded365559b92f87bb0e008dda9e603e7d13a9aafe97cf8e4a56451d1aed7",
          "a38b23b37f1a3ee01b5d7d00aca0296cee284cfd28c9fc5e4f52aec452180a9b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527094+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "79d18f14-261c-4639-82fd-2f100e3feed7",
        "line": "45",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "de709c5369fdaeee178944c9bc69ad9af7f1900db3b0730573485e528d9d86ca",
        "deprecatedHashes": [
          "78fa3e9bb26ca6eba5fe9fec46853ce689eaaf7404703fec0ef123db45d71f0e",
          "91edae6a161c112006ed0c609a211d265f553477691d7f925014eabd7ee2f66c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527096+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5020b07e-dd6b-4fb8-ab57-78261981c5f1",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "12147dd45db5f7948deb82fb3ef35dff09290af7e6abce835811ccd2bc89aa32",
        "deprecatedHashes": [
          "2b64df204195f428e62dd5d62ca32f53b9692269329311b45766f5af031c4320",
          "920fd9b1d055d911d9fa3c77954a20d99c2a9c162fbca98ae3e27ce7607ff54a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527096+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d955e15-3c8a-4b52-91d7-be870e95af3a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d05d01e904ada516e42da70d2ff0057d11851995d4273e0f50353343733c8348",
        "deprecatedHashes": [
          "f822fd5f0c93d2240bd45d5018af13fb25bac8a4642b0808ba2dd905d8eb81a6",
          "6740657e12916afaa47b707c42096754c2b900e56591a3986c4d7d4dbadd23d3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527097+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9eb5701-6264-4a04-91b7-a0612c8b1ebe",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_42.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "50d0ef172d578f0fef26e61c085f4c257bd0a32524480b1c86a3935a2a20cd5d",
        "deprecatedHashes": [
          "9d0d286bdd95c8774cc3024a0e2622943812af86f62a10223e9ef6460a7423fe",
          "5130da6b6a4252a34ca069451a038acc530e8529fd64237c7faa4dfe4118f010"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527098+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "94b41b55-80a4-4fd1-a244-5b1c4ca19afd",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_42.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8bbd973a987082a266f812966e00a0e8726c07a55521c6276132bab632717dc1",
        "deprecatedHashes": [
          "087a506da12390384c8ef47d23baf757f563ee36f5fdcc97e06be8aa3e40c62c",
          "dd4f84bb5c623da8ce8bc5f4980f1269f8bd6035e345d7f67656ae30e2ee350e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527098+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "94653643-f2f2-4f6e-a60d-3980b4c70eb8",
        "line": "54",
        "column": "45",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_42.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "a2178beed2262119e0387d7980e8ad37b10d030e045884f0d948c298bbc24023",
        "deprecatedHashes": [
          "036d33bba445a797da66510b76f01831b028ff564bd3ad5b8e1b9454982924af",
          "6d61cc917813c2cf4a5196675ac550048601c37afd84f70981ed3bd2a55a7ff2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527099+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "09e1252e-54ae-4ec5-a1c4-6830078f9852",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2a3316353627c5e7faac354f839acbace068ecda2ec50cac7fa374633994385b",
        "deprecatedHashes": [
          "e6e4a16ce0522d8a7a5e6352c03ca137aee2df3435e804ce84b062217b57d6e5",
          "4392dbc25a93d1bf6dfefa8866772c598910ca8623deeadfa0d238e75a2a78db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527099+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e04fff41-b9b6-45c7-b0a2-d6c0a78b5ce0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8109846242637a5d06009801b94fef4f46668c35c04bef1a35c2d97639a8cd81",
        "deprecatedHashes": [
          "76b69acf34eb497f4f9dc0b502bba93152cdb73026e60bd6c39261d7f6b5c291",
          "364a2689e90c66d48a8c38252da8586f9c7125448b8e6c0ad8ce3a53c4390926"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5271+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "31bb43ac-aeea-42f7-96eb-3f09a2c05eb4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5a674b784e3e3c9bc0f5e12992d27b01b25e19591a2938596a164321c03a7c01",
        "deprecatedHashes": [
          "f999e8da9901db9f630865246b3e99f55e7774ca8b9170148b91a9dcfb7f912e",
          "7dfd0727535bb17db40709abdda0adceb212a326ed596b22156138d71fdeec99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527101+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "51fd3816-95f6-48cd-95a5-46e509aebf69",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "844cf42eb48d7250ec7bbd3ace88ca66b56099fe49cfb3ca271e862022850ba1",
        "deprecatedHashes": [
          "dce5e86f2d0460e037723ff3f2f58d7863b4e6dd3055e00b4f38976d53814137",
          "561aa022c15520e31ed7e56b7fe4b1a1cef7c9c0c40af3a5d2c59a86af5d513f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527102+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7ca3aad-4f5d-4ef9-866f-b6c472919457",
        "line": "103",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ea18443a1293422f74d6b55fa8578bb78253b85fc50eec233348d0a7fc05ef2c",
        "deprecatedHashes": [
          "da6795d56b5b3ee5caaffe7ebae6c2b1ee23d5602269e9062bdb21874e2d2a4d",
          "bafa8c796d4411617aadbbfa1cd78d60d18a429ba31d0775f7a815e4df8495df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527104+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9e8a1b65-4578-4a2c-af29-aa5c289cd37d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fa67ef4e125b8797df220ae9cb8e4f8d092ba940cdd746c144c25ce62e53f4bb",
        "deprecatedHashes": [
          "dfac2a6feecaa92c6d4d085e95e98a6f2d9c3f3168b8b9326329456e375b301e",
          "92c0f4925b57e78c16a46116e598b1067305671534d9b805b79f0aa94c218f17"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527105+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ecdeabe6-bce4-4a50-8d84-d1ec34ef16f2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ac0e5df675369cd3eeef1d0a3475e6db9e2f1cd3da7550d3187db570cd9b3007",
        "deprecatedHashes": [
          "d23a36dbc72a7ba2d0b95c0ca561f7e990bb194dadc38213c19ff0414d2ebae2",
          "4b4e40c25fc66ca938ceb5abeccdec6a668423d3a2d28b85c68ed1b7a306ff14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527105+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f402e362-1fbf-4031-a378-a05da26dc3dc",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_81_bad.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "97e2b7ed2b9044356d1721f92e1c01b56d93204b4f108457673937744530f520",
        "deprecatedHashes": [
          "fb2e2b0bca205bb3928e570fd64d20d10a2eb90c9c98fb5fa92840fabf4dd107",
          "388c917847be9236b36a9a9e5e2e2e76c2d2031943edfd4f81e459e8a4f1dc07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527106+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ac7b9e56-969b-47ae-89b4-1833bfdcd67e",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_81_bad.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b6eaa5a573ebc25f9c98c81bde5f078b71bb8b4c6f5d513a8f5646cc38205a92",
        "deprecatedHashes": [
          "902713df99b60ab689f5cf72df4c99c352a16e915e00e107f4a4304f63b39b5c",
          "7c47cdfb4b29f26993cb5b44dfb104cf2326c2380e413d0cf19875a209c02a31"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527107+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37cfeac4-f036-4567-9e12-625767742f15",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_71b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "61e6db4fe9125de2ff48bb8918e4da28479b4a9d2ef186567a8865139062bc2c",
        "deprecatedHashes": [
          "7a49088c1271d80de41ad79d7b7cfeb15ca6bc0ca5f54b2051a5f059262a0b62",
          "aa7fcb98becd63478b348dfca1e15e333ae14a00641dbe9604a190a6612e58e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527108+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b0ca025-6ab5-4010-b9b6-5c78dbbe26ee",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_71b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e3900c83382294c969633033e82b527d019efa559bc3d1049695f0983531cde6",
        "deprecatedHashes": [
          "25c6a5eae076cfbdbafc878419193b19d6d9815a6393fce492e6a973a07282ee",
          "77494423cd18677c89a4aa245165e4b3be5cfe55e4a2a60f6cbff3f0ddf18e83"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527109+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f784bee9-a507-40db-8b11-37a3c910bdea",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "53bc07aad375139664e324ae0a771386e0df6c54193a1bd91b8642353df1bbf2",
        "deprecatedHashes": [
          "d66dcd1789c306f00210f272b9227f51446067e5c3bd31524bf361fb06f5cfb1",
          "c8e83a2a87e5152d8d946b47eeffd8cb7a5385fc4d695e52f5a1414bd40466c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52711+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "784007d9-045d-4be8-bb23-85218a36e28d",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "423a4b6d51f85d28d1db4dd7d52a1a0c04575e28758f1397e670e69fc14fb0b0",
        "deprecatedHashes": [
          "28e2381736e99039720cda518a07eb803b7e1a87e10e393c5103f77744651b4b",
          "460a2fac22f8f54c416816d7c63506c73e8a8dd46b67bfd0191cbbb1cd3b15e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52711+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7954cf08-f276-46f3-b45a-f7526d04b06f",
        "line": "40",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6f9676c395fcc50cbe2f218e181159815ce563ed3d83f80678c66957138147ae",
        "deprecatedHashes": [
          "2f6fabdbfecc0384c8efa10b1986787005c975642c39a47bf81563988ac374b4",
          "ef63e5fe5b919ef8d63dcaa012bddb6027dadbb4b9167a771ff6416be04ba755"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527111+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4da5a424-76de-4ca3-bcc8-e1547344c538",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0db56b6d8b28c62d515e703a032f03d92ebfb377ef4cb62c47b7dcb8a938dca0",
        "deprecatedHashes": [
          "966bc70b278cf5f41b96a4662e30e36de799ab6112984981e31bcbf1bdbf7f55",
          "e402bef4d4fa75dde93f866979b42eb9519b7c4422dabe494e9d5f154d15a385"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527112+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9434f9f-7c2f-437c-8d78-75366d6b4d96",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fd2903530630eec20a55ca9c2ec95f959307592bfdcd685a9983cb88a1394cdd",
        "deprecatedHashes": [
          "75c67089c73deb500165d2903cdf94e117e2f52a4ae54a53c1dbdb8b8689a0df",
          "be874a43a0f569e26cacf98cbf5362e14ec63d105120b69f84a4a671b4ed2624"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527112+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7a42f59-a7ee-4a4c-b35b-babe0a495dc1",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_31.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "595c16237c52d890a90e8a738ccf1301b71b5a23fd3c5fe1d0125ba852834894",
        "deprecatedHashes": [
          "8990448fe2064bc15cfe0ca4accb717814c8bedee914d70f67b8d627362807b3",
          "ecf4e118a1a53ddddb75ff95dc3f58f5175dd596b4a5bb10ecdaffc5d95f9122"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527113+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b01b298-b773-441d-a550-4d34c0484a61",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4961a743848c5ebf646a6e71beda9ce46f9da88006321271511c819779c3c2ae",
        "deprecatedHashes": [
          "6396cf7fd9c5fab81425a4377a7226ec4e3aaa467aa5759b390cce4fbf6038e7",
          "44dac0a68a6c7d7b600862fefc2e92bdc8a96fab61f91f78dc7b9e355aa01160"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527114+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e835e636-778d-4946-a01c-b51b427d702a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3f07ad5027ce1fabd4f002f95e4daad53553efa094b561ce314704e7761f8cc6",
        "deprecatedHashes": [
          "63ce331dd8d458d3551dfbc1e1bd666dad4db77b23ff1ff64a85036fc8a32795",
          "ad7a96c496b474689136aa58a0bf36332ab80363f58bc9cc87e7eca702d86afe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527114+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "770fc9e7-d343-4f52-8cfe-9741c8b6a5cf",
        "line": "116",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_01.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4c30b4a4e9629f3fecc7030aaf3596d72aaa36bc20d57f4cc6e993874ef3ea61",
        "deprecatedHashes": [
          "0ad7334643487764736859ce18ac188fa0ab8174290e0ca3467ac1a50922f19e",
          "39ed775abe1ce94fb235d8b002c31133dd42871ebc533f36264bb8722a657837"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527115+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23943aaf-bbeb-4856-88cc-92cc5fd43d18",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_01.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8fe13ddf47bccc52293e38c58fa6a1da36fa3382b3de6af338550f1a44d5c09b",
        "deprecatedHashes": [
          "bfdf0f7f793479412728ca0fe23074c49a48b0aea02e44fcbd6a4e3a87b8c653",
          "429c2d934f77d7a9489a815b58c52fe13ca31773333a2c41ebd88a16f43ae148"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527116+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ead067d-1456-4709-8bf0-f59674e362a1",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8695b756345554cc6a6f63475a402bf1d721da1102e1b68f112645e1b6bd2102",
        "deprecatedHashes": [
          "ea9af223c4028801bf81ad0e62f22de730a02fd5a0637e5d6a5369b6db10d532",
          "41ea0cae8d946eeb46d876e579a5a44f1c31179a2b53030f5a915d9cb4f064f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527117+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "60643b8f-5adc-4a01-9fde-39cfbd1c0797",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a34a0ac56d134e7005ceac9b3a632ce5adc7c275d4eb085573deaed6bbeb2d5b",
        "deprecatedHashes": [
          "1c42e73fa8f22e4ae435f038f7bfb3cb489c71fe2cc586ca1cc1ded111e0cc81",
          "2c84e2fd1c384f3ad637dc5cd2656d2ad4de0e0c39f610980f37ea45e0a80ab8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527117+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1eb92874-ec3d-458e-8727-98680c212ea3",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "83b11b10ea3d5018fde20e8093138a0125b4e6c5dd25d842af4fdcd9f105c25e",
        "deprecatedHashes": [
          "97df61af9b394b90108829887718f8d14b40155d21f6c1ca1743efb09cfeaf63",
          "9a9361465a1fdfa23fd4ccc2f2104fd988e71e48eef14e6e02235196c16901ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527118+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f52e37e-1dc7-4b8c-9e3d-4768cb159b27",
        "line": "40",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1fdb75f845db584ebdbb5d83cd69cb79309d01dd765c4f241c803cb7e0779d8b",
        "deprecatedHashes": [
          "953e24aba1e0dbc314c5bae65c86aa6fc622413097770099ef2572bb2d363637",
          "b906930a5c0877a064b65770f79a490cd1b0e61ae9dc4698540e6a6f26f5893d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527119+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95c97c7e-469c-4e7a-868a-9c2a834b424a",
        "line": "39",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3a59799904a57a0c74f86dfac945a982467ae449a2026c6920de57a6d9c29118",
        "deprecatedHashes": [
          "dc694d4af6774aa02f050473a75ca39d85ee6c41188d4ad0a86520036d6714de",
          "357c8cd7267b48e3d63e06294bb2ac88d235a5634c09af66939fd4e85cd89862"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527119+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13e7d0a0-8c8e-4cdd-9226-b6d9a0944668",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1aa34f4d06c42256faf8f07a0b347a6bfc3a25e75f09a3387fd695ce88e294c3",
        "deprecatedHashes": [
          "a23c219487b8ab12a94fbfa17726ea86fd6765b70e108a0f925e3d27ab785385",
          "e3f76a75414d71089e1f649b6daf45a01cfbbc8c482ecdf78cf25873cb86c86a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52712+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "efac5805-47fe-428f-9b90-a757741cd508",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_52c.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bab14784425bd526fead8d7320146e0aaf849ac83d6eef8ad4dac27c4c269e5b",
        "deprecatedHashes": [
          "241ebd14d59d87b89f4f0d2644490d0bcd1e2dd5c1726051493148afe03a1f09",
          "71629524f7672d7b2d3fa104fd1f34b4de8f5aec2e98eb5a171594d008f7af0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52712+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "03aa4b64-b3ee-49c5-aecf-8febac570637",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c34ba0922b2a9055a373019c99d19c41e9494bbb6eea9abd6e537ffa07330857",
        "deprecatedHashes": [
          "d49800abc3b3c5d23d403ae364172af54a0d9367c1efc09f9f136a5afee2827e",
          "19ea040a5c349cbd275baa1431de419cee146711d6f1252f0eb52a9709f7d6d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527121+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b0453b01-a89b-49e3-93c6-d9f82e521081",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8ef8ffb25f971def6ffb665f53b30f1f8a5f7d399e498b6a0749311700e78438",
        "deprecatedHashes": [
          "f53f75bafcced6cf261c94bc9c3d99e6166c734abc16f4321f52af9da5e0f3b2",
          "eb4612dc4a3d18e18c570d58c1d83b480b05eea110a9f1dcc9e952a044e18620"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527122+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e56fe4ef-2abe-4874-9a56-f934d0ace749",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_13.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6ae8f5c17bcde25e5ffa2c3cb81948f69b2af03ad431afbb30222a81fe52ad66",
        "deprecatedHashes": [
          "ef25f8cc0e6aabd47e1d5d8311a558179a907bf6fe0de50a5aa757509da9d345",
          "0921972108bbd8959c78431c43a96b6156ef1dc939ecc2b584d68905da96e603"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527122+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "067f45dd-9175-4fba-b2fb-2a0fb2b75b3f",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_81_goodG2B.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "28104585538e7d73f2ddbe8fc4abd46ce65baea1f4f5f5073a5d48f90abf8404",
        "deprecatedHashes": [
          "d4870ce9249c42421e4318be70e3dafa5537ba10ed359497d3f7250170692c7a",
          "9f1a8423bd70d28d9463230dde412c9128c6489cf4f78157b809b56fe51ffd4c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527123+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a712b4a6-3d8c-4dba-93b4-da1594fff1be",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_81_goodG2B.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b89f81583bcf6f39abdf98c5bf598c1df44f2bcb1affdbf5d61e0a776ec530ac",
        "deprecatedHashes": [
          "fa770c115000bb5a3991ea7e87d0f218ca48cc21ab8bcefa0249c828630a931b",
          "c40dd38a2526271da19f8328eb1997a936b9178ecdcf86edb20dad0377fe6edf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527124+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "caa29325-c95f-4df6-b362-014912d0fcad",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d0da97c6f206a33ac735c11854e58ba109e4b975fc1b978b7cd4c387b74fcffa",
        "deprecatedHashes": [
          "26194fae1811b30287021859632c26478320696f20d2357f4aa249f043b53485",
          "ad2718ac8bc205413f79254d4485780436a137682db76efed1ac59569dd93ad3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527125+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b65f597-b080-45e7-bc64-f6b77ec13f12",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d0985b3beb9368df0771a78478a409e53afdb1520b10c99437132e4815d9dee2",
        "deprecatedHashes": [
          "4edff99597ae4d44e569b50d4679dd63f1b989fe7e2c042183fe2f9ed800eabb",
          "b159a720d040a0063510c0af61305160cd5cead741ab1bb456d26cfc80f08340"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527125+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5a588278-d769-44a0-9d82-76f866251dfb",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_42.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0ee34d8a787efcff656cea00d3611380b87b7b34a850b16c64f07a08de073bc4",
        "deprecatedHashes": [
          "a70a70c488dabc3f0e852e4c23216c98499321b8eadfbf08dba126d7aac35cee",
          "10496a2685259e939869fd34892eab1ed58d652c559c44c3f5bf441c48af6ab7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527126+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "504ea7a4-d636-47ad-829d-d2a3d3137721",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_42.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "107ba001897f0fe9ed886b5877933947c860fd06a85ebc413a145a334011a8a8",
        "deprecatedHashes": [
          "1ff7d1adc027096c756ee41de55a327e30466266f85f28199a6d149b806f7f77",
          "c4454d41bf419199e53121621bebc793b469b7adb410a1fc59e98e2d9de80d4e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527127+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed0a1cfc-c2b8-4e46-af58-c37b3f22bd96",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3f595bf6a62d5a6d23c64d32ff5d679d5163dc37d6984f2422172bf22a061255",
        "deprecatedHashes": [
          "6766ed0da698438d7787a30f3bb48834227f0a43e7babb04787c41fd6fa05ca2",
          "48cb1ed182a2d36281d887e20923de20f40bb465ab3ef7b6a7c116c1fa97d8bc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527127+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7979cd6-17b8-440e-a83f-de365ce85d27",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5fcec520b0f9eceead1bba3dd8d00fb16a6ef6dc75bf8d92d57b3e19ca6c292c",
        "deprecatedHashes": [
          "0b16b0d07183c66cb3f17a353c30deb2902dfa6e25c99d82039b01d977e5c5ad",
          "d2c073ecaa4ea59c326427c93086bdba1ed56317d95b2b357f26b8667524ec09"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527128+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec461a53-c043-443e-a5f7-606bd989f47b",
        "line": "67",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_05.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "570bac5aa86cb74b72dce7e2a7404b5d319d1a87ab1745d37ed7be46d1b5a525",
        "deprecatedHashes": [
          "ba177249ca5e110954c7c15024353fef6199fd96ff464dce4a43586b03293e43",
          "a05ea485528ba4857d1e0e8bc0e225007384ecc4e9b5e523ca001134b6044a22"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527129+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "313be273-e48b-45ad-80c8-b94ce89d8fc3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "33353255d3dc4279997b5b49950cdef52b93f4198c12f03c8138344243c8049d",
        "deprecatedHashes": [
          "39de9ab72a555d228b9f1f9ac88ffe993980cd6f0428ed7a33158abe7323f0c6",
          "9c2880470eb37ad0d314bf50237bc4c76c5507c964844c777d7be904f6205f97"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52713+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "481c028c-9d33-4411-8e23-4d12f599ace0",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_22b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "197b64f11bc9d52d1fb7973d8cfbb69e77f2b1cba74149a2c6210be61b267bda",
        "deprecatedHashes": [
          "3214e2013f2308d5242205f4bdc5c95a2169d38762a343deab83db99fd1a79cf",
          "6b7d7bbb40b5577483ad82ea2a4cf455593780fc4fb659c2c8022f1127a6791f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52713+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32567b9f-124b-4535-8eb3-ea60b6df1478",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_22b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "6736e5dc61c09635dadfae0ff32a3257de4becfc47d3106c3e296e0c4773ee60",
        "deprecatedHashes": [
          "e10d11b92ca361c141c77c99249fe0767aeac2ec60301efdd4caa0e40866c1cc",
          "b25beefa09a10e1343fceaa1071aa56c0a9d5fad27eed1de24048a174ca0a900"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527131+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8dccefb3-f85a-4f20-be99-fc18f2ef5b13",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b21698f1d3b13e0f68f1b02bfaf2fc1d4dbc320f5143ec742018e592c5b6a3fe",
        "deprecatedHashes": [
          "3a71459c63b4ace1a9453b59f80aac3539885507781458bba1bbec71e9942e7a",
          "7b998eb4e2b6708e731bcb062799cbf1ba4b964c4799e85e3dc36e1ae42e7543"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527132+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "66839848-9ca8-4c16-8bda-fc453f9c707a",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0d753a452de4d841f8db2b38704f0462934dea4d056553de7796dfd4910ffd21",
        "deprecatedHashes": [
          "d7609cbdb3cbe8e3bad7010d3bdbf2779241bfd18ba1833f19100d862c969cf0",
          "6dffaa989988cf482730c5f12f6256c14751785faa70787f94557f367b8876c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527133+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "359b1cd4-ccec-4a36-8371-b559324ab022",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a98dc1a4ac364e9a13232cfa4832e01926756297f7b37d7dd91da6acad7900b0",
        "deprecatedHashes": [
          "6b3b8aa628cfefabba97bd708292d3b4f20f2305cf9d8d65209a81c972f6a949",
          "92013e3eea326df4de8849d67bccaae37dd9aabc74c84da5262161d0109c7b56"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527134+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "71024aaa-2e19-4ae9-8d27-c779d66881cd",
        "line": "124",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "57a2a96fd4cafc708d4c86ea4568f9480c9683cdae3f58b809e4cdb9cb3e3ef3",
        "deprecatedHashes": [
          "bfb1e600f52e14e925dc437776b3bae24112b7c3ce2eb389e4819a66cabff2fd",
          "f6b90ff3279fa2300f6194e345ef94c3ee8b938614b5dd3a5a8a7eeb619215af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527136+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37ca3582-e3a4-431c-983f-56e00fa7551d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d6d676a47829ec887ec7272a3ec839f62be82804d6d7b2730b01effde1545884",
        "deprecatedHashes": [
          "4319b42853234adc5c19bb1070cbfa9452adda5b452d665510f9629ae2046663",
          "2ce80a1bff89cc9241a8d33c93a542de6f880dd65ac3d6231c15fe2587fc83e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527136+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "09c3a940-63d4-4860-aa2e-ff7f9979fc0a",
        "line": "56",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_45.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a4a645a063825aa530521385509860dcb6c66b3660f791df8da7809bfcf32c03",
        "deprecatedHashes": [
          "f2e3790a04e7446c4804becef308c905f3d659eae0eca3657b0a5e3315bd4fd8",
          "66447fdc5f679525e0004b93bd8d71a1c8425f4413b1c4dc1309bc3a78797166"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527137+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ba4229db-8c37-47fa-a368-69d6ed91c532",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_67b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "32712eaef0b73be84f920464cfd1f2d4ea539c744edee6fac5278ca6b5bedd4c",
        "deprecatedHashes": [
          "99d00d9eaf561be1930ed61127a0824de8bb8de39d48427961b9e1202d665168",
          "eddd3cf8d411dcf30ca9d2a5ea6033ace1eacb9528e626ea37e3e95d3b13e997"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527138+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4fd5e002-900d-4ffc-b9de-1cc118daf5fa",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "153a33d73f9c9c5a25f36ca095aa118fa616c49b00050ce0bf4c6122932cbf68",
        "deprecatedHashes": [
          "36c795ba48823aea78863d11dc32c9cc103e724c5e14e2c4e5c6468ddd4cd13e",
          "b99620f3e20e456fba39564a9dc4bde91384caab9569df7c820a9e17431fbccb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52714+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa9df828-25cb-4d77-86bb-723873672332",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c6241603d6c5cd41058824bb78d12975c2e46dbf95640d77759ffc4f10ab8bf9",
        "deprecatedHashes": [
          "8f31720e3e158c65f60dbe98a9b1b10ff1df3dd540900ef58597ba7a248e8553",
          "879003a5d82b6a58150a89ccd1f012e997e9772a757efc713a0cb68bf0dba899"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527141+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "72bca829-92a1-4077-9add-aebd78d1549f",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_04.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7d3f06cc66a630e7fdda8c29ab24732eea07e962b13f196c96d1f7d6149b2748",
        "deprecatedHashes": [
          "b570e7278c0e0043102cdda0d9d92db8e67472cfdf8bb34503d443f48800c382",
          "6759627144ab3ef83ea0ce81b3d2b039461c29dba6c8728f46d21df8b3c8d4ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527141+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "038f08f2-d550-43f1-bdfc-3d9243b84b9b",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_04.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1d32363190ded14093ece6f671314ad75a6415544ba78629068eb064acf44823",
        "deprecatedHashes": [
          "c1a32a07bcda8d3e36a23406176ce693983770d43a3b4c54dcaa170e9b34510f",
          "6f674ef8f9e572461858cdc7227c888cb5b13da6a0e1ae0d541c2d59eb9b42f4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527142+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "31a8b139-9ec0-42b9-ba75-a23691b3e13b",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "60a04be111378ed4590cba305a07dcd9a3464734c35f0ce1d6c8cb0129a25d3b",
        "deprecatedHashes": [
          "198abd9e428f9ec7ef534ff97c73ac400aaf83f102995804263415b3c01f0679",
          "7a9c28dab86baf2f5b930692809f27c3cfc64590b7c679bb72d8feda0d3bd7a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527143+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f5d69ce6-ddc6-4d38-b8a9-df87a37a2384",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "00263a150303a73d4de7f4b4b986a09f15a9e776f68c88aea67604654623e675",
        "deprecatedHashes": [
          "794e87c3fa0d29eb234cee8b8a518bbbd622959b34a925ce0cd0699ea7c68a91",
          "81f278126fedcf777b41f655b26c33715ceb6391dc34c0dbffc2fd8582262708"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527143+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5a6ebabe-2c1b-4235-a327-9633cd355c56",
        "line": "51",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_41.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bcdaebc9341397392249ed11489798fa54c7f73ef53b638d4b93018d483f3433",
        "deprecatedHashes": [
          "aad97735a630a5b78fe9fff90575369f471697411c41a4be0b20d15fd32bfd47",
          "481e09ddd655919de8b7fb6eefddc484163e1529ee8ed10c8d5795ee00344c24"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527144+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b619ce42-c279-4521-9a11-12e2e8b09484",
        "line": "116",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_41.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b6ca34cebec6b63103c3fe39d0b34a388c934938f746e88360be0459d93674b0",
        "deprecatedHashes": [
          "ecea53ba3554a22ede83d9ca785e289120380a084ad079b0029746951cdab8dc",
          "78d595ef304cb7cd190fb53dd1d8b39676d8a800a9a7adedc2f625894f124630"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527146+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "da19bb05-32e4-4e7c-967f-1f383d243f1a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d4d74754c7646228a079dec7be4ef89992b057eb5e0c6526697cbc1311312497",
        "deprecatedHashes": [
          "7dd7e3b10d84e78bb8c78f7cd9048d33715b24e38ccc52078187f70210492b3b",
          "57ac7386334a7d8e13f36c3adadba6b0b3c34293c67c2a5ce8f02578ee755e78"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527146+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c41dd29f-2e59-450b-8ca7-a468c930824b",
        "line": "115",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6d5bc5cc6376c4228d29d456b8b6af8fc88f9c955984f8caa633397574a983e5",
        "deprecatedHashes": [
          "4db4044d3fd8c276c433136879c0c64a6ab0a004e8e6602b1b70aed16f7d6df2",
          "14c79ea3d364f64d4faeeb397b78910f77db306b908b4fec1e41ca4d6b835469"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527147+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b205e40-3460-49f3-93a2-d259734064e3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a85618b85a4f3096c1b2b577f4407227b282915b656e99bc31c811ba8eb30d89",
        "deprecatedHashes": [
          "1a2157dd319a5de5e64741b7b76f0e751c267bb880a7c38ceb09708eda92ae07",
          "ee3ca6b933743800aff9003174f27309bbae649693c5006a696f149f6412beff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527147+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b0ffff0-3f7e-46f4-9733-e071836383d1",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_42.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "473ae8c92a41c0ffe6ff312bf65091efe07101520c61c9751ef147e771f5d854",
        "deprecatedHashes": [
          "4d26a7cd598dad7e63acf0cb234430e061ffed7051d076d72b26f268c67ae85d",
          "d685f4c87b8012571865dedfa650613a2598528f71f6f224229b11cb2bbd4794"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527148+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d9128e10-e830-40b5-a192-8d2716ca44bf",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_42.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "fbcdc0d15a9108df5a7334115fe353b33a444be3c20e44391cd083a72cdc880a",
        "deprecatedHashes": [
          "99fa3c214851b3d379ecb6fce8ecbfa918b0407e501cb04390a3a7faad5424b9",
          "26b2fd4040e3d9362ae93ee87dfb583197976c812e76854e3e4157366a1eed4b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527149+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b0b92fa4-fced-44f0-b844-e790d68ba78c",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "23e42e37155bd65988e750b16b19a7dae84927ebf6e73333225177aca884789d",
        "deprecatedHashes": [
          "1dd50da0320111a6d6490e10c1787ee4c905334d8b4112416f0764cc56672ef2",
          "8d86a60a6eb249b81ef62f62b91306264947191261c059cb19c07c0d4cc93bd9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52715+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b6d572e7-0b62-4f97-8af4-110028721695",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "eb7cb3be8d239533f1fa70a69274864aa439c57a518ef6928782aaf602214fb8",
        "deprecatedHashes": [
          "9b46eccf47ffc23bc868a7acda806f3b996decb2200b5e4e60cfef50de1250fb",
          "787882e535e756b012d5d4f2c65bff0e7f5cf7b05fe8b9c400dca435ce6377df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527151+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "15775fc0-e50f-4a69-8dbd-9c35357bf4b5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9898f7047da357041622641c9d163dad3ecc392025b120bb9deb1f2b50a8e54",
        "deprecatedHashes": [
          "c33de7e1dac82b1c23fef36a30425c79477e91035c737ca0f7c3cc5932af4ee2",
          "8cc349351ee3fba67e95b0f5654aa61f60edb539e9b23ece05bc05b7cfb14096"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527152+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8f9a72fa-e4ad-450c-8530-baabd54f905d",
        "line": "56",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_16.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fc82b81ac7cbea737c92517f47cdc2afb74445b327e10a33f5a3128184c4324b",
        "deprecatedHashes": [
          "a38fcd505c927a9c9936ff9ece51d834ce9fe913208a5ea9eb189d138707d741",
          "45018eef3bc543bfe5ee5ac2a5db35ab6c62835e18f29fc6658abe203dc4ddc6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527152+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6191c8fb-ccb0-4747-b297-74ec193e4fb4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b3f7f51dd0a27f290a415d4e491eba29693d4762cdf25672e5e35f08d09efb03",
        "deprecatedHashes": [
          "eb581fd38c434ec9f3e75e760165302b3160835f294a6d4465ed22cba25793cb",
          "7d916dd945f84c383b214600bb62d3a4b7553c726d11eab010e174a8b1d72321"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527153+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10634a8e-b5d8-4249-9f81-482dd9195291",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_07.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "dc0a5ed1d20b0919b1fa98f1e94de1e5ceff49946f1fc7c82315864c38ad0cbf",
        "deprecatedHashes": [
          "6ac14bac0bf695723b129580ac60ad4b4e356e54eee08d42e4e6f6a3447757ba",
          "c8ac1045c4dbb92b5598f68900f1ff6fbb7fe8209d234a49c018bae477247c86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527153+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "30f6002c-9561-407a-a251-0f47974ea694",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_07.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "00e6d7cd76fea47b3f93abb34016a001d896df993b079689c00520586bf4b757",
        "deprecatedHashes": [
          "1df8e8c42689936d0d6d6863cc4180cae503e16ebfc6df711e6fd03152d7a452",
          "b77c486770b93fcf8cdfb0bb6bcd585851a9103c3c09aab39572d4766eee1468"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527155+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6d1273ee-9ed6-4934-adac-b48598525767",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "54e0fe8a331529298373bbc4b83da5134551c847624aca13e25b3afe50f1e5a7",
        "deprecatedHashes": [
          "39840e2665d349efea19ac364d8953bef574ab54d25a6aa0f74e39295d6f74b6",
          "99e4cbebf2c960b67f573d9f7f9d5e101076fd606593b889d8cbffb261df1948"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527156+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "716a0e8b-d3e5-4c46-99b3-337f7bd70277",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "585e40d0066881c172290f3646610715a07a820304d53a4fe5d648e67a36b2de",
        "deprecatedHashes": [
          "cef8572ddaaa756f7fdf83c6ca3b336efd25c0dbd4e16302139f962ec284b516",
          "7a4ec26d13ef397c64473dc84b099dff83d8f35f8f7f617ee6aa65485613fc65"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527157+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "03c009ed-4ad3-4fa8-800e-8a21de4c4e4b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "395b7d7346dccf4fb37add78ddb6e77f55054b208d0138090a0d4ebd2515aa34",
        "deprecatedHashes": [
          "0f9fcffb3af145cea87ad34227afa516bb2f9879e6a96dd84cb26995f6a8b0ab",
          "90c254d2e34d347d467a20c6d41754bfb79b2b0bff72a85b5952009be7cf84c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527157+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7e9ad10c-0b46-49a3-aeaf-90b26094227b",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_02.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b5733b32a7c023d0c9e0f99534ef2bafcc72aa5596db6f6ca67a7bf1c6815f50",
        "deprecatedHashes": [
          "c7474adb50182947f374ef01117fb26f0c90018021d8baa1a42a808c9c3c16d5",
          "aa86848fbcc29a5c8f5ae34e6f97f0889c3954f150022e93c04b59aa8c84624a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527159+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "355c8f8d-4699-4681-9c97-4fd00b47f4b6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "347bd616514e5429869cf8cd8d6b24b3850c7c1172f3e7d92549ea979c6c0120",
        "deprecatedHashes": [
          "e5b170533e9f328841b23290df6be094f42cf7ecb510661cba4c38b8f317a572",
          "f139fe3491c64543cf50dad25b4045a31de672fb622df0d5da9ca26cb1539b14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527159+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4a3e1390-3a1b-4428-bc1d-161887049933",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "04255d3a1939cb3d7a9f868159c3ed66ef93c7115f443c1dd47c915bc42c7ca3",
        "deprecatedHashes": [
          "bce36a8d8754694967c5e707185924ea97c4b3f6ad6e02ebf4cc1e43fcddbff8",
          "af65e82d17a5a67ad88f4cbcb53dc25db1d0b00ccb4e8f0539003ec5db7c233d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52716+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cc9d8c29-0a39-458e-82e1-84ab92f34abd",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b27b9d6bfa1b4453ec8fc591bfbe51bd52a593d9150cc8ea362b1facaa5edc9d",
        "deprecatedHashes": [
          "99d8d892d5f5cc56960d4ac5d7db3ce0cd8ad228721c14cf5a5e59ff936f33e0",
          "df40adaa04f56e8d283155ef37df4b19f98d73a4b292dc35d0bb40882a18a915"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52716+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e488f77c-fa76-4ca5-bd29-dd3ce6e100f3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8f9c21aaffe82ca06e9d16f4f90a816e6cd33cd0637419ad14bb7c5aa4b115af",
        "deprecatedHashes": [
          "f8e44f351add28ee8261025c3d718fc26724e6c2a7cbfcec62822a9091ead7ca",
          "2b723b1fc4c7b98bbc48fcd821fccda8ef37070ef3462eb08d4c0a8d24f488f7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527161+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3f6298be-160a-4997-b070-b8b3b1c70c53",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3b21e44fb1631162e5b2926887b603e89a576e17f3d802633f898da23e6b07fb",
        "deprecatedHashes": [
          "65d827487631bf6e0ebbf3a96198589d50282008a7abd011423084a5cdd85783",
          "b8fa9a74f2041b8b913fc475eae0b306465d986b7dcc273d81f7daefbed798d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527161+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0e2d0244-f207-446f-98cb-7fdb73d5aa21",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f4be4a50b8160591c6afef0ad6a237db38c71926bee409ae983ad89b6625327a",
        "deprecatedHashes": [
          "4faefb7ccd3e89d32dd1ac0c1d56bd90a5de846c87b2358f0e948e49e012e752",
          "007d77fd7544581c6fee6db24c6226352fbcd768b9024f9c5769b3f85315d1c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527162+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "57a84046-16bd-4888-8dd6-f9f52834d15b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9fcb6cf66503173134859e7d67b84e712402e431e1574a2135a16387aeb0732c",
        "deprecatedHashes": [
          "4559e21eec50038c458d1d1ad8afd3d3788d801f773fdc9da2b8c0a3e8dcb897",
          "6d7f9a983b39d5e80bd5067cbc6c152a3fbb272c9205968d9cc14885181f618f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527163+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23019837-5593-4a6d-b373-efa57ad451f3",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "29deaae89681ea69d817e8c126a3f0bef2482cdbba57e11caef25d9567fb10f3",
        "deprecatedHashes": [
          "3379780a300cc58443fd0520c80609205c53072ebb60e5afc71adba143b41dc4",
          "5b442de73db790c299c98eeeb0b88439dd86129e06dc20723c95ceb2bba39e4c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527164+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fabcb658-6c28-41b0-bef0-a188e23b97d2",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b4fc2b76c3cd37005fced2205106af8159e9276ef73051d76eaac18ccdf928b3",
        "deprecatedHashes": [
          "88412709a7f3e81c53ac62818116e941e2a6bf0ce453d67f5411648a2a69212f",
          "ca1b8ad06594e88ebfa13f518166f93cd23ae4f04edc7a49df440832788e8bed"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527164+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "efd80aba-8b96-4cb5-a2f8-74b228463094",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "647b9f22a3525f5e5a0b099d56e63254f2166af26fdf97652e661b55e169676f",
        "deprecatedHashes": [
          "318f172990a9e02ec16f32989654996418b44bebd9d05bd8010e6219e34e518b",
          "41329b64bc4a3baa494564a4de26c07107de7892d43428ccdd86a7d8fca64758"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527165+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7adaecb1-058d-445b-8d70-65be40d805d7",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_71b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9c75372c274d56f5709c9f9115bc0aee5a7d40dce3d94bac3b92f89b40f51f45",
        "deprecatedHashes": [
          "631abbb1d09c770db106c20541358b761aec416e90fce88d19e05f8bbaf077d9",
          "1da5d436c58eec8415b5345140623ecd96e41bdb40d2f6ad09235efaad922bb6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527166+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f50583f6-9000-4ca7-a21c-d2c9a32bd3f3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6b128e7650732bf6fec9e0257eec52d220aebeb67fb0f02784f9b543a3c6fdfd",
        "deprecatedHashes": [
          "a74950108a4384c7a2a09c7d5d6f290a855f3b057a82d86650dd77410b4ee334",
          "7c1cd723e9315f198015e068bcb7832825fe31c2b354302fd41df07dc10fec99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527166+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "869c0c12-005e-4c7e-9632-f18f10096b9c",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a7937efbb363ed8e40748c3915dc581f3fe758c41cc673088cdf36f57b4f6ede",
        "deprecatedHashes": [
          "0a1808bf198172fc32db083bb0ecfd2b15a48e314c263f75843135613b5e9ed1",
          "1bebdc540006de9088acaa154e93ab8b475e4f655cd33062690a7406ec6d3fba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527167+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0fede04a-c359-41bd-a4fd-a488d7ca78b4",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "57fffaee2ec285fc2d53a77f75b7fe435c76c2a9299d4194a24b82f0b697ee2c",
        "deprecatedHashes": [
          "84e16e5ecc1f2c100f48f2f8b4289110dc4370e7009ce67ace138b905f2b3a61",
          "9c62c308e0f52d55b2cc0d7537287bb13bd5f03069e59ca0b7d0037be673c836"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527168+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6570d0d0-6ab7-4258-aad4-4fe862b5896a",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "edfd871c4345fba5c842c82b07ffd587a0f9f64f0d17dcaf1519413ec780100a",
        "deprecatedHashes": [
          "999946f02155852dd75fc58353e1f3480938d640dd310c746b92a1a7ddf466f8",
          "be63e234af4a6cd7e2c14ce59ee6cbec9b38916dd2f117c305a435ed810fa1a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527169+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a9d3045-d6d4-4509-9fb0-b7461f7727ab",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_68b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "694f5a1ba2572ad4e2b23eadd8bc7d5c194fccd7dd7b24f63a2bca6c7787e126",
        "deprecatedHashes": [
          "d82b032a4c3e368e778d648e4c391cc49ede4fbe1414e6098fd7ade3e299fd6a",
          "cc30dd4d57dc7e6d6841ceb1ac2d1c9309ee638ca19bcd03ab180ad3fd6b2355"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527169+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "15e1d466-9ca3-4a2b-9e8f-d082d70dab09",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_68b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3e72197edfea4a429bed4beb2404b7551a3a7a1da72a33156618964deb98a4bd",
        "deprecatedHashes": [
          "35659867328b2ae86fec198f0627eae7c5c89ffbcf0ed57bc3716d93e7461c36",
          "cfb73544caf329b453fd43162c3c5b7619f840f5cc99343bd5ee5970515c361b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52717+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa9b4feb-39a9-424f-bc65-1ec7ba2890d5",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2f898cdea9a2312ad70ce18b77385f6a90b24f133add8b5c0a67b5b355efddb2",
        "deprecatedHashes": [
          "ba7851eea66a00f4da9e38db228f023903123f7ba3af6271c22caecc1f514d02",
          "56deaf30092e89396838d8cde02b2e922668a3855f8d3eebbd6557a054d30eb8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527171+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a8a21222-14c9-4b9c-966d-c86d1f36d033",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0ef666caf5d059f4463e55bf8621206f2b4d6cec1b88383f5c544788f8486c00",
        "deprecatedHashes": [
          "5f5e30a5a27ec3ae8cd74f46dd68eeba34c728a8934cb61534b9974c2744f65c",
          "f3494aa8adb5ff05f1149928b93639fbd08eda432249524902d383ae578873fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527172+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2cd05347-d7ca-4db2-842e-f96e3bc14d0f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "58396ac54df9e53675464462259476d0f089e5a8a4557f54e8a7d8268f1a1692",
        "deprecatedHashes": [
          "2a1b1e217367b64e9681dca94c95d7e25f979da342cbd1a277097821799bcbfd",
          "47686ba3fd8a1eed64a30f0eca2afbc61c2cf5ef9b1da6306a42fbe0155a9af7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527172+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "118e7d4b-096d-47b1-915f-0314efaada87",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "118dd654cd53ba07bb3e06e2b3a26ec5c5c55b47707ec53f1e79fa6e04057e39",
        "deprecatedHashes": [
          "4252de459f07491fff07bce9f5562d66e853d3e251cf90abb998455d50aba9c4",
          "ee9a14eb6395441dcc725d5a6a60edd299117343d279dbda8f4b2667886ebef0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527173+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "65c99b94-040a-4535-aaa0-24f26ea92c34",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "24981560b415dd60a7c7e727378da50276cab404a334a5db7eca8ab6994d2fb8",
        "deprecatedHashes": [
          "0061055ee04f1c3f195911734cac8e5dd9049f3d6adacdef502e3e06d904bf97",
          "c99cec82da2518a2ab2ac04d337d11e33e4bb91767983b082a2bea0157d93f0b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527174+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "96b40c71-850f-4abc-a65f-52c7abec3446",
        "line": "51",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_41.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9d90bab72549fae3676d9ad0c2f5206202e18321125bad5db591aebca80d1ef5",
        "deprecatedHashes": [
          "cf9d1c4c5d7b42164c99ba5acc7e0f313fae8b1bc87008c6827a22e2c63f49af",
          "2eab0544ab5f9a63ee0764d9647cf5ecadad5e5b42a85b517b3d5a431eef5bd7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527175+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3abe6349-993e-453a-adbe-fd4a782499c2",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ab6fc0cb4c4237dc52bfd0dcc2df5b9754cca4d67a095f545ac9e691c34fa3f6",
        "deprecatedHashes": [
          "703137bb69dc66d3a6a39978fc75d35726bb469ad1bfd36db7250a8336bd100b",
          "e318006fe9e25af8de1f6563d0fadc4b83798544ac56e41ead34daf49d73d9c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527175+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fb596cdb-42a0-4e5e-9e63-49d27941e4f9",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "62baad0f4baebd3b1b96208c4f5ee72a8ea3b02dce814571ecb4463ea19382f7",
        "deprecatedHashes": [
          "d99b09ede935d0ab6313066a1d2d016f3f2fef69bb806378e9d4d9dc4200143a",
          "7bc5f51850645ef2c54f00c809baa001279e89a24331e7d28f19fdaf00c6a9fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527176+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5873f7bd-ad95-40bd-8e2e-30cd051c1877",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "72a6e716ba5fc57dbd80c2cee844fec8606b907fdcf0257e155d343c31ae8757",
        "deprecatedHashes": [
          "2623e63450ebbea928d8a154506ae99e3580f8fea93caa21e1048d797fb523d3",
          "2c57f23139cf13884c50007785f4f7c7b64a7cea959fdefb2d126863c29c483c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527177+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c75724b0-5c10-4495-bf71-2c5cf4d84751",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "dd136ac10f7c01c59f4cd556a56c3acbec69385d74e4042fb22f1fa7c47898e2",
        "deprecatedHashes": [
          "c71e0667f9ed80c99ab022dfe53a2e2c150d79973add194769887c2d5db19337",
          "590d0dfe5980d1fe48d0241f7fcc3687c25a0542d424b78db0019ebd472993ad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527177+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9bf4bc29-c9a7-4515-8ea5-067244f0e308",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ed9d6db8eca1888b1d987a76d7afda76a579f6ca3c50a0624e5bb0159f148e9f",
        "deprecatedHashes": [
          "c3dc2353e6a28a0edd6e40b272e01b2897530aa4f9e21ea50faf5b5beb394f39",
          "8b3fddc8bf14bfcfb6cc527156e1674ed0b50902e19b23a4d089b7f0ccce4ea9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527178+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f506b31e-2df1-4ae7-ade5-0639be775fcf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8a1c1d7344d20f6b937e73447d6929a0c2aff2f2dc2a9e75c7ad86495ed0ae71",
        "deprecatedHashes": [
          "000138bdcf40a1959e775adc7c2d12331f00031c3da11be1a414969190e0145b",
          "ebe42e93247ba2d1ffc494a193ab5fd0060d974bc4aece6980e3bfcb19626399"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527179+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cc930d11-286d-4d3b-bfc7-c1431109c2b0",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_10.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "094f0d18e5b643766543e0e7000426309c7c471a3f8b4469dc53ade16b5a9ee6",
        "deprecatedHashes": [
          "f8ee180a6a753ef8c925df2c12b4d3617703783b947e57a8838edcdcc5b9c758",
          "04cd9cc8c9a1da3123c019dbcde73cdb25070b6974d4ff25f12267073ddc34e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527179+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "69d430b0-270d-4474-94e2-02417b1c79d9",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_10.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "7a53e8c663e9a68b95277ed550dd81d49de64845825de7559a00607b5e05be67",
        "deprecatedHashes": [
          "1f162e957db25d1cfbf18956542d4f98b396a38c891ff1d4fd85b5175c707249",
          "d39a5817776eb96c9f5b3d1298ace7e9f4ef27d57a7a30ceca8e42441da795c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527181+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b9b1398-ab95-4435-912d-9d1d5700558a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5894e51f9227d8689a374ff74d038abf158e86c754dee982c1c4759e980d1537",
        "deprecatedHashes": [
          "65b07ebb900ffccbec672869f670d38d0aa8dd82c3e83c523e526d6a0dc3d991",
          "653ed77f11b55f7b334dabd11b8f4ca9b52f478bff7208b480c1fe9d82928949"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527182+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e636429f-d8be-4be9-bdeb-a0deba25f602",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "08c69721424000f8a3f1a5caa6a26938f474face0ffcb8612fbf76875028ac9e",
        "deprecatedHashes": [
          "b3c672acb255736ad0ad07f549f626749dc53bb184b8a57b7db59d2635b73ee0",
          "1ba797f66061c918a80bcac525fadf460d3aa9f611a54b3de2930e603c273eec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527182+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b76a654c-cb11-4fe8-b454-103ee2a07b8d",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "abc186ea80ca0d429e3b9bc2b4337830d72d47fc408ee07b7ad429147bd1e07c",
        "deprecatedHashes": [
          "fb053a2addae89ff2ebd8c1ccfe614e6dddf09210cef032ff9b56505fd1d0754",
          "9e7b0bac96326b98af200199d9be7bc4e4f79ca29ff1afd6da2382c2ec88b3c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527183+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4256b25f-c8a2-4b52-9b23-34961a90bd91",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2ce119d11fd682f23ad42b3988cd17e30e762e9367af42df8d45b475ee1d034d",
        "deprecatedHashes": [
          "124405c3ba992afa7488ecff764e833b37e86ef588602d7fdac36fbfaa68422c",
          "cf0d7c6139a610be3cbecf4a3edde50a1b97acf5a6bb8330c11fd81f4dbc0102"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527183+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9489889d-0098-45e0-87d6-e157ed6bd10b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d3582d95e6b7075f0acde1426fc8242197f74299cfd64df98a1d64c6fe8e4c61",
        "deprecatedHashes": [
          "c1bf15250c9b6179d96513c116a9fd1cd25043db63dd6441290607b0536683ef",
          "e9bc7276fd970d980a1cdcf365f5508f0cb578623f8f9808fcfa8bbbc7289b6f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527184+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "59513164-ce9f-4120-8100-933179426c64",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b7d8c1c08d7c69b8ac28b0b9224ab0f2c1271527f61718c1f4fc96052c5c69f1",
        "deprecatedHashes": [
          "cddacb4eba648409942952da1854c8e883e494ab52380581e0b422306f0af23a",
          "ff0aa66a899ce956ce62c8029c26be0477320c6e966e30b105000691fe6c6d19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527184+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "35874b29-fe99-4e41-9c86-caa5b767e472",
        "line": "39",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7983168548954754451ec9ca4a0207ef3eeff7e3611420d3d71d79f7ec0ab369",
        "deprecatedHashes": [
          "d46e48e06b0a60bc038e4f88eed0d7e4a08948aef59103f6f5ef83455d75d074",
          "6bb69ce6b9e9650dcfd788275ec003179cd72ce63d2ac9ba0c3838187539f8d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527185+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3bf486aa-e11c-4ef0-a6ff-b40bc9765bbd",
        "line": "40",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "785ac842d9071280ef34327f163bc6a68b9c218f2da543aec25f3d9b1623182f",
        "deprecatedHashes": [
          "80ab1c463b53648b879fcb86f654d5ddecc80851335d5e7d7f99a6fadf6ea73a",
          "129e4f63e64eda551e9deaf12f00fec0ae3685f03f495c9dc9c764c3c60d97ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527186+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f408c628-65b1-49a5-916f-772bc54abceb",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "827cd8df067445dae140babce1110a977adaba7138ea3b14a70ba0cd74904776",
        "deprecatedHashes": [
          "3c26da7e90734307508bd37496dd6e9a70c65ee074f8765da75992bf0cd994d3",
          "23eca38376b82c26076e6dfc649580217e07ddac0693f0e80e4053416c626e46"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527186+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "89dba62b-3ac5-4ee5-bda7-3a0c92de832e",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_14.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8c001a369175d45ad2b8419c7587537974774711d7555608542c79587c55abd0",
        "deprecatedHashes": [
          "8a545b7694b7cfd173242db22710fdf20fe509b720ead2006447657a0e44f806",
          "6aba59a10462dc791bd8ab06bd0b76982433ce1869be3141dda0998d2e7dc67c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527187+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c812711d-d290-45e0-8e2f-c5dcfbee19bb",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_14.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "064308788fee24a3d41dce6515ded437f575e562a871480f315a5712aea08370",
        "deprecatedHashes": [
          "4b542b40b20f9d26aaed20fd44c96cb4d9a9d697ff0a87179c89e6809104673c",
          "fd976e8bec846f7385ef0427a33deab4cb10b318eb6a0381ba6d7b351936bf85"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527188+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bcf55603-95fb-4405-9323-ec1f9c4ca56e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5377e2de15bdc6dc7e40c68c7fca70bc2fc3d8a209f1846ac3aa36fb3d63a9e3",
        "deprecatedHashes": [
          "d0d500cdbe532c37e73e29313f07235be40df5da17081b1b3aa3ee1359514dcc",
          "7a3e58a300f15886026ce228ac96780f0dafe2d6a11607b355236cf88a324099"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527189+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4983fca4-2632-4560-b21a-755e8a0fe4f2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "74908174643ab6e3e515a684537b4eeb196b64e66895d640dcba91ab57e12b0b",
        "deprecatedHashes": [
          "d4ec44e5df036e807e6232b81d7eb08891d901cc996cb67fcd399dd673d7f82f",
          "73870ec628d36258771ef520140c879b27aef2867d75f2089e2e54f3a45aeee5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527189+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "db2997c1-00e6-4b11-a9e6-50cde52df72f",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c78312a3e2c789a0cacfd62033e69ce71d93faea3750245bec255b70e8c4216c",
        "deprecatedHashes": [
          "ff40b6fe15a423a6293d81b738fa3c3e815de888fff030906880fa4f5b2fcc94",
          "50300b9c3885dfebaaf07dfaa1df7b052394f3c7ab8c24e27829fcc76959b50e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52719+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1fa4c3c2-2c14-4ff8-929b-33d8459ae21f",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_52c.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "839766e6983b6309550a2459b30d23316a6b6e2a60fb5d1fe89ffeaa0692a848",
        "deprecatedHashes": [
          "c0c05b05ee2b54fb18f3e2373ed88e7df5eabce4963e4f04353cb910c2874262",
          "996a54fced901c3db8240a2d702de5ea0ed6be8a4a512ced76206b3c636ed306"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527191+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "80b77a6d-e332-4aba-bfdc-26ea46d2cf71",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9d3e3199d4c5751f144b2169fcc7035d48c5ebe334a894e859e60f117f8471d5",
        "deprecatedHashes": [
          "3e7d00366a2d759d9e83c2aae2b6069b80c7a41ebe9d1c8d71f09c99130e2c8a",
          "2a621a12ae48d8b2f1d83dc6b3db20b0ef1b2516953abeb281e9db8f48d1bb00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527192+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7c2e4e75-3919-46bc-8a0d-8eb798845c52",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "87e9b500c10ead28438165da80b95af5c51326e39bd1758747e06dc994cdd6ef",
        "deprecatedHashes": [
          "bd95da655621101855e963db434df1ed8ffb9d7f720b165db52717e661a45495",
          "27496676060a41fff5f4becb82f8fb8eaa5139795c02e45b748d2abb1170cd0a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527192+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "897f9aaa-0d04-492e-a914-76fbd90c97b8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "83e5e125813740222219ae3c48d1a535098e37ca844660d599f79d21e13f2465",
        "deprecatedHashes": [
          "f07c3ca033b70064aa83c6bec9274be970b347cb38c60e568ae506343ab48f7f",
          "86b40ec813de5f1701dfebf967ac0b02b91a91c483ad2614a9994a2186839a70"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527193+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e9c40606-5313-45f5-a8d0-468494c91c6c",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_73b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5390284af9312cbcd04cb38ae5cea2cdf92c6b8c9c4f550ff2a9c68b661e3cbd",
        "deprecatedHashes": [
          "d1f05b5adf8b28d22dc0d394442c336568bd0995af02db89aee8f216455c7b1a",
          "d436a9d942f48c8b23b167ae9ae57979d99fc712a5bf9577b7960e084d1af434"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527194+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2f674449-7025-462d-969d-b20b582eeb12",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "56d0e6ae485c79611cee387ac5a9a4b0fd3e7bd6301042068593638fa38d9289",
        "deprecatedHashes": [
          "ff4d823ef6f72903433b0e60ab632c0a8f446b7482ea664f70b7045b5546363a",
          "bc1e1301484cf3ba4ec75323638ef63e70adaf9515023b60c5ce460766020e86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527194+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "81b9d9d9-d46c-473e-b4ca-8a5d3d9fc962",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_61a.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "23cf62d4e6c94c499d227190e57d1b3973f4a8b2e3ef7b03e23f92463738eafc",
        "deprecatedHashes": [
          "329b9fe8d8ad274483f8f1f1dd2b52c0839da796c8fd61732b944ab03917709b",
          "5a4b9e459474695b24a6abbe86b7167d0a39be88a6f85f4f7dd494a30560e6d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527195+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1efbb8d1-5857-4965-b49f-234ab2b1e390",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_61a.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "2c804968f219c73a7bf1dfa70548cebe5eb910f636becdb7198566c9bb09732f",
        "deprecatedHashes": [
          "c7d7553afc2b3a9515ecf7b8938b68245be9f78e95a17b20ddd17f7e802999e7",
          "03b5a4f0e11fa714993046073bbd5ffcce527af11ab47a0403bac0d578516bce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527196+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a1cdd297-b3c3-4bd2-acc2-8e63a7bf5669",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d7654e2c7b406549972e2d3067244280b994d14cea03d160bd7dbe941af91700",
        "deprecatedHashes": [
          "8b772724de57a15df179ef9392b324d496f4c6b390fa58ab0de47253adf2b47c",
          "1f03692d295c7af74bf39308478738155fab8fa7721e8cd17383047f86afa55c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527197+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4604f07-cd82-4a77-a75c-c0e8868faec7",
        "line": "46",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_22b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1dcb6aac135f5ca6b42da1f030276f0ca9d442abec6cee719f5a35346d991247",
        "deprecatedHashes": [
          "55cf17f41c21781e8fed76cbcd0c9642ead65c07451ffa476e1fad7f92efe1c7",
          "1a1ae4dbc970a66420af25feb8b7c83419f194a045770fd26e540116b8fb2d37"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527197+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9586a633-821e-4f3d-aa37-4b00741e63f7",
        "line": "53",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9dc7f5239388e9416a907cb99149e90a31eb3f9021bc653aef41d2d2ad2783fa",
        "deprecatedHashes": [
          "777c4e5eb27d476ca875912142064a839ec279a33c45a69d91951a1073172735",
          "b8556da1cb9c62c4fbdeef95102c66cf5a83adf80f809fd5802d8efdd21e3e82"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527198+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b6ff378-6419-4944-a951-b54432c4052b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "88450e465a85b842d4573720daaab4af98a86b40577b8866dafe0bd93e420675",
        "deprecatedHashes": [
          "b8a95afb05377b65084bb9ea15ffbf17635086c480dbf7e1d7ce2b1086f68ae0",
          "25950c1e3045e0c01950a700d172649c1756de6925b4f364085863bfda7f1ec4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527199+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8a7360eb-9647-40ef-b5f5-e0cffe562e8d",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "57b980d6cdde19cbdaf1dd673ffbd530e8fbcdf9f95380a0526be567f63a2b5a",
        "deprecatedHashes": [
          "22e7367246fe1db71584255d01404c4f8b66988eef257b7658860e7cc3e6d54f",
          "4731ba3c8de271424f9c0d8af5bcae79f76c5f58c0d4fe1baa2f04a3236b81ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5272+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c44c52e7-3398-4b67-bc19-eb8e723a117f",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c3e1de8d70ed282d6cef245b3d2c9f5b1e8710241dcaa2c9830078ab7b1f3a96",
        "deprecatedHashes": [
          "2c824bcb333b437e5d0d46fe45ba37c49cfb21741c7c0282309c56997a6f9248",
          "08ed97b2cf3dcf09ebb2bcd66fb19e9848b60811b4c35a9d161c24a2af4af489"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527201+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7f3d422c-5b43-4cc2-a9ca-14557e2239b1",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "adf850601ffbbf075e96b5a92d21f07236c92084b68e3693a706245abde166e2",
        "deprecatedHashes": [
          "97ca4ddf00f77ddb66a7486a5afcc51b59d078c1c0a45b298e4e07c2a31c7ff8",
          "4e8f0fe5b8e57335f7dc462a08d26bd9a5cb8f43f275377b666cee6103cc1a5a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527201+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ddda450-9b85-432f-9ff0-d73607348361",
        "line": "119",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_01.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a411f34cec43a60febee7619e5f72298b9f1c527b4b31cbafafbfee917bd5d44",
        "deprecatedHashes": [
          "e7239ab2bb0302ea9293fbf56e1fd13b3c826e7dc411bcd21c1ed05040451d4c",
          "9c4774d46fc9f7407e46a9f7285c817ba10e38679a8062a976d7033ba82163ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527202+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4d95554c-981d-4d5d-8465-acca28f20292",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "548a1e6d74782202f4760fcff7853cb16f99602cf4273ec37d9faa3d299b3a31",
        "deprecatedHashes": [
          "3446c4c0d3c5c50acef9dc05c6b150a2a820a88da44441aa164794284db918b2",
          "ad298f85d02a1a043cb93190a555ceea8bb474788dd8b04828da22a6cf7b2a53"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527202+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d9e7bbf2-1711-40a9-ab73-b151b738a50f",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_01.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6aa7e6246636864ae1970f087942d7b9fd581efeddca7951336144d8a1ae5d31",
        "deprecatedHashes": [
          "c49f9cf9127c5ce1ac48c37f85175c32c2227c314a808c6fdfc29681b11034eb",
          "20552a7e176ba2740393b1c61bfd644a11cd7d4d171e7e8b5dafde34e70477a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527203+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "49b8f647-7906-47bc-a344-99678da42793",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_01.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "af1e237549b2c3db72e9157fb8dbd1fc1b470c7faaa015b6e2f09875da15fbe3",
        "deprecatedHashes": [
          "2d8c42f06a97c4cec7ea80be45efada53ec727b387a50d7da6b0aa31ed8c3fda",
          "11ec07d0e5148bb719b486da29b952628bb47966f1efbaff3867e9c4d8f3a0af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527204+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "01febbe3-16a3-4c38-a1e3-d060a7d7e645",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "15b36ac0d572878a3ff02ecc448ad74bcdce8002b62a1bd010c8ac2c952af778",
        "deprecatedHashes": [
          "337418098cbc1e328acea5fc7e3cb0dee5208fb1da8ab1e572d8bf923eec55b3",
          "ea5261d93fd55313eafd97605576bf42a3732efa2196e34c9592a0fed7e3f2ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527205+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7c01d93-7f49-452c-8333-06c461b37320",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_11.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "82c2e6b0178429301c5a855fc39c8b49eb5bfb1ec5cf4f5ae4e4dfe81376d4b5",
        "deprecatedHashes": [
          "454d28cc2744ea661afbd98c275bf207d1244f01982862a4e533f8692579f2ec",
          "59b5db0a8dd10992f1b9c6beab7c2330467eec55c0e8c0b71b67c7fef6271324"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527205+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1ab3f36a-9557-4672-853a-2fa54c282232",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_11.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e55243b09f75d2e737779d46746c715e128dfab0998eb4514f0533e956b4bc84",
        "deprecatedHashes": [
          "416718e82d9127490fc43099e9d7bedf53ffad9146400fb99137e39f3e053668",
          "368a8eb3a3a6c92bad6b350e6f837b94ca35dd35117d6a494e7108b074b05f09"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527206+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7ed87bd-5339-4c9d-a1a6-df075da1385d",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81_bad.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9e59e3e1b17bea2b6748125f18d66590556950fad926a1fc4e65af547236777c",
        "deprecatedHashes": [
          "80c9c1b50a14360b75118853bbdfbc9d8d8921cd0fe855f2eaba81b6bebf326a",
          "0baf53cd3d3bb16e72ecc7ff0f5084dd54c4703dfe75967742552505dab8e49d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527207+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "35fb4366-85ef-4685-8a84-b0ca5170f55d",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81_bad.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "389f51a7767c8db7bc76d91b8d4a0ee65b7ea3a753f77c554f85edc5526df015",
        "deprecatedHashes": [
          "803b68a355b5fafeebd3f5584ab7ab49fe20542316e39977a28d017b4df69b63",
          "1ae748d9cc491be37e3ee03d54bcd1ef49f5eba4bff46d1281d27089bb1843d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527208+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "79bbd20a-72f8-4930-b441-5fedf1ad196f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f886111a61c70108209fcbfd11aff9b25148bc615130f2e2f9f860b1676c9614",
        "deprecatedHashes": [
          "84446009b78d2d80416379196e0d335953f5e2f23247f2a4259beb85ac74f1c3",
          "ebd4cf09508c92f3824d2127f311438e0db96aaa92fec5ac9f2f97e67a7b3b42"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527208+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32d27455-99bd-4a8f-9c78-f1ab1f5e8227",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b8144a20d7444c5bcca2497035620d0678bb08179be93812807005d08de0d08f",
        "deprecatedHashes": [
          "1e617ad391f2730b03e8bd62dcd0a9f2cb2664ce8354b473213771985376e130",
          "60c316b79a3cd5b540faeda041d38cb47ca9fea9e38d5fb6f1305fc0733d9114"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527209+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2df17d3e-0c0b-4cc9-b80a-5f0c14e69341",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_01.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "17714dc77ae8aef6a37566914e20ada27df0825f36a4bbb1122a67314081d79c",
        "deprecatedHashes": [
          "d8f91c5814c6dc28e043ceb94e58fcc9ae6ce059b157415a834019628d71a79e",
          "f7831f8b658c39933914b7cdf6c4c33339b363835ba844132f52a9fda88e75fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52721+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0af8d9f0-3d99-49f1-b6a3-5f66eef992f4",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_01.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e3b8761ea8e251bdfed0b1f8d4f09357e5c8501e1f64cb98d52aa888ddfc8d11",
        "deprecatedHashes": [
          "1060d7f542096c60953f32b65cb9c992f4f53f04cb41c16fbfb936e6f96c37cf",
          "511c8993ff3c709fb6df9993f337eb6761550466526bcdc6842954fe5b048517"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527211+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "186629e2-4102-4865-82d7-e716d84d9581",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_72b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "deb598bd695461f8f3d04940a2cfce72281b25572bfce85583711610d5748045",
        "deprecatedHashes": [
          "0ffb2117550202bb90667186222e941aff24c7b0977fe6049ce221babd3bac28",
          "a4d99035fb3d15139a2d8eb8f9569079d5d3de818c2b72910ecf79beac69b7e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527211+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa792719-dc5d-4d12-81b7-c6263b3dca9c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0719ba02e8c5024d076849a0aee8493eb125c97f17ea2ba9e31976b12c6ce713",
        "deprecatedHashes": [
          "de090c1810692511615a901704484d2dd45d7b445ba28f381d6bc09598037e1c",
          "8376ae83fb0299c0917b6496a281fe5937e1b3af3ad0a002c4ca54a4d8dd962b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527212+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "01d3a30b-38c4-4e17-891e-ff91f07f4dd1",
        "line": "104",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b667314d0c71d919bb5fa429beb76fa248b144d1e0dfb054b5153f96df2cfb62",
        "deprecatedHashes": [
          "c5e1e13c1568635f54d2b59b24c1414ad64508342fe680920576799521b67683",
          "887bed1bb85343dc2d891536adfb25526812f96dfffcefd5bf5477eb7b524928"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527214+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec9b53c3-5a6e-4da5-bbc4-311e22c97f59",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "401379d46d32555a3da6c9fb30c88a18f896d4e71a3edd39fd1a8be480640dd5",
        "deprecatedHashes": [
          "3248d6c4640225972bdf7cf217a6fc8c200fa611b8065f48c1bea07ef934ecef",
          "09ee39d90e0b4468f843732394e889b95745970b9460c11d910f6ccb8d96070e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527214+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "337186f4-29b7-4425-b88b-d60ecdeb413e",
        "line": "124",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_06.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "98f81193f402ba0ed414406c8f3c803b791d84b42adb54edeba6c2be124b6034",
        "deprecatedHashes": [
          "e079423523bf0c07c317a8338595ad228247ec94c816a8786dd14354517c79f9",
          "0098a9abc5e6f15e5fe9b6b35033d872d6e9d649eeb5623b555f1e833890bf67"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527215+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "78edb954-7976-4091-9e9e-6e8832049781",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_06.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4f9f8b85b50e5d8cdfbec49e24b986a7bcd77340f81c35c97a1b507953fa0c9d",
        "deprecatedHashes": [
          "ed233b56c4efb491baeeca04f398755490332f4022fc68694e6510e1862099e8",
          "e16cc7f5da4a062008bd0630140b5e855f569801a1071735fa7e74b69f0f24b8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527217+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1c88951f-794f-49ab-a348-25b0dccaa0be",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9c24aad18f1d40376c66441c57e38c6d773be3a737b7f5037002c213fa6b291f",
        "deprecatedHashes": [
          "93be33480eb1fdf46a48a59556ee04db474743d521da4ec981cdfe74ca4ab46c",
          "fbfb3c20053c7c7cb28e981086251f9eb6ade1d0d0434c94bf87aa5f2a9581f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527217+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "032f6349-3b92-4b67-a06c-4650eb7da17f",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d2df2ca4580c68072dd90e72048c9fc197b36b92a422db59bcbaa3820f09bf1c",
        "deprecatedHashes": [
          "e99282bb00e5074f742367b834dfccbae9805dbdbc580536607e5bd98f7366d3",
          "a22ae13b6af5575c872a136d2dfa7616d7570306bb2055fb699df8920c878f15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527218+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c2e1fc9b-b95a-4e8a-9be4-225557de768b",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9ea81246e297b410088f733c28b9122c872e031f78e83ded0857418dab9aa0ae",
        "deprecatedHashes": [
          "7cb2e8be306d94552d64fb0b45a7e9f92ea3c1dd0870a4232e54148795a37a2d",
          "58c2d1b6558c46101b4ee737533be016c6a5ad5a1c9cc491de963a3221210d9e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527219+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a24e8e4d-228f-48b6-86e8-494f8d1ddaf2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b6ecc2b05efe8ebfd57163ae163143c0c663084583fd81ec6c28ae977aa50f33",
        "deprecatedHashes": [
          "b66c78c847f2fb04f40c6a344410cf177b5564ab1ca918433841c23f288d6984",
          "2850535e27e901724a034babce6e1249d2d23c82c8c5eab834507f9363773e0f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527219+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f3ad521-a487-4b12-a689-e2cec41df4ba",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_02.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9183e602b0513c0c5376caa0cda54580350f5937759a5eef6ad4d17c67020223",
        "deprecatedHashes": [
          "a85397c9e0c64fc0b2096ee9f792d6f1ec5f422d10e145d1f7d3e539fccfe9cd",
          "13de005e3b86ada00c210426cf5a697aac0eb0facc1d04dc4e158d8c812088ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52722+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff2f9c5b-4f23-491a-b52b-ebe3131784f5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2de119baecfe2cd72c80087814be846e9a1d10a40e43ff9363dafb70ba093729",
        "deprecatedHashes": [
          "6441a3359e8c9218b45af0c42f2e25d2aa49b57379a224df3c0f0ab7427dd14f",
          "a079937e3a239a4e23ccc81b1128ac1a3cc9bc7c6c8beaded111d5bfa26da64d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52722+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "709bad5c-ded5-45de-b130-8c657112820d",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_10.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2d8362c18e2dd915e6aabce49f86f6c16c554bd5653755788745c9d4274c6f13",
        "deprecatedHashes": [
          "9e782bb8b7af2f77125f7027896a64a367a88e44648ea49f6af0cd6692020021",
          "5aa9dce117a54c28389cd5f0cc71804f280c9be08d83d51dd9170921c8007a06"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527221+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "57946ad7-a867-4df6-96a3-2c70a38f3078",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_10.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e2bed78bac4917b9e6ab26cac531efc1337d1997fac5178ac2d6d054d377a706",
        "deprecatedHashes": [
          "c9803294c6b8ccbc996a661097abfa121355c071d2bbfc15e43b5ae753ef829c",
          "5f5843d81fecadf71e7635fc45925bcdf9f4c7fb148c9842a5c566423697e06b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527223+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e24f14c6-bb08-4952-9aab-8c277a3f766c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a38f591b28d618f4386035127587f34315e39ebc503e806746cd172ee16fc2dd",
        "deprecatedHashes": [
          "9569d77028fc9bafc0aff1fdd5241f4478a3f9d0f7a71cb996ba4d382cb61063",
          "953829b2ccda5824659ceaffc4e1af9a5b9a2b49bfcb76902cb423a77f21027c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527223+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b185846c-b536-4078-851a-7e20e5b4f382",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a430f787d8b0c875ff90d39570d24868f4a21ad374d859e076d64f36ea4b8b8e",
        "deprecatedHashes": [
          "5bc1fb4a1af973bef6a393819a9a664d4cffbb4617c4dd6a66e52bae595050e1",
          "9824890fa7f6a24ecc22839a1c84bad01b7416dc2b29150cc74ca687549c6488"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527224+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c4fd27ff-d9d4-4bb8-b7a6-3379eb2d4b43",
        "line": "53",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "58c9a5732963ac7cd2b9d8af0a781e1327f0ae141177cd733e45e2610c429b24",
        "deprecatedHashes": [
          "25aa82b9d7004217acbd69560aba985de05c19840def54b831a7befd343e675d",
          "f738b4edf2eb52f568a58d511465645748aa486907afcb263d2f05f566f7bfb3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527224+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b2780998-4fac-4f99-8598-f77dfde20bf8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b52aba4fd980ecf6760a1a81110419fe53ba7559e25c3f0f535ae04af29e691e",
        "deprecatedHashes": [
          "3babbf70e52cd22c605a547049feb7cf6b3c370b62402414f9c334f3be33e81b",
          "f54913e67928273e986d201c817cb00691f3c690f05d497d31bcc87f6a0516ae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527225+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f949f233-2913-4686-88d9-80ef453af460",
        "line": "55",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_31.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2aac66ab85e55fc5a344bab6857a984064f855d29a1c2654a442d8f81bcf38a1",
        "deprecatedHashes": [
          "5b62162d8b66f36e6e0ef6b3a331bd7b5434fd674c990996ef8b8ec77f1f7fda",
          "0e8d6545a3dfc0f413049c8ef8523c86dc3a3aaed5fcdb879228ca549367be57"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527225+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b5d0987a-fc91-4505-9f32-750ae05a04ac",
        "line": "56",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_31.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f2cd757c771e1d115fbc9587bf4b30c58e9597091e76fb4b97395f7d371a247b",
        "deprecatedHashes": [
          "18d495320b303bc56726b91dc9e622e00a5d7e7b148caa180a125304c34e3c73",
          "299268a4e6b34dc1f67d7036618be771ddd145568035937914ec01b82a48d6cf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527227+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a6d2825c-e892-456d-87a3-48acbd648c26",
        "line": "53",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0a61297f0a9dacdeb80806d9cbec2f6c0adb50d08426d0ab1defd8b4a8d277a6",
        "deprecatedHashes": [
          "da5bde1eb40a62ffb24324c25c4b7a4b20b445e52dd34de6d8caf85875925337",
          "e47645536869983377000254de28f9fd2ce955ba07229d3b11edeceab87f31ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527228+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5f5daad0-dd9d-4952-9b4d-dd9489e7b50b",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b478294f91d552194f989dcf0804d810ee02efd52e6b7e0999732fa709f10cc9",
        "deprecatedHashes": [
          "53b49cab65656c9190f74b60f36c3b6e083490fd18d3b6a80a3111191da0d1af",
          "15207f1ac4c97de296b824f2d5015628e95a918c2086a09822deb35f6374072b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527228+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c4cd6fd-e3f2-41a5-8c88-6fdb6cd279b2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e6768cfce71de6fc62d035e24397d3265db83f2abe6a32f296109862d1c1f5d1",
        "deprecatedHashes": [
          "2cc76e07226170a8a22597f59db6d90f105ee39a58bd2e7430e61973b907ebd8",
          "957359e140c2dbc038b417aaef124ce19da0c021908bac70a7de0028a2ce0b02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527229+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "704242a1-ad70-482b-b031-5ef83c83a2ff",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "03e8517a89ac83a45e4042fb539b6f498efae538f64975b0387c0d9592986e2f",
        "deprecatedHashes": [
          "e3c21b6581997e33032f5efa3266b6c40ae223f0fe5f1c75596d65d7baac40cc",
          "17374bd5dcb5efa11ff0a227a605592853593d0ee1977574ae41fedd307dc18f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527229+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fb39e374-c8f6-484d-8f8d-3375ba1e8bce",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_61a.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5f09e0123c6972c4c16c8f6770d24823eb115e570371e5649c48da7430314954",
        "deprecatedHashes": [
          "812b073764000132662c6475fc6fb5a3eddf077ca4c4f4f96921b28bb627af9a",
          "5dedacb8d32e21a19c1dbc6459b7511d5b2a5cd6d22a63462aa5483fa64fc18d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52723+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c8b807a-b7af-4e40-b269-99603a77cc24",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cd043c878bf7aac22c51865292f189456338214be388ebbc019a4f0ee45b587e",
        "deprecatedHashes": [
          "0144eca2dfd9d0666dd276462a966abf3922a0297b4d0bff3096cb77511b1aef",
          "978fc8f36b338571003ca230c89acf32dcedee78c9f070ed8fc775cfcac83154"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527231+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "12b27050-26d7-4ebd-91b3-6bd1391a1812",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "590c9fc9fa52956a495bcefed8d6d949aea69db0dff01d7f099dc606096660c1",
        "deprecatedHashes": [
          "9c61442a638c2b77b57284418f937129daf84ef1449badec50a002f5554043ed",
          "b035269ce3e98d5a4de086619addcf67e855a9564852d61aa98087f54124c0df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527231+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e3f61fd0-fffb-4efc-9bfc-e23c84bc55a2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6b006447d294bb893f7c8aeaa6dbc39a66bbc0649756a8076996e0a20aa2d77a",
        "deprecatedHashes": [
          "6acf64cad460772a4e10be1638b12940d2467c793c835cc86e0cd7f96c76d731",
          "b9a52744fea6784221b1c48969db750e5c7e0336dbaa5f8e4611898e090df51b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527232+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a9a791c-938d-40c4-b654-92c66b0afdcb",
        "line": "113",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_05.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bc96b79c37c63d81b2b1f6f139d5314627c62c4a9ae97d6f39c3b658df46c1e7",
        "deprecatedHashes": [
          "8f5f0fc24db0ee961ebda5a0dd7d875a8a03ee3ed75972ecfcd5eae18658df6b",
          "0133f8f08d5918994906aa72722273cbf7e09df98192c7250c5f56e3ceb2951d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527233+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a134172-da1b-4a2d-ab25-6f6305fb1ef8",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "00afe587906f4e916bc98103b2963c7e428af6f4d98b6cbde2777a3b14b2b1bf",
        "deprecatedHashes": [
          "9fb503fc67a4d2029b80a467603b2603224fffdace40d6904338cd4eacd87c85",
          "aa7bd971954a2daca20faf24826350278df01f01860202b51477e5492291b86b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527234+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c64ce6e0-911b-4e17-9ef3-d7c4fe3bd439",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c1f756bc017ef9bf6072cc880507404cce0614cd6d11e52b12ff87769dc31c74",
        "deprecatedHashes": [
          "83aaa7f539ab40a3c8d03a55847b07b3653a40b553ce5b3eda3ff2bcaa306c93",
          "3d90aaeaa3872d8094f6274e93e54c90442160f22c8ca263e1192b7a13a57933"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527234+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bb6c68dc-1fcf-460d-b273-da104e9fe35e",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_71b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bebd26650085f151c154c594d6745ba888014d3f09360488984edbcf8e694f14",
        "deprecatedHashes": [
          "bea0f8ac502fa926555bf51ab7f6c89477fa73306e14868486f048d17d201ca4",
          "818249c3906f255d8891d06e7da2322b0c27ca49e52de98760ff3d0114be6b0e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527235+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c64adff-bded-4efb-860a-a5e1304b9d9c",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_54e.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5a1ae566c8183ff4e62a6a5837979cd8642e32818c26b8024f10d73ef3e8fe6e",
        "deprecatedHashes": [
          "24f2960b541b0dc0ada878c2cdd100300bc1c8e0332955b1eb060604c2b87bc1",
          "d542a018fa711fd27ca62f9f757c2e02de8e50137f019e66301f26e6b0d58f19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527235+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1e172476-e089-483f-a538-29a699ad5659",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_54e.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "56bc6d99a1c41a54ccd638d9a43dfec2c7d59c9e5563937cf983e877c183bb75",
        "deprecatedHashes": [
          "fa8e9c3fd7a7ecfe96f4b60a939d43e38c7a063ff441091f2b9941d2fe170b84",
          "be9d55ff6499f04f604541e972399c2ac81a897d3bd5148e84765536b1d34306"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527237+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c551ea53-ae44-42a9-b2a6-c90aab4e4b8a",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_81_goodG2B.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1b8c210d2f658b0b27af595ce6b6ad721f60ba3b0167a5d3403cd9104aafbd40",
        "deprecatedHashes": [
          "c5b382d04bcdca0346e00e129a531fcbff246312e34bffa561a54f5911b7ea61",
          "a3cc141fca5839d68d347c162f4e4c44a9b716400f75b7c173fc13823fc5aec0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527237+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17be64da-f129-427c-ba99-f467b432a44e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "724045822b0319aaa4764c8790ec4e98f7f8b7db317f0f6802e0fa4b340ed3da",
        "deprecatedHashes": [
          "daea3b975822348ef2a1e0f5689094a3d27f22b70e43de016383469bf2a2f49c",
          "7cb0bd9561cbfabb066b40e560f352683673011d203725aafdc16745422ca07b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527238+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f894c2b3-5a21-4e7a-bef0-c6ac6b82bc37",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "83635dcd7486c380b8ae162626bd372c474ce6419df2af78eb760abba09e9b1f",
        "deprecatedHashes": [
          "e8e3e8dfadb6c7a4a69c44dd80804116c3a7e1e9ae0e23e6bbfd331c393108ae",
          "081b4d53e138cde89d79be5a8d7e25a8cc36c1f131fc73c8fa362775f125200e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527239+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bc858219-c94e-44d4-ac2d-e71ccbbfe850",
        "line": "129",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_07.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "be82e76440ec29146a665261bb2ae1217a3cbab3be47d45626fbb7a80e80ac0b",
        "deprecatedHashes": [
          "438cbee684738587c6a62d48b2eb182abe7ad91534055e98b9d501e917d1ea35",
          "c4676f1e789417f124b81817663aabf94bee2a53ea494a8efbfaa96d6cf01b00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527239+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9d6fb7a0-d3c1-46a3-be4a-612d43d8ea94",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e96accd3a2a83e8515d0a7f533d95efc9299a644acbb70d5d5b6dcf583b2dc39",
        "deprecatedHashes": [
          "a7c3f7110f13ecd0e523fd94431d3806c32060029df1805ad9d50473adf9d45a",
          "9963dc22034d69e86c1d58cffcb443180284318a9a83494c3bd7e1c36b26753c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52724+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d8b3952b-3b1f-4475-97f4-72106192825b",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b35a04b41e452a7dfe6f7f4472f76e3e77fe8294da5f0fffddce9edd3c1e90f9",
        "deprecatedHashes": [
          "9fd13780336528325e674adf99be5fbafd01a518ed8783344e6254bbd254ffe6",
          "ff93f0004cff3ec87947890ae9c846f7621df19a0b96fa4822c93cbcbc57278b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527241+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ab1b2a31-c3cf-417a-ba15-f5168852a844",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "598c6d6a65cf2338d052886bb695e017bd71c5f036280c568f550c12a7cccb42",
        "deprecatedHashes": [
          "575bfdf92f8adc31608dd3a18d9f48ef1db6416647d019391154f5295e99aad8",
          "9a51d7a5bc6bff3a857cc5a27cd5768c85b85120c6b472c5dda33b1037906cb5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527242+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d149afbe-7677-46b1-b6cd-c88e46560a3f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "715f7cfbbb8c976da2c34e737996e358548d71d9f39de0709a5b9406cf11f865",
        "deprecatedHashes": [
          "c47b7373e760c9027460824228394d076a1aff416ebba2065b2f4d7fe4ea113f",
          "9e0db77d87b5fbf6df511b096e288ab4916ae24f8fcd142e1ed92506cca2db57"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527242+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "559d1839-28d9-484f-99a1-484babac3b16",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "779979e113fc2e4790256b982d80dc64a169e98ae47f776baed460acfd2806e4",
        "deprecatedHashes": [
          "b271c8351b9816f58e2fa6523fe4e4dd1972949b64dc4d32a7b1b7d15d5edef7",
          "c24fcd594f8f8980b4d6d75de7d9751887c3c54eb3f8173e3354529d4480ad78"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527243+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6c6635bb-dfb4-42b0-9e97-8b51394ab919",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f9485092981305ccdd555920f2de763f1435ed6391977400438492d3204d5f11",
        "deprecatedHashes": [
          "7e3f349d313ff9c14624a4e5d9f35cff7fca7621e254d03189eef676c8e79001",
          "0375ed3e1726d98eb35b18b42fb41159080d3fb290cac02042d6254f5c79ec99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527243+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f358efb4-b48d-4104-8ad5-f76b1d3202a1",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "233aa147aa76aa5ebfe40622a62e875060565cfc15d5c0b47231f5c8b24576fe",
        "deprecatedHashes": [
          "12a10eeb8638c60fd0e9cf64976a3a27ce78aa6071e6b3975e657050c07b52d8",
          "a1e78cf8a6b52ee962f4f8600f4f41dbef32a4799f203918ea799640e15c244f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527244+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "27b1a989-e342-407b-b05c-0c00d09dad23",
        "line": "106",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_42.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "30bc0cb76e2099dc65f7f6f495a7c038128a806bd5a177befdd8fb7922071c5d",
        "deprecatedHashes": [
          "f8ce0534a6c7711bad6d8c0343bc17abd920d60cfa97b7f4af0857d4a13466e7",
          "ea424ed2931ef96ff25739bd161be8bb6e9d8d7d7207a3d99a74a6d7efb15372"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527245+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ceb205b-e4eb-4020-993f-8f052f842abd",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cabb532b2e5e962948aefba66d3c655a0466f7bb97cfac91bf729eb4ace4d184",
        "deprecatedHashes": [
          "a4a954b7414a2823ac9af99d68fb1371e15ea81784d0bbe7fdce3f34997838c6",
          "8dbf7b8c8fbc778b3f781ae5612ded0f1ec47d77f2be5129da2d0a1a49952870"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527246+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f5497cbb-75f5-4969-a7b6-fdad2091edfd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e567985c01512248017582b1b4cd4ef3c7331a78d9fd2b9a30d10779e520633b",
        "deprecatedHashes": [
          "7054a82d1dc3477e851d6b0fed7b26c90c91b3a6b326961ea99ab249f8917272",
          "a383df8fd4627e0c840c3e2db5014e09d222759322b6d9581983c68cbe529138"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527246+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ba870209-23f1-4a6f-93ab-b1ef05d45d15",
        "line": "115",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_16.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "aedf8903b9c9ca971791d24c661e5f1b29377af348e9d6768b90afc433985e96",
        "deprecatedHashes": [
          "a5b9a0c1e29ade3b25ea238569b3b1a7e6b9b14902ed5bd98f51659b29e9a7c7",
          "681edd1d0622c1c810c176c4e2b4be3168a4b651fd7701f45b731ee4eb3ed214"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527247+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d8e13bce-f504-4fc2-bdc7-38c54dfcee51",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_16.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "149117f6befb69b22210f4049aa29fa351afff7140c616c2bf9f669c85f66491",
        "deprecatedHashes": [
          "d7da3032e5bdc6aa12f99d67cacf34dda2fbf988b780d5dd21443e63ae1340a5",
          "4c684c548171d061216d1a7d6fbbd741cbe17c098582ad9cd7ff7b13a2723dd7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527248+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "93045450-fd6f-4d00-94fc-3e99d105c56f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9f07e4615bca02c1df06e33d751152c42a5adf2b462d968f7525ad618a25eba",
        "deprecatedHashes": [
          "edae891c04173a925ffc772a27807b4f66bbd59811bac6ae521d808738bf8242",
          "6574e619530c120e6984f77f26418aeb7d524faa18727da4695bab81f4eebd0a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527249+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cf5d399c-bdb7-46ba-9714-73f40c96d5ad",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_67b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6d282783fe2b1f0172f673fa74a694d7620ee4c09c68da1ec8435cbeadb69744",
        "deprecatedHashes": [
          "c0803d6e87da4ad7e8a517ed9847a926a7bd096b8fbeb1858dd4b796f0ad5955",
          "6f27304793982095059b1d86d706991f7a9543fa2609f9fc545087c3003b1554"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527249+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10f9de6c-d52c-4255-8126-ff4932eada2f",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_67b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "70ef379bf1684b29de7e044af8b9ff19797e5cc064dc3ebab7a68eec75dfc0a2",
        "deprecatedHashes": [
          "d2ba932aa29b2bb18d31ccb145ff36df47f66c720ae3af014dfc1827c14add23",
          "83128765b05c48df8cf78dae52922c7af19dd4047f755446e8ecb5d56e08bf02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52725+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23593464-bbd0-44d9-81ed-0e3a1b0b6c42",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "adac1cc5a99857464063eb022beb09efab97c5a56ad47aab6f7994cf4c1835fc",
        "deprecatedHashes": [
          "2b1401535c1c7d411b5fecc37ff91b12534684addb42054b09f5900a41b3afdb",
          "4732bb05ad79bf147b818712a1eeaf35bc902db854c301be68cb3289f17edf6f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527251+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2d3feb8a-9bd1-4a90-8258-b26d090dbb28",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_10.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a73ddd77a9ef8598d0fca5851afa8a3364aa0400e81c36956195befbf9b682de",
        "deprecatedHashes": [
          "15363d11c48add10098c15fb618da6634573c6e7d97d94438ef9fe645ac8ebe2",
          "7924f7ee1c06935f8cc0305473086f05249d348247c9860d2d8d3638a20c5b1d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527251+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95737cc2-b643-4127-96ec-994d901181cd",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_10.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9ef539e269f498526fd75847725710763254d32690a5ddeaa21d8e964c90cbea",
        "deprecatedHashes": [
          "c40c5ba7dc98db3b4ec84a2c2724f62a0e40c2e7ea9dff106cc46c3967c874a1",
          "fcc7d084506bb811dfcbae88bc6ce4052c4609d719385cf8554e8420ef81c542"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527252+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "43a16f2b-3787-4b1a-a68c-7721165a7411",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a61eb476e3e6ed2763bf1d4e81e3afcdb587d86d0168d692157890655765c910",
        "deprecatedHashes": [
          "c7d0f17f50e927681960b3406e842d12782e42b243b7d0516035f71e342b8942",
          "5941e7e903e23151fea67e2c9a498acbee413020b1a1ab3c73ef6d617c7baf4c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527253+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c04fb48e-0d07-4b46-a419-5ad4411ec948",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5660930b35ad59e2ce6cd163a7fd4034c256b807b803fec143b5532ecd05f1aa",
        "deprecatedHashes": [
          "26dd74befd508ecb7969524cf9f78e1866a23d2a8d8fb143af16c18a1bd92ebb",
          "6553d4b821738cab35d328ecc62de9fd03548797a21d0c1995eeab464eafd800"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527254+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "08566037-7853-4e32-af01-7fd3ce321014",
        "line": "65",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_07.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a44b0ecf0d4315943d841d316fcfa677c1d057f46945ed42b5083c7d2e7cca1f",
        "deprecatedHashes": [
          "bbd1b6ed5c4cf93be7d15433506e40429d2cb3cca32aa7c889908ebf73e17005",
          "f1444327ec8f1e91c8d6209254e86add6ccb08e0bf4b323035943e13449266e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527255+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b4a9c70-978a-46bd-b947-ccd71ae27b45",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5fbe7bce52ecc6afc2950ceb79f7c7452f704e77af1df256e5cfc52fe611e14a",
        "deprecatedHashes": [
          "e19d4013db2a4088d374ed16778bee21e7374f241f171cf2c95fe8202b069c3a",
          "f834769a6c6f10b4efc380eeb9b95532a0615f5f3034aa314211eece67c86b4b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527256+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "725efdcf-619c-4fb2-8b1c-fa894fb5a067",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d5fc392464571f3a10ee574b7e6d66683bf2cdb19deabea86687e259313d2a46",
        "deprecatedHashes": [
          "167845fd3f13251dd8bf29fa48dd408dffc0bf467f0c128d69090059d58e61bd",
          "422b90e320bc306f07beb20e724893b424d03f4c7ed2283130b4a03902e41276"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527256+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "358634ac-c79f-4de1-ab8e-f18e6f568c42",
        "line": "55",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_31.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9cfe8d348e33b95c3c49c3476eb8974648491e56a5670584f30d7a8e79115044",
        "deprecatedHashes": [
          "06238491b44e5ee817d1d0dafc55d8b369a4538656b2a81a7848494afa2fed08",
          "792164e55895176105b1da7a46f6826a4ea13ff66c4ad5d28426aa943d2ca002"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527257+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "44f09925-c4e0-4244-b729-4c53a192b7fd",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_31.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ac679f87e4021711f73b07aeb5aa0cceabdbf8572962f815819c180d29cca264",
        "deprecatedHashes": [
          "533dcebb2a7f59c774528fb75e51af26bb8b8e4b3fedbfe809abe9c1a4c6d173",
          "eabebfd4206ad139f1090195e200e05fdec49aeda52084c0704bbb6382dd02b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527258+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4878609f-fa4d-4a71-939d-6ae8e23aca77",
        "line": "56",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_31.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "d182605e2ed052d465023bd52bfa2d2cc4a00b606c0f90aa5a66f8d1255082cf",
        "deprecatedHashes": [
          "4daa9a709367944adb67b85612b71ef95f0b4b1c1ae5fbe26868b4dd865cf48b",
          "a46f71ecbf5573b90076b424d2879a9b5ef8f9b5386d1a3d6686b9a79dc9cf8a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527259+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c370532f-c6b0-46b2-936d-46848c8e0785",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9d6b9ef1b21ea0966d2f8dc831ff9000d3cc84d5f05b7dddeac6f174ea664023",
        "deprecatedHashes": [
          "605b6189127424ae829ab8c2ceba2d5a0c93ccc5d5192757d00590bd2d8f689b",
          "d23b9df4c253885e2680198b1de4ca9a845ec22cefca20bbf7336e69056dbf06"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52726+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1c86f246-359c-4eb4-8270-491280000d96",
        "line": "118",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6ff5180a149a681268699372998ace26fd2c8ce1e4c07c56f9ae09f11e2f9020",
        "deprecatedHashes": [
          "0ebc083819709e743a82506ae04dde9a18860d8f0986bb20cb6d4f74643ca98f",
          "ae3fb1a434b6a939f15d516c83f1442223be1cb8fcf8aa93febc0c7e3c010f4e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52726+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88fc320d-b44d-4fc9-9144-20cbc2e1416f",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_74b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "52c2343c125611db9e6214a95649ab4b5bba8013514965423c01e0b013cceffb",
        "deprecatedHashes": [
          "3bdcf3e2abeb0a095ffd5df3c21b8c5c12a643e0547bac21babe6cf0c1f6d9dd",
          "0149e3f4ba0367544483a88a09465254844a560f49c8b8d90226ba4ccb61bb2c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527261+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0d9b798b-268b-4423-831a-06e2044b699d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1b1ff3c089d4abe78f397bd2d6d57b73e00675c6f4024de604279a4db71d967f",
        "deprecatedHashes": [
          "5ccbf4678a4c15fa1c6321581239bda98e83746613454d1a4a525668e22e7c20",
          "41afc98a6a42867339e09d6ef20d50614e777b8af0008ebb3597fcfe4b0e4b1e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527261+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9beb1cb-fd3a-487f-89e8-05d4412ea645",
        "line": "49",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "10bc4219afbc30aeefc76bbade4a85912c3539bb2768d92dc866545018053a93",
        "deprecatedHashes": [
          "c5579eea7acec032ade1791dd338353f83fb532fa5d453a87dd15036f9bba0c5",
          "6fd90b1043d51a28a00fbbe0fc27616ffe1225fe16c32c586a01715a31617dae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527262+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f1402a1-6ca7-4bbe-bb83-6e288132aadc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "32550f8950453069bba69c98def40fcfd126e78633b545c6dbce8ac38c2d7082",
        "deprecatedHashes": [
          "38ed3193d6921b25cf8f0f9759a0ad267c67cd478ab036281691f41a40115f09",
          "2b8532feee05f2db77c3408918c0ba6cc093f9b56d37a77a4eedae10d8b0498e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527263+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2dc835ec-5c0a-4d63-8822-02b439a49c9b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fd37f69ec3f081c63d81f9d1a92a18899d9e9191a5874a928677b209fbfb388d",
        "deprecatedHashes": [
          "2ef6cc081733f40f86d056bd6a18140fbcb2f6d84d27110c5ac728d362d94dee",
          "bd59fdfef13dba216987560f80b24358fbcac61572a7bf3198bd7f1d155d8657"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527264+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3ee3a02-dd96-49dd-ae45-2346cd3cda1c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8f28a9fe3945b24b5b0fe03a75bdf8ce60342d1709efa43255be01e5cff1bd60",
        "deprecatedHashes": [
          "515e1c9cb655d6e881e32c8bd1590bc9ad2adc4690d78a3f2db087fc53ecb9c7",
          "165a84b37e99aaf1462888d766dd1c59e31866ba9dd464ee231c80f5f049fcd1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527265+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9c6f3f9a-f737-4101-bf2c-506a56ffaedd",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3cf3f552f75fe6bd362cf12e31a4e2bcd63208a6fece04e6539133e98cfbc250",
        "deprecatedHashes": [
          "fea1472bd7aedc78209a7e4ad9d0326edeb14e52573ef8ac366cf73d57f34e8b",
          "1a46cba9ce18bdc3f4ac2a714acd98a57ae02a98f15d77445ca711f01ac4b892"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527266+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "61cb4c92-740b-471f-b199-b1e5babdf373",
        "line": "51",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "36f7491cb4154cd3f9761b3396b8f04f2e1b69f4afa87b6f3753e0ca7bc8baae",
        "deprecatedHashes": [
          "7c79e390db9fe67c51d359ba6bd58ec35828ab5a626c492ddb73c48f6426bd91",
          "020082d2785bbb1c43f61a1444cbb6b68d10bdb9399c764dd28a406e25485301"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527266+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2fef244-bd21-4015-a32c-80af23767068",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7cb6b6e51188e6870e5275924627fcdb674fbe76947bb8ee8784003118137814",
        "deprecatedHashes": [
          "aad90789e67c6dca251f4560b2c00e671f55b57d4ec2aeaebbdebc02dc2fbe38",
          "82c5a390974fb937b70d3fec587cc8707aab034689a385df62c99080219bf661"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527267+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a32c43b7-e8d4-464e-a35e-d5b6730706ca",
        "line": "119",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_08.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "06554fc5152f76fb6e4070dce890cd7d6ee17e34c5c23e62484b943141278c6a",
        "deprecatedHashes": [
          "36e1d9783d4981c2345b1c3efde372fe371717dc8dcb5b46c90dd3b02a66fe4a",
          "3806cc322851d01590e52324d1b42f8417869908b436e8d6a14f85b23d9fb8dd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527268+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "226bdeca-4c4e-495f-abd8-263bd23c4bcb",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0fefb64522160a72b40412532a7a748e4f7b4ad89372cb94cbf1c0fe62484b92",
        "deprecatedHashes": [
          "8cad64b33888d7233ca50bbd29c1a534862b93dcfa44f506fc31723551a5c4c7",
          "5125125cb3b2c160fff0aeb25d2e5c9500a1381a6fb89e2426af8fe67fa3e766"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527268+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e1737d1e-da40-4698-9735-6dd498fe94c7",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_14.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "58f0157d0792ed552c1591a79bb40289ce79d1d79c14cba9e78b034de0cc0ec9",
        "deprecatedHashes": [
          "b29e41fefcae8c23f5321052ec96a790eeeec1e10a424ae094cd5cd6294c7455",
          "469c471c4d9968d31906e8c42eb5bf8222ec2b7171620293aa3d9cb2da32f501"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527269+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0de36f52-4c69-4bb2-9480-b74a2c4ac1f3",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_14.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "cc05c79443b806737357642b70eb89bebd523b2a0ffed3b0b5d33ede8eb45036",
        "deprecatedHashes": [
          "ca742bf950656220cbef4bfd9ac5d955effb968ba64e5d950f6f7ae33a630690",
          "d6a0a749de49bc6d9226e9fc4cc70d6603cd8ba981eddabbd4ee020eba17d38a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52727+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9af299c9-959c-4d15-ad3a-ae252e3dee08",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a1e61a87f723aa26d5bed890e6bd80728bf1325c7e9ea7d64a2b25500ce82631",
        "deprecatedHashes": [
          "aaf47103e47c0c98e9afa2d7b563d0bd9ec6a81f900dd632f6c4c5b63fd37da9",
          "0013b872d0b90fa133139c4893be514958bcce9380ba169a029acba7023ea87d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527292+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "929b7459-0c7a-4bfe-9589-2f1bfbfd6977",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0009835c78ea62ec2ce47ed621fcf53a338ce904e0c6e60f7e417e3320773cdb",
        "deprecatedHashes": [
          "6429d0ff660f6bb318925b07b82a40bce43876bbab561f322a9635c8b0aa4951",
          "9730c735dec2efe589e355a6ddc53ffb87d6c418feaf0b09430eb1823527f1c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527292+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2e265798-5f11-493d-a1dc-2327ffbcc335",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "64c162f54c13528ea76b349ece876dcd3f0520f1f6eee4fbdbe9472e06718dd6",
        "deprecatedHashes": [
          "ee66dce63e93137c6b8d7ce66254bfe2e52fb55da2147f6d47d5ad43f41b528c",
          "f942ac774224a740a15890f2d505b5fdafe320db9fbf4152cab6c422b9ec3249"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527293+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "33da42db-f449-4231-a0cf-15498a972388",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_03.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6186e8004da6775604fcd99b4994dddfdedeae909ed610db611acf2d4832a798",
        "deprecatedHashes": [
          "9d9dea616ec99d555065abc4f37dc01c3412491ff6544e00dc4a1bb7dd36af28",
          "539cc104ec3efb9964f9d5ee8b7bd41e2c2dde409c9be74f5bec475bd8cd9906"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527293+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f11eac25-dca9-461e-a979-1bd5bf3cdc07",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_03.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c8da6893302ddd2c10f26d4b432b053acf68407fe1ac7394aace62bfb92e26f6",
        "deprecatedHashes": [
          "af40e172d8ddb3dc4af9ab91a23a470425dc8846254567e0360d8aa14da8d42a",
          "6fc279e761614e2a149b3deee3b56384f665456a739271f6afd43be9a15916e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527294+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c55219c8-8eb3-4ffc-bd48-fe3bb80fb2b9",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_03.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "b71e1df9c1ce29ab58106a4217a69154f1685bbd16bb46d21c3b62b54960a22b",
        "deprecatedHashes": [
          "1ba5eae88b74c73d825affdae892b85500a1224c863f5be4fa05db05de52f73d",
          "f5a632284555b20a3b0642200875f4fddbc35d34a18f9e9324ae7412b0d7682b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527295+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5adc8d9b-29b3-4aae-b2dd-0c61b9e47ddd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9ecca81db447930c9c5fa3f1f7fa92eb9986b3e1112eb74e6f029076428c4d17",
        "deprecatedHashes": [
          "891f8e8826345c79264ccd6f4a6181dadfc1649041edcfccf53982f71575a9e1",
          "cbfc23ec3cd9331c39425110ea3e4ae5ff8a637cfa3ed9acf4637426e9193419"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527296+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4e3c1fe7-c275-417d-9207-3f005f5526ed",
        "line": "39",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "633b4551f897bc51a439dc855aa51a837c13d232a68667caa221f899671c8833",
        "deprecatedHashes": [
          "2166e494529e41124b4eec33a83277545c3de69cefba8953998c1bebba3bb136",
          "74c27a5be70f201ca3e5bd4a7dedec53644bc0206dd2ad17e059f8234404eb5c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527296+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d0adb9b7-97ef-43c4-bfdd-9882e3f8cd62",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b58999cdee36624017139b01ee447138babebde74cebaacba8df582a6b29ea29",
        "deprecatedHashes": [
          "767d4f5dea1ee1c056571fb7dc41458789bc342c2fe846c7fd110b33b36a964e",
          "097730954d1a553fda1b9635891c21425431a66ea4effbb450ea1b80b349f665"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527297+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "673fcfa3-daba-4e1f-b56d-fe206c5ddae4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d452d0ee57c46b7e8376a536daf7812b6f1af13d56eb2657c75401166ceb6d7e",
        "deprecatedHashes": [
          "d6e7e864be17f4fd2cbe9b7005fd0ed900d457ab09e9a169c1aeb363c0f9ac6d",
          "9ae51e4d8b86dc7d3e2a9a5bf172bc991517a6c3a262a21287b78c4587ef5f83"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527298+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7c622dba-77a5-46fa-98b2-50191a34f84b",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e5efe0ad054e453aa44ce87a45e0f9c210bf0223aa5156c9b6eda584460081c3",
        "deprecatedHashes": [
          "cdd45d88527ac404baeeea66a85bd40f02725b9df10c1b439f91d1323bc83f1f",
          "ff1372eb66a7a4550911202647f37df11f8e42c95a53aa019210a73d68c14766"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527299+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "56969ff9-b19d-45fb-ab29-0c56e7391ad7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "86905550c9c313111b2454a0a1e1ed5807434796b4f2e955ab157e0ded1a2c20",
        "deprecatedHashes": [
          "2f2176c4415b4c38104d342294af873093c6a49f35c4ea4d74dffed90699e25d",
          "5af77f8985bdd066c193c4c276fa54a2c65cb5cf5985e91e9bc94d4b78fcc51a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5273+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bb5ea702-f7fc-489e-b878-ac2ec6888616",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b14aa8d4031dd502c6eeb26a4af441e5b20c2fcffd235f708b36dc2b73780b77",
        "deprecatedHashes": [
          "2a6cd2dde4b505c49f6e0be7b476cb08fae6eadc66996dd31d12f5a819cc8af4",
          "0ba6cebd37c287d26b75175bf5646ced2801fa0b8f733627b4c79dffd8e2ceb7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527301+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ea3441f5-96c4-477c-926c-f06169b7593d",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_13.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1f443236fae4327b37596e5ebf330ff6aee5d1c1a898c64a8cbd1036ea01d466",
        "deprecatedHashes": [
          "41085996bfd2bdc1fc1fb272509f7a24ea2ddc750a73a664df7ac366765f618f",
          "fa9835db9029972ee19e6ae7d8a3481ab5e38923c84e73e975388636b9f46245"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527301+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2dc6e0ae-36d0-4aba-bc3a-c8988ac388ce",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_13.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3ea9ec308acd0d6578acd71598f082e44a4ea4663153e10295d9822db8e24c64",
        "deprecatedHashes": [
          "397745b4d0ccb73061265ae50201f503b9152e3422779266de1536d9fed94fb0",
          "ca4010e30978b85c220711c2007a9cb5f7f332d99a21f64dba4cbad7d24ed5c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527303+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d2ede28-16d0-47cb-9e79-f42a3df4f38c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2577899c4e9a85cff0220ffacb08f491f414ff340286ca1da87b9ab47ef42b97",
        "deprecatedHashes": [
          "0053bdcafa485527d378d5ab853eb47101d16d8b9d9b545ec65e638018019448",
          "0c8ceff6377e9847995734f77e350ba9b3b6916876f2386e24d40e7f9dfdf2f6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527303+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "752b0e19-c9a3-4b75-af48-a8a49cb98783",
        "line": "122",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f23bc198e983f1cc9cfeeaa0542c1ba7a9926357139e7b538a1a70053e622888",
        "deprecatedHashes": [
          "36abb67cdd340b44861f085852d9c45b0dc4c3a5e23905babd42c2152d177cbb",
          "a583ca980ee5aa22558aad4bc34f57f1f62e004f8d71f3c8ed34668ba3386f93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527305+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a7fbfe71-c679-4e1e-8655-d11632d77249",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e8bf62a8ceda3749c28cb596019fb3584802990a7d0a07e8457c8d24ca84daac",
        "deprecatedHashes": [
          "b16850bce8978ad705ea4af885fb1d71027d811aaaa8702ab6193801a6404628",
          "2c366cfd605df966b4ae5de728ccd5bcbaa8da114f3e371e3b0523ff93f8cc0c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527305+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4bfef104-ed1f-46a6-80e2-22bbe599b515",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "78ef933feffe5ff87d816642026c182097d6958e0f96876ffafd911c5eab7667",
        "deprecatedHashes": [
          "8c5c5d515cb6f8d88b45624116faf5bef00ab6067291609a2799c241980b2a3a",
          "1febedcd7b0f2add3a7e438a760e30b7840d575d614477415dffcca9fdfc5f4d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527306+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "957177c7-79c7-49c3-8dcf-3c1cf60f3b2d",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_52c.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "841b48051d3f61aca438c30440c66dc4b6c1de0ee7d2c5e7bed03d0e3b08bc2e",
        "deprecatedHashes": [
          "4e0847bc86eab190276a1a95b9f436ee3a9e422b74765b456d95a37536a60313",
          "3ad6654c142ffffa4355fa7de63a0890b09089b99d9b2e711e3bdcbb32d093f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527306+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d14f0fd-6b3f-4066-87a9-fd68cffa2cb8",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_52c.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c4ab2487993b5c1279a9e353f94c32707adf992b1e5729cbf6365bbafd8a8331",
        "deprecatedHashes": [
          "7f27ee39f7e1301b2821598e6a1cc7101bfd80758a7d150c307be41aaff72635",
          "230c598a8feffd5a220fe57adc664198f1ed9dd59552af4a79c774eaee46c1dd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527307+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "47ea279d-7731-46dd-9aa0-41ea54d90bd7",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_67b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4db825a2c687025a26c8e04a6b8e92a1fc225b17e0d5b7ec773eaaf40e856dbd",
        "deprecatedHashes": [
          "cbeee0c35b7b63c3e70a2d137fc7c3664b48d8f4106a606d92f3ba503c0b395d",
          "a57a294391a2282987c1a0e3066a5467cec6f54749da602d7a28f623d07c4053"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527308+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3a06b6c9-d764-4a20-9731-9e7bdd3f97bf",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_81_goodG2B.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b844dba98eb2167a47236a342caf191ce5d752b5342d01b655060482328a395f",
        "deprecatedHashes": [
          "02f94cf68830eb0cf0618cd973e448da8fa0cfdea5f095f940b3dac4c438c3aa",
          "e7775845f24fb7936dafbd4e2e427d9738ca5cd57acd4144b2bcea855175eba3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527309+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a559a028-276f-4bc7-95f0-a7159600dc2b",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_72b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "39cfad24071b17f00dfe46971409aba6ddc1b0fed3aedfc74cb4b1d3f20a2fdd",
        "deprecatedHashes": [
          "53ceda54dc89864a4c2986135d3fc20f4d57d3802000e44ae2ca4bd22ae4d1d5",
          "59eb485866f519cdfbaccc2e979e174f369ce550e35b1ff7af31b0a390397ed6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52731+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b98086d5-9545-439d-b18d-4c0f398d1fc1",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d6598e414a51d74c82176b9427d578d9503a63b517ccb47ef88fb0c2367924f7",
        "deprecatedHashes": [
          "44148536e9cffe3e1849cf9432a18b0566e3d171e7f072d3d173c8f15d8349d4",
          "3e3433acae6c3f8370ce6ef512dd98c7d4dcf00b983e8d6db2b1a54c17274cc7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527311+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "501c3294-fa94-4e12-a50c-88657d1d2adc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8ff52cfbccbeb4196bbf7d086797f7286996c8c45232682c3d0342cda80122f2",
        "deprecatedHashes": [
          "42afbe257fc8c05e5911ce7a44ca8d280013f605da54b36025137f9f1fc0d606",
          "07dc2acffae0caa423b8ba91202120717c3cf795ebaf22bb52198d963e8eb27d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527312+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4525cf8d-900c-4dc3-9c0b-5bb90c947a1c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2c0e31f6c11452cf41a6edcd9ad2d7b8139b445e0351f4323fb790f1a48b17bd",
        "deprecatedHashes": [
          "7e49bd10935ff54684a4fe61c9cf3825e67eeac1efad61f4d69e74a25899e57c",
          "6a187bc5a6b7d100b2334ef2e97c6b3d4b9e8c4bec3bf7ecce2a29e3019c5120"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527312+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8906dcec-f0f2-4f02-9eec-3f27ece88bbd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "620bcbdaee4613ca8f86bd3cd9a874b98e6d919b9b38336ae3b0910ad6baaae0",
        "deprecatedHashes": [
          "565cbd8a7398272a9c23467c8eee56a7b3adf595799ace69831437570cde84f0",
          "ed3d182966b1686a8f6ca33dd12cec30107d61c435c4703db733d5ddfbebe1cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527313+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "18109b17-f9a5-4ec2-8a1f-cdd7a89308e4",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "98ca68cd6d3762711dd3e39af4e043e54893e45ac5050b714dac3354f7122dd9",
        "deprecatedHashes": [
          "2d56b8dac24447a7862413443931bc458b5a735923402f0dd60e4864dbfbb1c5",
          "f04a0b3c674729de631e0f9c6dcb7b9bcaba45de2418a72ee0d3dd0774bb4bb5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527313+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "00e35fa4-9ba8-480b-8f05-89cf603e35f4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8773682e18525c115ab765dcd5c87ae6fc10dd6c79b350761dcfb431f15aea7c",
        "deprecatedHashes": [
          "c60856ece99a99437fd5ecd1ba0a54dd8ed346107635b80d267300c5c1939b8a",
          "50b82161f4ddc15498168a21d8a71746a37761515a190cb8509882bc171f5311"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527314+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3af85b71-4c09-4b3b-a955-6684fcb554a9",
        "line": "108",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_05.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a905b213dda98ca8f07e6849b3fb64947b0abd3e4e1d0317b079f877ba791b29",
        "deprecatedHashes": [
          "df22673266bead8659d4e45094821f8b1fa7e30c41f8bc2c59c76312abe61c0d",
          "1c23554ab161127df04c69650b7556f66ce8381abcb0505e5d2dd58ac93f5cd0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527315+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "67b55a5e-e13b-4264-87ec-c681c25db2e2",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_05.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e7b7a1f37b150ad789d5caf996a32c03332ddf71b8b2cfe22c01263cfc820f9a",
        "deprecatedHashes": [
          "13542b0cd7f8162fdfa278e9653409b42b8fdc5eef1f0140d2cc3b76bed1e2b8",
          "0c0a95102e7c2685c6cf4e0d269f323ac712db0bf7318a22af0d79b4bdd5b2bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527316+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "34eed7be-3af8-4750-b690-def0a9bbee27",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_51b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "835777fb204b2b5411b8f1ef5ff404cf4c01b15354954b53897614945d1cafd7",
        "deprecatedHashes": [
          "7fd9516ee601c5559efaab9bdd03a1bc2414f7db27f8a6c11738a5587a691a73",
          "ad002aa6479cc530b1d53b07c4b5bd82afd8070edccc2308bda6692c5a779647"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527316+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "99fcb81e-c205-4955-9311-bfc65c07bff1",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ce65bc155e0ee5c526a7b2a52dea5e31b05d64c5821273e0af35218a604f0e9d",
        "deprecatedHashes": [
          "b4966c2622edb862dddcc310c3cea8d8f6a8fc45a96ff003382ca58f55a6c8f3",
          "ca562d7dd64186b6c64182c018a3af30cf8983702da6a498f9aae0e9774e6b80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527317+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c24a69c-0d06-4d9e-b5e4-2b3aa0566b1d",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_22b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a98d37693937d8d6e390c13dcb01600e3c755e7f0382e38383a0531cf2a78fec",
        "deprecatedHashes": [
          "49f41db2b8b57de5315546ee669cce8901a81ce1081d4b6bd00f8703fb911542",
          "5cf9f87e2f797a0984794ab2be4f36cb09662629f927d5e429d79e865dc7c511"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527317+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3064eb45-0e51-41c3-a4ad-474fed055038",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_22b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3730fc10bcedc0491cc6740c9f2b96ab55e8a381d123a3f04b58d1612bc70692",
        "deprecatedHashes": [
          "ed800e5ca88bb3a03316618f29db803cc24fb5470ab026ca18f385e932995e65",
          "3278093671b87af57b5d491c74b290a6e19e161472c2633889070ed722df97d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527318+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0710a5d2-4712-4cad-b37f-a57476510b98",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a70ee50b529c6520ab5aeba8efcdc1b99c063c209f1c2ba6f7156a3460a4a50e",
        "deprecatedHashes": [
          "f8a326567c8bbcaaf122e4201d5fa52bfee492cffdb275589d134491877d33a7",
          "20b575ca69c4efb5af289908b1bc0d703c88a728ee5e1163e7c17dd3212d37ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527319+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b75be66e-7479-4ad3-a3cb-aacd1f813bcc",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_73b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9a1eb9f5dd56a2de679db26e17faea2c07a6107f4655f2c8ad130f9cd47d9266",
        "deprecatedHashes": [
          "b0592ff97a02d36da098251a2639d28f50c043297d3437f26b5399d4cf62092a",
          "3c11bf70ab28207ba847ff07eb37a14454469a141ca18cedcfd7bc18e3a94f38"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527319+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9213db4a-ae8d-45f5-82fa-dc6007949604",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_73b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b13c5570d4c4c0793485596ed904d6e99316e6b2807f4741eb693ab2dc284e16",
        "deprecatedHashes": [
          "c6bbb33ec41a14b8dd7c678f68d89f95c5adcaaba720a8d3186dcd0b7620af89",
          "0a72950b6295dd049628083fbe3c0c3b958db4fc304f1000c3a404081c2f4368"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527321+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5a33efaa-ec86-49ab-b1a9-a2e270f3aed6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5c5ae7cc6a4ece7ff2665bf317199e335c3dcb6a168ce9eb8f746fe674adc478",
        "deprecatedHashes": [
          "820d95d0811657495ba41ad9711f1d7698af723be85cc3d18842826c1120a2d1",
          "ff45e181262d381be1d61c988f9805034d0b7787e04552c7c0072943d3e761d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527321+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "733eb8db-768a-4185-bbfe-a2ebb2f28b6a",
        "line": "102",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8c64796242c6c474adad8b7e3ff20a7f16dc01cdcaeffaefaafd18f9628e56ad",
        "deprecatedHashes": [
          "43e8e7a196adce41394401e796d46e3f151a47449a1480421620c33679be5dd2",
          "62b96b5808fbc2b4a22b5f02ca198c67ce9374309c6b92102ecbe7cfede97ac0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527322+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa95dbb0-9d51-42c2-b0b9-674690ba73cc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "dd6926b927da60626c63739ad72b500a2151b6ec1e5f953206bd95f1f0c5036e",
        "deprecatedHashes": [
          "8a6462fca7f52de0fbf173ee8171a28096bed8c6f1eb4dc6e03b88901bba8184",
          "99e8f11525d6291372ec1a804a155ce4e14615e878cb0fa9d4befad4ce40b1d5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527323+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "445f78eb-8703-4cc0-ba5d-cc770941fa30",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f390d1a870bae0bce8025beec2467f76d8fd04e6e717f1b5b47cae0dcd405866",
        "deprecatedHashes": [
          "ffd714d5b593c53e4b805ea149d36dbe3539f25f7310bfbbe0886470523ff394",
          "601cebd99b7600dbb9ca80b152023b8823b1568d9afaa9e6f2b68cd60a757f5e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527324+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17ec03e2-07a1-4feb-8edb-88f848e40108",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3b7aeb53e1fd254661dfc4f6234e82ce37274172050b85178882db45568f7225",
        "deprecatedHashes": [
          "bea69497de8afc04298cc297f29450b6b8632acf32012a042d2873d9601048ec",
          "c94e147ff069d0892aaab0c1e2020d77ac9771df5b00e7136879e9706c598bc2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527324+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "932f858b-b850-4e6b-9b35-400f11e2ca8c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "35c1d62709cb99e85153fb1cc18f5fda218530ba0d661d51c0a58e9c6410daf1",
        "deprecatedHashes": [
          "1e1a611271be03e89894d56e34d56f7faf41644596b7fc7e752cca86edf031f7",
          "8739bd7a8772d36a985c520777baa5cb5ce83d126484d0b52cce1ee4d16bbce2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527325+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "edead3f4-5ef5-4697-bb63-dc4299d8547d",
        "line": "55",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_45.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f5ae18f7fdb5892b654ceb7bfab7533cac00df9a9d071a71f530484b4d427288",
        "deprecatedHashes": [
          "01bc0cf8fddffd754e496533fe04f9f9ffb177b3ab45856597ab51cab33397d1",
          "3c0f1b50146005376cfab1fcef80ec3236ba6e62c43d1aa2e0bc38bd3df77dd2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527326+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f241402a-9e45-410d-8d53-5aeeeccb394a",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a1ffea6db566939b3a47f8a891a7d447f307ead6061edf30df7a14da13247aeb",
        "deprecatedHashes": [
          "afd15b277f50ee71e94348d326325fd9975919479473dec5ad9d6b132b1652bb",
          "df66c2e26d9a7321511dfb84fa5f271ca5535cfba7bb5e0d0bf0722cce91f341"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527327+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9bef7c72-fa51-41c8-8860-5d1c2228208f",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "79a8b6ae82193ceb86d31cac448e0fb62e64fd15f02d0b57cb372bc5c1084726",
        "deprecatedHashes": [
          "cab1e533f163e840c0ec605eb7196f2a6e34495e52d9cee62c2d96552dcb853b",
          "7054994632f246c4a4359594a70a26ea5863002b1e95b5682d8cd3f118967447"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527327+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "58c8f3ce-ecfe-45a0-a12f-f02219576300",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_73b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "62234d1d90301b34d6a9089d0ab6be7de9f54e5b64067576b5cc5ce33a002240",
        "deprecatedHashes": [
          "59787e67c04c9f5abee7ae5fdfc2e845aeb133003bab678b4eee5d9edf322799",
          "2230abe224d7f1b4e8802bcf3ad90cd58f3c444c2fbadcfb0d8cf801aad11e1c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527328+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "297552d2-6e7a-4e09-ae51-be015c7c1b3f",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_73b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "17edc050ee101388ed9b1b9fdf45a3ed96b70c4811877dae2a06d080a9b6520b",
        "deprecatedHashes": [
          "55540f21281eac9fc307e464a6e5c505c0a9dfe1a76167c26793642f595e1660",
          "6f772a4446891b7dc3af59d6fd58ae1ce261ea33197bf08fcbd0db4f972767a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527329+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "144b9a2f-c979-4eac-a3be-ab1ebbcff416",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7fc138a92cfed13f1ad3ca817bf67a95415a0a9c695bc539ec523cc9a4293012",
        "deprecatedHashes": [
          "35b0a45b25b73c5387fc919fdf3ed8908f29731b446defc074edab4e6b8cd62e",
          "38f825ae2db288d47800ea934288d2b05134963820bd9439654ece422e79dcfe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52733+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ea0fe147-49b8-4d27-98d4-ab8bacc3a632",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ba208eb22cb0088b28aa49b3b8cf440df85d73ff0f405e6808071b0325391805",
        "deprecatedHashes": [
          "744437ccd8eb4551f37c6c9ae06211980179c5b658d9eeffa203bba4531a33bb",
          "17a4c28e5b5416a8b15812afd096bff9857537a6479dc6c5a7493c277a679c39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527331+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc963bb2-2df0-4f7e-bd65-34df86dc5709",
        "line": "53",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_15.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "003eb3ffe04c3574f117dd95509e38d98bbaaa55cd3eaa6ee92d97da0c1f59d5",
        "deprecatedHashes": [
          "1de8affaf0d7577b6ea4ca086d5001c47930edd018cd957cb74211540a464ec8",
          "8c3fdb11cc7922e7488022001c7cfd0c65f097d67a28884bd784280a45306a38"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527331+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a11f3985-24ff-4056-b7d5-64b4ea5ef5c7",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_15.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3242f0d939631280487b1cbf8560bcee87acf6c31cc965076441e5f1bba25dfa",
        "deprecatedHashes": [
          "2e80240315deb416c6405b9aa577009516febf018f0f0fa901d0b88d5a20a724",
          "2bbae1e76927815fbe8a3e1c8be5b1b312791482700577726c01e46fdbc0fe39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527332+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3e2f860-febd-4cff-8079-82e21a021652",
        "line": "54",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_15.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "3e4e3b1e1a5d21e6ccdd75becf06a4c47fd751480c9ace3530d33427c5e2035e",
        "deprecatedHashes": [
          "96016e444eb7f99e34381d1a5cca3037927383ce183d18d1d4e0c5efcd4f39d6",
          "ef78a1ba0c563d1e56c79c8b4797a305817baee56606cf88a9daa50ea0d8a287"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527332+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd21850c-ded7-44c4-99dc-d11a3d50898d",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5003a11faa343e98f6c2350056444ceb31dd6096e0bb70761d6687d97cdc35ff",
        "deprecatedHashes": [
          "5d1e0fdf04f1e99d89217fa17467133eb06f87bc1931508ec040170f98ea26f1",
          "05c9d4cac7de2ce01e9649f08719f475d72c950b9583a6169bf9ed4a3395d3b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527333+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eba0993b-b2b0-43b5-b07f-59771dc0a3bf",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bb558e7dbcc85718de4f74c4cc457e477a744950a524e648c973b3fe9cd8ea04",
        "deprecatedHashes": [
          "dbd52197013acbd71d8ab8b5a50243bee63318686ecb133ceb892cb77236eb1f",
          "2ade47d4f7335a4292059c57f2807f98565837e92a52a72a421dbfc7ac03506e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527334+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8f63a761-28b6-44db-a359-2547a0c2c169",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a167d7ff2c56b682dd9e35631583b13718bfb2929ce3bb93461b2b88b9173df1",
        "deprecatedHashes": [
          "4531234d9688ea314abd967d351daee709fcfb27e90bacd7907ee95f810dde51",
          "8ccec82900dd7d0d8c9eaa914f7ad9f7d9c8d332e2d6fab7c9d4cfb9938d4e76"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527334+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4e5c13cd-bc73-4a38-b87c-47effaf2f31e",
        "line": "122",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cc0170adada768dff6e946572c57cb9671ff03f9269c3a30f78f24bd788a8913",
        "deprecatedHashes": [
          "bb56cc6b2fde1bdb1bac027384421e3b2e5113407963223c5fa031c61d0bf8b3",
          "8732c204920f1859c5b1b3abf73266a3e4c0a561bd3c347bdce87e883c9e975c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527335+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13a7975f-fea9-46a0-a957-73b2202d77cd",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_54e.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4aec6702ebdef2227421706f26d0a61f42e4fea2ef2303100d8084a6fc883973",
        "deprecatedHashes": [
          "fc17183e7212d5320116ba1ffa0ad54ad7f41c22f96282aab4a5712ebe2003a8",
          "9115097694ab225f3950c07cc263f4d547d446d520d53162491a56df2a390152"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527336+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26441457-2188-4e37-a2f4-8cd800672aef",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "33c7da61854cfe977cd6b1c658ac6046876582ba70d5b84bf8ea67d44f6e834f",
        "deprecatedHashes": [
          "77900446fbd0fde8f745b41157a1c551ce9404c1b1b497400208428e4052cf35",
          "651b7f46e386959386593f64fef4a1c68652fe1d25a025032da6249d24a18205"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527337+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d52a0efe-5e61-4b95-a73a-90177c868741",
        "line": "50",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "40bbde491163a2b48897502a22a155953e4253e033c5980c7849f8feb0383f81",
        "deprecatedHashes": [
          "9a823d8e53ec714f63579a19b0178157d0994633adf79a5f6e4b08db0e5da58e",
          "3540665e4a5f4e5920c3896c6683f15a4678ba39e1e2fe9b78b8666372148a26"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527337+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a3cbf317-1f31-4229-bf80-358e590c6196",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e2eff4b5108cab20bd2965b6408abca45199ec69aa670a43aeed2c19a558b8ce",
        "deprecatedHashes": [
          "877a509ff95d81985dfc9bef3f710def7c8f02ee4fc0d40002e8b2e817a758d4",
          "1c006fd089afe4a26bd559a8ec2670df3e5f2700d47b5bb42e056522214bee65"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527338+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ba4535ab-cd44-4364-aab6-ae8d476d03b7",
        "line": "102",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8eb7992a154bfa90def71313befe4276ed31d938133087697f16f623ce420900",
        "deprecatedHashes": [
          "0eb700f964678eb214dc53f193cfb1b13d7120091ab68e4bf2b7db3bd0349085",
          "7a1189d939e80e016a704eba0b21dfeb156fd9fa8c7fc8cf61d4657221d20273"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527338+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eaac079f-5014-4c8a-9917-5fccf41e1548",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7f3fce142fd5547ebf9acca3ac70052978931e36d95803952443e9f48b1bb2d7",
        "deprecatedHashes": [
          "436f4723870a2fc70d4b29705b9ff37b72a61a482a6f73e5658142c0e6fd9087",
          "314810b3fc485d86ca692358fd0515c0cc52f3aed2fc98f080dde623b30c3f1b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527339+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "223f068a-0363-429b-9b1e-e5bef8fc19c2",
        "line": "44",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1537b802e7867eca3f9065d136ebb16f36776dff0bf8e3c1d46a474fa92c3a57",
        "deprecatedHashes": [
          "7a8cffbd7d173e4d2b2fcbc090887554641501ecdf4f35d58c08a68d3568f03e",
          "a4d3d3e40a86394e10413e4b7d6a2a8874bff8c56152dec38708d77ac229b691"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527339+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ac481160-71ed-45db-b8f4-68ad080c90aa",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ba827a5308437df6ffcbbd191143b589b61d4c051f009ebefe070399854bf5e8",
        "deprecatedHashes": [
          "7ade18b7afa1517bf99a1b6ecd9775edcd6240796df782922fdc28955581a676",
          "8f368695d2de203967d372a9f74bc93a4a82a4d66e9dfebeaf862d877219cc15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52734+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "86f67ab1-439c-42c9-966c-4d475901c785",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "386325ceee17c0de3f6da3c7bbe40bc7e1efd3f467d2565a057b82a89b2bb6a0",
        "deprecatedHashes": [
          "d868c6b164757c801d42d386fb2f97555273defd4ff03b82081f19eeb1f22538",
          "3291d1de1b7883d79a4cb7aeb723b42a13a0d155104f5109b30f81efce7158e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527341+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b18a298-f2ac-471d-8b67-62dfee3c2e2f",
        "line": "56",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_21.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "94d4c422aa5f1bb6048f140b05126cd54c25a9644b959f74e3b74b3f84c14b12",
        "deprecatedHashes": [
          "c8b6019228ca45a1aed201b7d15a50c14c684f0004888259187006741733fb17",
          "92245b63f5adef2c2aef6387a49756a7322a6e273f511bc080e1f09b57bde4e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527341+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a8230799-38e1-4d89-b9a0-8b170a95af06",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_21.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "7f23330329fbc62ebea38f9cf064cfcc08c4f0bf8c2fa81ec20132a911236c15",
        "deprecatedHashes": [
          "35797d954c76da926ffced5b034d94b728def60893740f1a99e83051af7364df",
          "fa6b7bf07504fa5048b9b88687ae5e688d2942fd168f7ded08bcd4b06e3ffeb8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527342+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "953ec735-9aec-4abd-96fc-c4d659f5fb8d",
        "line": "57",
        "column": "45",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_21.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "665eb4ae0b718953fd02aaf14c89fbbd4d96a42be044cbbd65c53ddbf61aca49",
        "deprecatedHashes": [
          "f4331cddc9296910a685b490546ed9dc31a0e3bb3f3605aa4c1db5918a9d5110",
          "4459006d33a162211957ed3b1d62b3a075eedfb5ae26527c7fe08cb429a65a1a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527342+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b854998-0eb2-4049-845d-9ad9ab94777f",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_53d.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "23ccd88c9feae6200549854e0c2d3fd06e3404e0e1b1ab0440459265f4112b7c",
        "deprecatedHashes": [
          "36e5eddc4a6c03dcb0705b186cdc4e8a7777203d9a5a81ef1b6f79e1e7bcacea",
          "45bb722084d2f6f9a125c4df57ad2a95bf1d834ad0a555253e50a1ebd681f62b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527343+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7bdefd2-1651-4689-8062-6216837a11b1",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "04fc06dfbbbac3eb18a7aeed6360edd83dc3f8396b9dd37774571cadde79010e",
        "deprecatedHashes": [
          "3e1123eae47fa9d7c0196c7851b2a39657458979466be2e2e5d05e08a3813e66",
          "7b2597a0c7ce304b0a4ff27b07badfb45cb7187e1195aca867d61a774675ca4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527344+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce4bb727-03c7-4f60-88c1-741705e9fcfc",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_81_bad.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7d9f85590196e2dec1119e0d34fce37ee68a81a82d5c8b69c3556192cff308be",
        "deprecatedHashes": [
          "1d055ae353c4b8d0a0beef29f92bc45179f08bcf3936e43dbb6a2626df2f1810",
          "d6144ada2670bb1d91afec39fc08d57477d8ce2ac3aae93475cd5fd5db716cdc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527344+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9fd1d874-542f-46a3-b29d-f01166941ec7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1c7826d5650880a6ff2b6bfdfc0fa870faed1ea31d3ad1a9afb64f81620f4221",
        "deprecatedHashes": [
          "77e8b97aa02f7c8f6f689c4a09ca4aae94c89e0cc2712c135b3d8922ff95029e",
          "a70d3868ec62a16327820ddb9f43990f0d0a27519f8658519a796e88dca526f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527345+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d33a6e18-604d-4c30-a7af-b2e089704a5e",
        "line": "56",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_21.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b5a6e66a767c6e5f0d03ad85dd1ea29b28a5b91935484d9d02cf454249c943af",
        "deprecatedHashes": [
          "81ec131a26ab1b9f7acf3ad095a2cfe8e8b17eb1d96cc804e9c5173d63f61137",
          "6bd39da780be25ef8ae7c874848fa764c1de654b2e51ba3e52023fe97da1111e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527345+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ae86acd2-cbdd-426a-a598-859937696153",
        "line": "57",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_21.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "65150b8aa724cd74dd89e3ddaecf436f98c9e218c2a63bd3b29ed9425a2c77de",
        "deprecatedHashes": [
          "94705e00e60da29002997cd1e5eab021d20dfa6c6041f65ab3a299344dc8e352",
          "9edb59783b9daebdf1219ec253efe00f41ec32ab1e0efc2b56f63288c6eb8337"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527347+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2bd7e5cd-c5c4-47f2-8713-11ab5fb439cd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1e91532e5332864da8ff9f23ebb3b8d62bc943374f7fd42a36e2ce50a3da1546",
        "deprecatedHashes": [
          "231396721dc26eb5c560a1e897a9cadf8187b0bf64094cb19df11a14d6f51126",
          "a9db78595c8b6df42d0d99938c5c105c31c17d8967c9f7b018bdc767247937d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527347+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd1ffc56-fd51-4898-80fc-e1969fd253bc",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "817b201963b37cedaf5e3b8dfb7f33742dd6e3ff8e111e167852a9f8cdae1925",
        "deprecatedHashes": [
          "e7c4da7690c2b66decc726241020cde09f17cbd34aff77d6be807fa3c13e4b9a",
          "df1262710eb94c572e1b36cf1588808a1ce0c2daf1716cb45f8cb783660494c1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527348+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a06fef27-73d3-47b1-b5fe-0e12dd99cdb6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3c5f57f867cd9a4fceceeb5511a4bc87556947cd635489160f297ae2be4349ad",
        "deprecatedHashes": [
          "a666ea134c473737c4b3576e89be67e569c6abf78726b229525180702fbfc38e",
          "1cf5567e338f1cc2ded227e830c9364ba4b7aad0c0eebfe13f6c2d19d6de42c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527348+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "861d1164-4392-494a-b957-4ee236abad7f",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ead55c7f293961f20ff13494c79a2e158184207f749aaf6c7927f6a1e3efbdbd",
        "deprecatedHashes": [
          "869310e677c881497998ed9a18842a285ea5a7f29f79ef106758b572bcd0c635",
          "c485bf9fd01830429c0e0c016199ca955a45869395332ac474874aefa63a6c03"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527349+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "400d4157-911e-438c-b135-ce79701ea9aa",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "09d47bc2923a7f72e9bb2c7ba699667914c82d4961807eb929cda1676222f7c5",
        "deprecatedHashes": [
          "a057767cebccd36b229db945dec4356742c0cec2f8a546db949fa0fa12a4d4c2",
          "79c2515218fad72be0d60de55d5513fb96b78c070ee02ff1be4a64a0f4112ee2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527349+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d499aff-82fa-42a6-b827-3806607a4ac8",
        "line": "46",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e9027baa88fe27782d294b8122894a99e809485ed660e2c18939284606343997",
        "deprecatedHashes": [
          "e1278171f6a5fac3557a7e5152e6a0e16d39a0bdf360fcca0187cdc46f4d1fad",
          "19cb7da7e3a51ede55e4c84631bed751f6ba7ff965ce4c306166611b24eb79bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527351+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "109c3e27-eb13-4006-b28e-ab646d61d700",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9226e1219217a8886f1dd845edc4b4f144637c858f84015ca7434b14996411e",
        "deprecatedHashes": [
          "393aa1d92edb39a90b9074223d1ee504d125a842b2d5010bdcc46a2e513018b6",
          "0279c2d0527603ff1c0a161c428ab81249f4f694fd02be949908a1c93d2f3567"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527351+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ea4bd67c-ea9a-4c4e-923a-77d15ea1719a",
        "line": "131",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8ba647a2c8b0fbb6f35090c55f1dbd413da8ab719c7d59d3abf6a8b1b4edc5f7",
        "deprecatedHashes": [
          "1a4f4091be20f4bd006dfb7694ee63798453bf92324202260f1d537fc258d843",
          "7e786b7fa53d731417c2308bf297aabcbdcfd5c4e17d0251903c29f97f38c182"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527352+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dde5968c-54a9-45bb-a991-3f5addc31883",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "095cbadb7f84399f3234d22eeccf9b52c3f8609df721543b1b1a3b6f1414c7b4",
        "deprecatedHashes": [
          "dae3d42d16cb5fd2796c727536065903b51f70ad92c8836af6dc7421a914a985",
          "3778df02b75cec041f5cb443aee38ce344c40a004f0b6a23f8e83e0f977c6ac0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527352+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "93025750-85c5-4b1d-ad5f-2a4f4f46dded",
        "line": "107",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ce89a92960362d5eb22be21402d16be5002ace65a23b2625ef33cbdb33fabbde",
        "deprecatedHashes": [
          "43a60a9d90ab799ca08a95f8aacbd4bc65370209785010dfd2e91a1053dbcf15",
          "c9963536938dd281f43126d611fec95601c373a53b21fcea6962f1823709b601"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527353+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d77593f8-bbc5-4035-84f9-14e36992cbc4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f9b58b84e7c6bb8fd9f7a922ce84301c48c6777e6af214d6598a64dc799361e4",
        "deprecatedHashes": [
          "05a43250a0aedc5336e1f25939a071d9ef44f2ae727ed22bb76e06eeed5125d7",
          "48d4ff16f85f146a70ed22ed4b068cff75536c9adc4b7021619c123e6a12d0a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527353+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d29175cf-53f0-4fa9-810a-467ccd3b3db3",
        "line": "47",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_41.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "491fc4fb4ab8be31438d2952c0573d632f4b674043f9e5e5cdae82d83c20d29e",
        "deprecatedHashes": [
          "af9c2b6c1b6f3ed62e7f917704f5e963de8aa8d078f2b548181adf63ff738d66",
          "c534d421702cd9697eba25d4762c11d0279a1e6feae4006ba2a95a30a8ddcca8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527354+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2d17d8b6-1a46-4bbe-917c-577917adcd7d",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_41.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a7409db1c3d8fc929bb25329c8e0fa044b720cf907405f53ba758bd138f26c05",
        "deprecatedHashes": [
          "6655aee495817ba69ecc464c95c8f8f1b1425003cedd00eaabbe9a011370074e",
          "08d913edac1a0abab2e69c756089d12771c7bfa27dc18c72ec8a05fa893d2017"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527355+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec6af077-e94e-4157-8d1c-c9a740dce265",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "74697921339fd91c5d8437efb11bddbf6feebeda006c17ab63fb7562a81d63f1",
        "deprecatedHashes": [
          "8434ff3d4d1580312248a93ec733bf331a055c42b4e674cbf8c3f889bc97a37a",
          "4cfee8b32c68b61e393beae43afbe8e499bc5b5137d8521b1a5605ebcdae0b35"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527356+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a1dd15e9-221c-44c2-9c09-a3da7ec0c762",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_11.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "259d1ecb18ddd4360b9d4ff4436b2200015d239c4dd170b453a1968926131672",
        "deprecatedHashes": [
          "d93fbcb7775c848f00806a8c719ab22961dff16a872e28a1faeb9d9458c8d802",
          "f0e3d7be27d7da34c4a8f7d26eb4fb1c50add30a80ae96e8fe7e4b81e370d485"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527356+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "beef973c-dcd5-49a3-ae36-6a2e38b36a31",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_11.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "51e3571e13eebe2a89d1625e779ba2646ce3b23f618a2c118d4420bae4d9f040",
        "deprecatedHashes": [
          "1a3159bc5d9c2989053d3daa991e54c209efe2442f069fa799b9afb3745c7177",
          "f7d53d62b840497ea9eb317e5bddf02e4d42b1861382226a2dfd3783b75bc8d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527357+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d2fbbca0-93d3-4936-bdf2-2312ea5610fe",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a0f5bbc0f7460bba73ef096beae505c2e747c2dde410793054d7d0f467d43b01",
        "deprecatedHashes": [
          "cc89f30df35ac4b7c7366cd4bfa0805769f55f6a76a8bfd1da16de10255d710d",
          "2fc31bd1187bc5f2b01840068a513d33ac8ee4cd339295c47060d26eb4f114c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527358+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "276cff45-7531-4be4-9f19-307a03fed900",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9c6a16fd8caca2e7e5050ecee32d673ac1cd7d7926edc4ef117d333d597adec3",
        "deprecatedHashes": [
          "01d03ea047aa9b476c0540d2b95b6b478ab1d9568c41d760aea49bb185afd4bf",
          "d22e0db64fd9fcac607409220889113ae24ab93694fe6719fc391caa784ac0db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527359+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c24d8b0e-b018-4bfd-8caf-e62a4f99e3af",
        "line": "95",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "db5087e889baeebbd2e02a2b3d3107f95d400d6cd94a31f927140b90d4dc3540",
        "deprecatedHashes": [
          "abb0f4aa2b37f90945d2fce23fb4d105e93fb8318a19d8bf9f318445aa39e2fc",
          "da39120f966cd1602129614d52a39dacb1d5d4122609c692e16db0ab4dfb35fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527359+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "33c23a0c-44ad-444d-b424-2a75f9b46091",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "035ed776b96b163ce01b9e7460af4b8b749c30e132cf9a2dc4bc9ebeb44ce44e",
        "deprecatedHashes": [
          "d135999fadcf0aa4306144b74aa67b216a5f1590cb54712f05741bfbb97167ba",
          "347f07ce9ae52f60d8bb4191f2c4f0ae00c18b5e1083906b3e3830b04470cf4c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52736+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5b52c40b-1772-461f-9ea8-7a31bf8cc091",
        "line": "58",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_17.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "81e650e53888835eaa137afce88f443d7ce55129074a5344a75eeef58509486f",
        "deprecatedHashes": [
          "9411367b08335102a157a39ab6e30b2f94ddcaf52c5766c62a414a27a651cfa0",
          "0216878e16774d3133336ed8268625fb6159c2cbd1c86f9f8b3c77edc813ee01"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52736+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "45a2f88a-4c3a-4630-b9e7-b2b1d0a0b239",
        "line": "59",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_17.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ab7771012ec80baa429e1eaae8b54ae0573d584df1b443415a1ea8cfc98c62fc",
        "deprecatedHashes": [
          "51e432349308f1dd24eee3ae20ece2dc2860c7571851946d286d1b603cd6b031",
          "2b8211cbc437794ae7c53b58a68a57b6e029a0ef197689eb5f5669173cde0386"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527362+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef05f568-dd11-4392-9fdd-ff84c44e6a9f",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_54e.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2e8ceb67a3b7fed0f635af32148d785c73e4c8684882e53ff3dae12bd3e0188c",
        "deprecatedHashes": [
          "b21c71cc71aa2ab7bc548ac6679455abd44350a5d3e48e7bb95d0a728f7344ba",
          "8c8671ae9335e16c064db1d17e2e455c5f2b3c2b96a2981e8eaf0d7747493d09"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527362+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "415ffe14-4c3d-49e5-b0f2-ab851ea270ff",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1fdc3929973137a601025244e25f5792e87b6dd84d292ffd464705352d021b1a",
        "deprecatedHashes": [
          "fd45c36b9719fae499627ab7c9133ec8d858da14aceca88f61507717e07d3bf1",
          "f5ec2913ca9aa1a317ea218d48acf5722c1d610d3a5969096e58871ed71b6f20"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527363+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce5252eb-8a58-4f3e-9d24-6f3dc0e231ef",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f13cfde1e2087d6da16e3c81a72211f8dd43bf4ada83cadde2409a924b03626c",
        "deprecatedHashes": [
          "3cbe248d752a2c86d768b0a270e8cda9c3657d3ca355649390abb4191434e280",
          "d2115cdb9bd113a6bb9b8fe31304076d7f44261875f353c4b2347ecc96c9ace7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527364+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "486cb1d4-a5eb-4785-8a79-4c934c85c848",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bd7437b9c6b33dbdde3a77c53e13be3b09a190c6a60f79f2bfe56c0dbb15f2ec",
        "deprecatedHashes": [
          "83b0a0064aeacc9e5f26fa85b05afb0d793bfe051ca0b071515aca2053b04ba7",
          "2a24e54165505ef151783264bf66f495f1062990c52de2965f8d67285f4a2897"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527364+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "43e2be0f-d6d1-4aa8-b046-bb1972068243",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "dd7317c9d411a383a050a2eba7ca415ce8efcd2498c8bf6eb0217a723595c28c",
        "deprecatedHashes": [
          "ab5ea6c13468c0da17e1ea3870c1e6ca730f949150432d08917a6ec497e8cb3e",
          "00e1e8f74609280ca0448a9c48c54e1713d0daf7b81e2b8c24bd7f6a65bd3e7a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527365+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0178d7fc-2b30-44ad-a41f-5a26fd3fce01",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0215a9fb2907e17622fb0221be0784ec4b896ad2538b7eb8f1cf4aca22650be9",
        "deprecatedHashes": [
          "6b0258b8cea6005b9643357400e32adfba32aef117181d19283c469866b42e46",
          "c4b9d40f93908757f961529108b8deccb8d84588f08c1a66c7fe4fd183a570b3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527365+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c930eec3-6b2c-4029-812b-d6971f5ff92d",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_10.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b6527e1ba09da1a528fe874e8f084f6ac73439cec197266865339c0dfa06914e",
        "deprecatedHashes": [
          "8f14d67ae076eadff73d489aa87c1bb6147d465634f2a081b3e01d2534c46602",
          "c1c7ee8f411745ee8419bdb0baf539c07f67f9339a4eb2630418eef93adaf52d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527366+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95c85e24-ca1f-4902-b199-f8ec93bf6ebe",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_10.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "93d522d15993e3b373cfe517e9e6494f407f6b8051e869e13f51c553d485e276",
        "deprecatedHashes": [
          "6d1d3dbcd105ffa443a987657dfe4d1b9f1aa62c430874fc41f467d4c1e08797",
          "fbaaff9930b8abbbebd3e06aa885f46fcb19612c1a1fe89eaa2435680f8267cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527366+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ae50fda5-6e2e-4db4-ae28-b393f23b3504",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_10.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "3194af8f6be8557eac5f0a07ad19adce22a4e3c779764fc611fcef2ce42a474f",
        "deprecatedHashes": [
          "080ebacb9e47d0f1206536bd351ed18093feb2a0e8724dc2db67f77567a180fd",
          "f71348e2bbc58ac7b8fc80c80fa93adf234349a38a576d8bb9ee0865fa0c3dda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527367+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ba4591c3-3c91-4d4b-ad35-09cfa961f3f6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "30decbe50419cf345b6add5af8cba2f6fee9b419ae19bc1c55cd39c26929f749",
        "deprecatedHashes": [
          "0a0a6a73a0037f479b3f796fc6587f0f2d918821e7a64b32984b54d9ecc082e9",
          "2821afadba5d93e8f0d3113537fb29ced578510ab998c572af4b852bba529b79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527368+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a713bba-c85f-41fb-9d66-59e420024060",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a07087290d5a210de0f9800894ffdc6c34da9aa5809bdc076f7810b481f7f74d",
        "deprecatedHashes": [
          "11fdfec96b20b02b9512ebcf927a8050eec156b124317c320a3086e9146a7196",
          "3039f5eb65edbaf405a8f5d5a321b2d07cc2bc34befa472f1aa46155f0750da8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527368+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23990383-b208-4f21-8b83-1a834481d28d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f8a66f8d1b4b11c7df6503aedb7783232defce59f544ca108eed8b13b4ce7926",
        "deprecatedHashes": [
          "057e5e0a131ed13b12d8f2ad181adc8757c73c397e9d856383e10d08bda4fdae",
          "f925ec14ec693f6bcae67daab9def4ccb456bc309de7eb8f203449c9189a9a89"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52737+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1964ff6b-2373-42a1-8561-f0d587b99366",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3673ce0d29d9a7a9045282a4e06d3348067603e70617a81bfe311ba02a463609",
        "deprecatedHashes": [
          "4d5d12f33de87d798c32fb1804f1a26e41a7dcd49a797202febf2b056c57075c",
          "aedfa2dbae0996cb75ced30a2ff929b8b3199c27e102073780487f2c6e71fff0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527371+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "683a4769-23bd-4c4a-b728-c51da638e3f7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2ef4c81aca0e4e537e8c8cc8ec92869a32f24426e6bdea520060fbb920c446e8",
        "deprecatedHashes": [
          "c8a6140dc51497a7884ca373403f14f4049605b7b8e4cccb01d1b4df29fb3df5",
          "9cf1329171665e4e27d53ba8d515305268cb78a0b8c79f065c4d93ffe11a535c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527372+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c01220d3-3cf7-49c1-8a7e-49c4205f40cc",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "84dda7ffb8e8adb641e3b1695b270c48403747fb2b9d6e3bb816d6aaeb343afd",
        "deprecatedHashes": [
          "3944e8b06ee7139e6750891d4e205d99655c852cc8acf379d05c3db345d71fae",
          "05027488c59a878cb219f3f237e8ea922810af30972eee11a211420614a3c59c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527372+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d06204a-b466-4c61-8bc3-90c5ba80a628",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1790e98940b6e3ca01278278bdf8a3e1d9f85b026dc75a5e59ad4af990ba6dcb",
        "deprecatedHashes": [
          "c872dc8b3e3793c7ec3c15e8c5cc4bfd1ab495575188c3277f1e091f71284b95",
          "0b9faa84ee5bab2798d53bad19ca4e476b15761a8eb62934c4e746cd14cd2c53"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527373+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "01c28777-199c-487e-aebb-a0e91e4a3a68",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_13.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d86bacfe57cafa38f0369f31c671a94ee2274a53abdba1db3142f223badb50fc",
        "deprecatedHashes": [
          "c9138f13163ed115d3afffff08806c3e30bc9a1b97048c1b3b159cdbaa8dd661",
          "547a6b2da790d7802382e70e4285917562d6d131afc1a169036f191db98ed370"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527373+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "33cc8bff-b817-4bcc-85b5-fe8f65ab7157",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_13.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "53df04308839e2163f2951fb33452f3134c4f8b4912f69e9585f7d65ddc29576",
        "deprecatedHashes": [
          "9a3938fe18884d1ac5e5e9b2640e5b93ccdbb5731ea9eb069a4593a6b72e94dd",
          "ecfdf8ccdd7e9ee55449129a089dce58f5c5bf6afe1333840dc4722f73770cc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527374+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4fa47c36-a721-4d6f-a13a-628f810b1e05",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_54e.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7cde30c821ba81e358a041a478ea23eb96eb51517177975321dbe6b0c5f97b1a",
        "deprecatedHashes": [
          "ab26c8a512d8f5b3aa9b4c6ec6eb7e681e0788a44f335d1f6e85c19bcb3b1cc4",
          "d642ff28baa67602ab3590295b10181ac2b67442f3b247dfb71aa71f7669a79f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527376+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "337afebf-b487-418d-9015-04b7eeda27bd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0edd93e3f4cf8c5539edd88fe8e08136daa28fda0e8aae97d507d27529ac0c64",
        "deprecatedHashes": [
          "5382a0c3a2abd00519df472e16201b959e3888b6b6f6bd272b8df32c5a615e6e",
          "40a36ffe073efaacd676166c67f2d9d5f8c221082c5734f0b877fb83ea793f4b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527376+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "163072a3-45ef-4ccb-89c9-7f2ca4a1b246",
        "line": "122",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "037ead39ae1855b736e1d310f786c74871f31511915fd96331912a9a31b346d7",
        "deprecatedHashes": [
          "852a7ed239d115e8a1cf5594e01ea53aa24d508f8c9a81ce7d17c505d166099c",
          "c60e333f00cfb14920e9b060605586ccd8a825ef759451b4703ee4118a7db10a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527377+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26c3c86a-f6bb-49e8-9dcd-4a52e4f2f4d8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b6de6772631bc5da27c608713eca4f35dd79d08de2edf13651a039d62bbc9191",
        "deprecatedHashes": [
          "8c10e2fa21061c53fe674fb2f5c63b330a32c9a534b709476f92e6778b55b410",
          "76b6674a47909c8bb5d184c2e27e530580daf7095ea9ed2086434abca6758c2b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527377+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "34e7bdb4-8073-483d-9871-afb6fa7c3cc6",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_09.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0b881b74bebae580809dc9ea0bdd2a61da681905ed85d30f43f1dd629f8a3110",
        "deprecatedHashes": [
          "ccd69cda35eb300c3a74671c25c64deffc0f95e6db6ea7cf19223d20c46ee9b6",
          "8da7521446a5ed099a859aca642268343cfa75535a50b922e29c2531e1fd17fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527378+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4b10fe3c-1229-4aa7-99dc-75dcf624407a",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_68b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2419526e213ecb24e31dd2858023c8e10a511e7059d4f1dacbf31b7be260586a",
        "deprecatedHashes": [
          "96757a801911d1512b6163f2e7edd64118793ce8d79eebd7614bd96da38bce6a",
          "e20ef43b914b95cf98c1bebb10aa24fc0040918524c56c240633d46d8557d663"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527379+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f024a942-9ed9-40d1-9c16-f9b93d50bdf7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3cce2eec64fcf34ce1f5de932211c0611ee97125f4cc950c4314b393d3d63db8",
        "deprecatedHashes": [
          "5699739263805dc801a0d8e8c48a18f95cafe785641d159235b09702e4f212ff",
          "9cb25da4b29199e15060be17ac2e8fa7ce5c64ce3da835e9b0ac0a8ffeefd39f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52738+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "04862372-0ebc-4c8d-96a4-9208e5c407a8",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1069e836605fdff8e0777ec27cbd4f5575a829b9eb88694fc9ce4957c8c7d26f",
        "deprecatedHashes": [
          "93f37aa1a2ce0b6bcb5e5c1ebe5fa06021800c4490df1e979e00ab6e4b1662fb",
          "cedfc944aaf8ee5b02a18e1b2cc9286a15bf5bf34af0e38739403d4c36306655"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527381+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a2f7761-f649-47a8-99d4-274bc06eef4c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "69ee76c53f058b8100d126024fe0a513021b789aa48423b0545a8525d29a16b2",
        "deprecatedHashes": [
          "bf12931861c3ad57f79da1f416ffdb4c5191d64d5c1a4eb86d9cbe327bc6c819",
          "c68aab399f1a102260d55966a3d1f08992e58521fa37b6ed9c85190c1ae3b53c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527382+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "19b80b40-2769-413b-80d3-32fa42c0e0dd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ef01b3440f6eb5b4d971900e5b7e044409f01b0ebd664c67287bbbb3af0f9d34",
        "deprecatedHashes": [
          "9e2393fa6790d05eb6274b7103a0a240dddef3fbec7454572985393eba0398a7",
          "cc774209747a672bc82d1fc0cf5dfbbbd4606fb053632776dbd71044e2fcb84d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527383+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7efe7841-584d-4016-b54e-821605abc1d3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cce1427ee9693e29cdba5f3f67da9ae742c9929c0681f94a309457905d377128",
        "deprecatedHashes": [
          "2d37adde35ccd3071c10163dbbc8855ddd45edff8a84773d3f6426d273edec54",
          "b0f5786cd98d9520964e910b8d4f61d3c24a0ad53d05f67132ae8c8db062ea84"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527383+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "138afee7-dd0b-4b5e-a258-6157321706a2",
        "line": "121",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_17.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e5d37851beb7d82a2f1329341e905dc05379329b8bfc9707e615ba88410baf67",
        "deprecatedHashes": [
          "23aef8b8a94d4647ea919c104e49799f11646bbc080d88b31df8cb236080d7b7",
          "d649019f3f4baaab6f6b744d789ccac6e2a12a97f6b1cf10e7fdf8570206771b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527384+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4ee23ebd-7e3b-4b79-830f-bfe1d81987d3",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_17.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c66d6cd02fc815d27556b3c1a55590c2078a8c5579946a75476022e8d381e497",
        "deprecatedHashes": [
          "9f146832fc2100fcfb27db7f004ff744db3740e8d3a8e05064bac32b8eaaa69c",
          "7da24e217a08b4a77d6cedfb990040f9deb85a2af6cb029aed86741338a16b24"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527385+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dc872c64-4f19-4663-a068-4e49e8c77b09",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f4a6b03eb5106398a255a6eb83d9d79172f9c266c1ce6a02bd27a6e06f73292a",
        "deprecatedHashes": [
          "be5b9226cecea1da1cd132dc78cdc0c9a54b8d6543616766026e890658ed0500",
          "c30c91d2286e4ac583cae0993ee54e281446271b9662e185f4aca2e4a7c79efb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527385+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32dfc5f6-9c04-401d-8be7-67e1135bd7d8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9b00f3008d39ec0f4feb55425476e085c73fbefbf07c4c6b968cca8786b1ef0f",
        "deprecatedHashes": [
          "f3db80104a74eca05193932aceb84e8ffbd30eb00f82e8fc73855d743d69bd3c",
          "14c748ebb8cd961059e8e9126b5ed4ea6957b2584568f8165768b913696a4274"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527386+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c00014aa-bbf7-482c-b187-d829fe2b3a42",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e41c1cb045655355cc6b66af91f9bc726d9311370e3520121dca0954c7f353e9",
        "deprecatedHashes": [
          "2f9f878fa7203aa16132f4fa96e0afb57a7d993fbc592fa02097819984589741",
          "f6d60d095ed0523cdc48f9ce5fa3a1bea8c8b5928bed31fff95110cbd1b572bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527387+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "30d01db4-bc82-4d1a-a192-305d5cf7247d",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_66b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "baf091ba764421a370dbfe418350ec2445ef91544ad9d6ea40fcd4192e52f714",
        "deprecatedHashes": [
          "7a8d6c62b4a514441a12c0db89c81113c2b68e33870371de8ae5a1ce779c6816",
          "b3607f17de46c5d3943631059077d154a04057583fa32b2786982512807eda0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527387+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e913424-7991-490d-8867-80b6e1a80700",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c8c600b3f7cac0da8b3f817459c83071530a5daa68be76e6e39dbacf0e88bf5a",
        "deprecatedHashes": [
          "3d7e72778a6f1bac34e2531e4b879b95410a2c20306c62ca4a1ce9560cf5a553",
          "d9bcab1a835404f188111e95ec5e588a861a3d1c92c6ee6cbc5bed38fb55f6d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527388+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "703666b1-f25a-4cee-834e-3d585a7307c5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ad6ebce37378d332b2f1df559f221c2b63a0aa8c2a62ba2beecc2384d9f41111",
        "deprecatedHashes": [
          "228d223b93ca7a94b5152b4cb72a9dc85d9598bddc04472c194a4e45efbcd548",
          "40cc23af6ff21d8f1a2c63a4dc5ef8d97a33cf4dce7a1ef1cd957c0c9f05ca68"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527389+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a33ccb92-d133-4f96-a0d5-5a5c5b9bf4f7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "07d53c985d2181c06d071a084fbc59093c20b66d97e150e4d3cdb60cafd6aea0",
        "deprecatedHashes": [
          "d6ec478a616210f032a7ecf17d12a56c63ab3b94d710d4af9216acfc35b2ebf2",
          "cf23263b47402c2704b8a47c6a153ad7e2ea43f30095adabd8f459d987f2de59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52739+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a6e0e679-b8c2-4d5b-b277-b0ba419d6e28",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_13.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "81a2235312fa47bca14a7f64dd4ad8a1857dd558e36577890d43ef25892cf5be",
        "deprecatedHashes": [
          "ee157a0e08718ce51dd19ff93fc740820651b7dbc7317508a66db4a9e2eef353",
          "415f6e18f42f308e06b47a9e8fbfb65dce2eccdf427e9be41043cb90b501d429"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52739+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "24644e7e-458e-46e9-83a8-f07f648a2168",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f380bc578d81342a71d8bdba9241d39cd1d63b160106f5a22aff5ab056b18eb6",
        "deprecatedHashes": [
          "e94ac0c824dac76c6ceb33125af74c62c6679d25be204c73579b617bd182b20a",
          "4421532e38f9f3775725b7df377852bc5bb191be62cbbd7636b669a2df1ff859"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527391+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9946adf5-f236-4009-8d30-50622e8c6d4e",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_14.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9dde69a214ef02ccf58e6b3d25cc7c23750d7d38b9e6f9ac1d9b1f8456b0d207",
        "deprecatedHashes": [
          "aa5f9255642f4a2f987495f2a5f7e19e9398b4a383351e07bda751935d0cf3dc",
          "bb1e53772a8182e2caf5c03ccb016698bce9b8d4c183b80ad5afdcc8914de41c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527392+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "93f5d1df-2f30-4d9f-8cee-6cfd53d94a26",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_14.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e720cf3063b0dd50f15acf3e8c747c22da71e5cc450f7cb70c15eb8f2ceb8ff8",
        "deprecatedHashes": [
          "18ff68d3eaf9c48e7300019e7c220defed24daa774498452bbc498283a31eb7a",
          "80b35ee7367a5c2cf477203f4aa6ef3652196b673b8479930468305dc6426f1f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527393+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a077b1b-0a0e-47e3-94f7-7413f0d3b87b",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6818f32e9c8305af34d99c65d7253155ded428bf3486771fa9d7c7534c7bf96e",
        "deprecatedHashes": [
          "28e736a88be37713c9e5804150b91b33c5be88694ca0c0b75310336d153ac411",
          "37572d9cd26d57f73aa0bc8fa7906c0d3587accee94e40b29f2051597b59b5e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527394+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8471662d-deee-483c-95b1-2fe7e6821ce6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5c25b3dbb87fed5b960d5b6230771384ea34eb5b552e5bc8bca335a4632ad942",
        "deprecatedHashes": [
          "d60da97411d555d9b9f572a80cffca642bd26a9309a46f8e8c26ef87035cf8c7",
          "6b22970912ae3822240bfe39340b2ad4ec8fc28799276ca14597f50e620c31ad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527394+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "82283e25-180f-48da-9be7-4217d3d36602",
        "line": "131",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_04.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b95308c1e01ec215c863ee38766165d553a62a92f6f8499a7e9663789245d9b9",
        "deprecatedHashes": [
          "670ab9067cf38cf3a6879de25076207676a0acbb7248143e3389c5390effd7d9",
          "1c1425430afbe499c342524b65fda3d1cbd4857b982efe18645bfb5f6f02773f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527395+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "76fdf8d4-1071-4924-9e19-4718533fceab",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2b6b3f581596bf34c275587073be5ffe3b80880e0d9a1ed81c174982496d03aa",
        "deprecatedHashes": [
          "f42aeeca31aa9e468e88d9697837d2babba9ecda060d852c858fc12b62e9bab5",
          "99611e35c7195ec78b22415e10ac8be73cf8bc5ea25c017c13c4ea7f647543d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527396+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25b93e8e-276a-42f2-857f-ecb44013f1eb",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_68b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2ca00176f373b3f471dd2344bb00428f21cf62814ac8e8b805231d85f78b19d9",
        "deprecatedHashes": [
          "0aed4922d08ce21e6596ec9c1e30ee30eeeeed271877a8b32deaa212296d2bca",
          "72b7d4f1c42358561265653665aaabcdd0e49a20bb875a114bf7be622c6265a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527396+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d2153c3-43fe-481e-ae92-790dd57c25cb",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_68b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "45d1bc99fe413134550dfbc67156808ef5090fcc263ae644fc0b29bb1ee56067",
        "deprecatedHashes": [
          "c8d0ed595570c7df20a070c9a6a8226b5fc0c106928983c34a7a7e5ca23927c0",
          "2a92aedca20ee86c9c79d5c4b1c7ac3df91d7cfc5dd457b8a641ee54dc79dcce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527397+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "03f04d7d-1d4f-4e66-8b45-a3577ba02b95",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "07c428508329e16fbe6886698f46bf22e0ebe8caa223984c4283fef340441263",
        "deprecatedHashes": [
          "7156a4beedff301b166090d2f9e722d64a2d4dd4efbb09a9433b674a27197d24",
          "642ddb5fd70e6b932c5192ec40e250be47e5d0de1a1102a15267dbf10bd2a8fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527398+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "29dd0070-404f-44fa-826f-694ac0b3d54c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5d2aafe2d419f25edcbcc66a5401d88d9b8016c07860a5be6edee032984a2bed",
        "deprecatedHashes": [
          "9a22796b9ecac597841839463e02b50a47594118e6d0a4a8054572ecc819f96c",
          "17536265bd33e6b10b3ae72454a5db2c325e7143181823a90e0dfd438bf8f663"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527399+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "45a870e5-d4f9-44d0-8d26-de4f75df0bd3",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8c62445e5c2530d07ae8381e964506c7d2fbf16b9d0be13e3fe2cfacb0cf6eb5",
        "deprecatedHashes": [
          "d9c239ddbe259773264721a042cbd856c90f86713e8755bcc043e1780ccb4e0e",
          "9a0427af2eb04c501c5fedb0c68af09a4749b1a78cfd0e752611cbb02e5566be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5274+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0e3fa7b8-ed55-41c5-a976-5c61c5677d6a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9420bf94b0d76800d227e56eec3d7503e14d75e3b19f6d8fdb9ff74c6ea1cd1",
        "deprecatedHashes": [
          "18a8ced0e389a642e4ee75f02c351863ebbc912e0b77d7df98366a586d9f861b",
          "8f29172d5cd7421200ac0e3c321716f44c343b4aaea8bb15c63050c695be5a25"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527401+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23ef6986-1efe-4cee-a0c7-5f7d3bbc6fb9",
        "line": "114",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "41e63054139de735125b8755e6a2168a1a6fd1536465b704d37dbf6ed002cbf1",
        "deprecatedHashes": [
          "8af884fbf0904921dd01ab24d477e008f52793234d113dd6983422a96468e304",
          "300945ada357c2b648b66a049ec66f3d887475787e57fde5bfb8bcf440c4ef98"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527401+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5f1cdded-22c7-44ef-8878-2e4e01ab300b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1c9ad90a99112c7c43e4bef0177a3f20cf5b4a175a00ab65f6f57dd3c5f0e59e",
        "deprecatedHashes": [
          "e76ef874f4d535996a059606cf1c46537ad92fa5c322838652b18f8ca1bfe8f3",
          "4d9b9a5ebce3841bbff7ce57e30be6c64f724d2f8036be921e8c95f841738edb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527402+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5ddde99d-6af3-4914-a655-5e2df46e012b",
        "line": "113",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a2470f8c0cc0414fe0adba5fa28630f09f7a8c14b52234afecd57a62fb7f13b2",
        "deprecatedHashes": [
          "44caf084778870da8358b9c66a75649e24da4fb24e55ea2aac8631a19cb57b16",
          "94e3280ce60d8ad2e27c36b258cdd11936a3afdc0e9270818c7f56cdb5f6ca14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527403+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4bca45a3-3fb4-496b-b467-d78bf13c9115",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "66bd2265673898028631ab41c43124c824f23b0399c49f5ccd0010cf22a9ff7d",
        "deprecatedHashes": [
          "d55aedfdb302fa65e210302fdb3cdcaedbb6ba6504c6040dc6690fc5b7b41c77",
          "81881cc90aa6f522f51383194498cbf7cf83a6f58c4618f85ee85e88b10e93de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527404+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4a989f4-3526-4a04-9cce-bee2b9522294",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bd15b101d1c12950fda198ce5a2416451f2d84f96cdca03ad32b9b774278a520",
        "deprecatedHashes": [
          "f8f12576662ca19c3887abc8eae602f8ee704aa2e7a8dba4cdcd97841bb5d114",
          "eb3994d7a8bda2d52344500ef3e6d3c6c6f922d64ca807ddb522256b95fe6c74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527404+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "65c5c67e-e51d-434e-8fa4-7371e79cfbf0",
        "line": "123",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "274116da79b2c6cbb0ae52e531b82f5c087abca8e305fff9b4edd38b6b663849",
        "deprecatedHashes": [
          "eb90b8bd69fca2bbf4e45350fc420480fa883204db34631c7aa8927e815a84d9",
          "7865b7921d6f0b86063e49c93df9a23a62ee8a042641b9e2829cbd0b9a9780d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527405+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd4639b9-b2af-4ccb-9f55-ee3f7906b008",
        "line": "54",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_75b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9dd1101f896cdbdc935146cad129048a43b82431a7eb0329c8425338ee2e1214",
        "deprecatedHashes": [
          "d7612a516eb1d53fa47bcf2f62bbe8bbcf5d0e382a118919fca664b27ad47139",
          "99b7c4e16763118dcb9536f7b99aa046b57af84a741f24eb65b48b29ac4f983a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527405+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ffe7225d-43a2-44be-b42b-9a08b0a81840",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_75b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0a88eaa4146fa29cd41d70b05e1b7c3911b86d73f17f3aaa7e52b861d2fa4732",
        "deprecatedHashes": [
          "c1750f4c2d0384f671d8aad05d03504eb694c0b32584a90f5aca574d4165d260",
          "5db321aaae3fd7edbe7f76a14d45caa8757a2892b00a95e86718d9059e38fce3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527406+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f7d11475-770c-4f1c-a133-0026f074169f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "de8a62e3409264d14287938771d63b586eb758881e8e74b3ee48f9d557d9a610",
        "deprecatedHashes": [
          "65dce0b77602d14dbae5dd2e21157198b8aa69552d79b0fe1f393314b7bcee62",
          "4b6edae9ab51d5ea5618a33cf0ee3c1d7d438481e896a76d9073b2334dfb18c9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527407+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a65edf8a-0801-4877-8983-0652c30504c5",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_09.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f0620103a00211cd83a9fe0bdd581ce26d2ce1bbe2101f6e9f88c365ebb8a4d3",
        "deprecatedHashes": [
          "9640f65b41a4ebf40bddddb4f2125b7b769d1a590bcc82ad386b121f244e0be9",
          "e14fa624c4aa886289ccf5ea2dbea4d97bbe79c18d6737cf27e6a404567d3d2a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527407+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "781cd529-bcc4-42fe-a945-2a92c29ade08",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_09.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f714a359f32b8a2fc9034c394fbdffa0c1f8687f70e09b8acdf16d53ab58cd63",
        "deprecatedHashes": [
          "e8ed8e0c90ad21e07dea12854dc9d1a41c4efc8eb68c9f475392d41dbb3660d3",
          "503a811e401046b02680e1e18c2b97ab2860bc8049f3b02a634dd921ec178cbd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527408+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95bb8d73-1b6c-4e75-8534-d197ad662285",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1fb1294b67b91bc70cf599bd6581616aebb1cc3f419e7f65b2e637399a529afc",
        "deprecatedHashes": [
          "b98873e9c8ddb7057134328ab69156c415138573e7364cf757e5a170beddd94b",
          "a9287a62fd57b9b5c589aaadaeb69394912b40db2278530107ae33d7dce58898"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527409+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b71dedb-6e9a-489c-b278-c06cb57b8936",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_06.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9f647db0da5d08482d84c94b193913727a3497abfd9b0e04e65c65ae597c824d",
        "deprecatedHashes": [
          "9853521e87a6f4f4d3594e5c1d92f1e7a5442c95ccef1f095b83f02c33fdae9d",
          "98ce2f14079ceaa73860ba9c97ab52ed128d47d4950b98c4424f5832a54971a7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52741+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7b96d02b-677e-405a-b05e-04b2fecf4906",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_06.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e4ee230e758a4c16ff22ab12f25896383fe409d07b68fd8ff5f79c772c8b40c0",
        "deprecatedHashes": [
          "6bde58ea43a14b73455ef2ec9cdb2257d8231750dc64961d3bfa8cec5ea8771f",
          "0462eeeba5b33298dad797a76795dab029ecfcbf62251c7761d6cdcdaec25aaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52741+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88345b67-fb8a-4385-956a-063fb1354f55",
        "line": "57",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_06.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "e6b45cdb0845cc76fbfd4f4b2f672f90281f3e62dd82758bd39fcfb35e3b4aff",
        "deprecatedHashes": [
          "5e87b24d77c71fb2dc4cdeb537e31300f06d93de6e3800cd5556a7d00023466f",
          "403fa35085bee39d4d4c9c39f9992b9c1dddfd95febb7ff26d3dc33f70c74135"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527411+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9a5176c3-3e8c-468a-8f76-53bd4c59f352",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a78b8d3a243b72c11fb9f72e414fe1ef5e0763e604e7842113520f7748b26444",
        "deprecatedHashes": [
          "956d0b43a77cd1d285dd9c20f526a61c2f60fa981754373791123919fc980ef0",
          "44f652414aa6df15fea3a1dfb9f8962addb4c89579917cbfef6920026415a9a6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527411+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b90100a4-3ac2-4007-93d4-7cab1626c6ee",
        "line": "55",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_31.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5194fe3766d638264f581295220618219e4fcbc1957390dd571afe5cd9282ba5",
        "deprecatedHashes": [
          "32687a08b56fa1fe7218bb8dcb2c31171037fc4c54f9eb4dc8c911f59d5d53a0",
          "d8de18c49934e7567cff9d3ddfe7bd4f672fc0ecddd4a435da752c25fe239e7c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527412+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d03d7be5-899e-4c10-a630-9903c7bfaeb5",
        "line": "56",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_31.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4a564ce3e232feeaf3e7f5c39090f1eb8df9d9db612b5b519087955e26e57968",
        "deprecatedHashes": [
          "aae24989942355b09524a4140961c90c6254a13bdc1f849e48d6dc11c8294ff8",
          "7da9e6584e7804c0bd5ad031580aeb7eb60ee7def67a8babf2e39d2f49cc09a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527413+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9062c1fd-f5a9-453f-9176-726330607abc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8ee7861007f0c3a67e0bd48fb852c4287e2162e7feec6f5248ad39945f9f3c4a",
        "deprecatedHashes": [
          "0f0de68323e1eb04e8c51e568172428f86cf8262effab867091cdb8648997be2",
          "9b26d1b0be51b6e6135b12af6c89c1a8a824d0020df5aa56fa16a9b8588b425d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527414+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "422b7922-ec36-402e-9f54-117ba53459c1",
        "line": "51",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b52c60d685271215581a5e95d1e54012f6a1427b5820cc1d64d5b59b8408bfaf",
        "deprecatedHashes": [
          "4fc2cfe166db266943a593f61588d34b7e5ac1a49d46559d6e679bbc9c7cb82e",
          "c473adb3ff2c1b20d3ccb3c598e0d18db5073e61817ae46f8b7bc2a0656e777e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527414+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2bec577-54d7-4185-a0d6-6d8f34ce4bf0",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1ba0b1a802c3fffc79915539196719ef1bcabb40c568756afde377a427b3c3a4",
        "deprecatedHashes": [
          "b8fd34f348995807518e67973ab9bc3c51107b41bab467579dfb45729e07cceb",
          "b7c618f5be4ef38ef4fe52b65c99cb1f0890f9b5de98207e056883c754df5bd6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527415+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a70e855-65f7-4d63-ab8a-9c03c7f35d3e",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f2032578394ab05788246859477eddf779ea000355473c6ac643c06e30ea0a07",
        "deprecatedHashes": [
          "4fed6023ecef312c6f7d1b0b6e4bf78c4f9549d9b6f50fe53f969c3b70f54594",
          "0bf7b09c746d4e9504a75fba6e7a7b4cadbb2552119f89f809af0aeeafa9b352"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527415+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52e29d54-b634-41ad-851e-2658c8ed5157",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e5d27dce582fbc02645a0e286f53e750df0c1ec4332637952260fb438cadba4f",
        "deprecatedHashes": [
          "72c82032ad33f84f7c5493548031625422d5f547fcf48463cbd48773a492bc03",
          "3ead0e8c2d71e4d1dd3641a94294f74d8f5e9aa15e173f7cd21d48807e55f724"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527416+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aefd3e56-390b-4c50-93bb-15b2a266067a",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_07.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "87b02a478d5c577a1ca34d695f57c880a70170db4c7b76f6de2a8d34b1053b2d",
        "deprecatedHashes": [
          "7b02f11b937d16a35628ed41ba03dcc26def840e847fc3ccd301f4a97007f334",
          "30dc49c22a9834eb434a84f622371561c8c272b4e5593d9d6d744213de83d88c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527417+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "843a1ff7-70ee-48e1-84e8-d7267921e922",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_07.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "799b253acbb8ca77363f066821891c4f7cf30e9dfcb0f36582c3f6433283e292",
        "deprecatedHashes": [
          "d20065ed769fb30976e93876f8b9d4bdbb7639524325d52142f89195c5df5f95",
          "8c3a5ff6adc146ab5ef6b9527185048e2478d6375367484aa78c85abc665f980"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527418+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bb980211-5361-4565-bc46-42d0dc694ef0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e59bce5ef71120abbae65cad9fb0a6be8e5c71cc5981899cea911f1c187a3fca",
        "deprecatedHashes": [
          "c23cb01fcb143557c1b01c81a0bd6861273b5b24b12ae2c7a93e91dbe04d1481",
          "55636a4b8c73b25ba1a3d99df4fddfaa499192768784c7d68b9c6826a0563d3a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527419+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8fcb0cba-66d0-40ed-a222-0cda098b9a68",
        "line": "120",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_16.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7e63d87bf3ff67f2c516ab9d7cc470cb23cfea654bf8d082fd88a03ed8122be6",
        "deprecatedHashes": [
          "a16e0883c3491854844da337ec4ff0afeaecee23125ca4bc9f82ad84f829b40e",
          "0a28a7ac2ab5546eae5374776d5a5aa84d9d7312b383126c04a2d5f89ea6e806"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527419+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "358930c5-29ea-4bef-9f92-e35c0eca5a17",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "16f2512498b2e5de2df1c0125f3c46ad9b5f5f96ed2d4001b4d41b1a0551098a",
        "deprecatedHashes": [
          "b7512ffa774e681c0f4f74135a211680c29f20a3d1c775a9b9eac4fad69cdf26",
          "bc527c66c3ef0833aba8be77d75a42c88f2fda303270daa140156ee69c845d05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52742+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c182923e-cbd2-4f5d-827d-d75182a1b9d8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a9b31e56529b9353138f0e4440fef8432bfcb3ebcc9c014c8f2cc938b19b93a8",
        "deprecatedHashes": [
          "556221cde74edfb02053e390a460733a205a77f45b8b0baf4b2308197cf672e9",
          "309afdfd8849ff6cd3df5d2f975d8159fe8e7097a758980fa8d3248dde5fb895"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52742+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "322c0659-d896-4be4-b6a6-ff748434b340",
        "line": "50",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_41.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d735907777c34437b8be7e977bdf3e67fa4545c9181e256aa3584046fd1c4dc9",
        "deprecatedHashes": [
          "a07e3f00a7b4478d4f83047d5a4516f21da12df0fcc6dae5e8ed1bbb87e1b9a8",
          "251adf9b8f74d6d9300eae8d1cf6aa20f1027425d5ef1682669461cb9609e901"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527421+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "28509002-f3fa-4161-84ab-eb5aea580525",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "dbd956f0ceba68a2c2e7e1d70c1f09c730279c433f2d027a3ffc823008b1d88c",
        "deprecatedHashes": [
          "b941a956829613965b96e6545a8ff034cdeddeaf8a805b7ed61117cad9c25ee5",
          "64107e6db88333f4bf178180bc346dabf682322379b7c631c7ca739f34879121"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527422+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "67220572-874d-40e8-9188-557a5f5b4728",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_14.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c4fa52bb65af94f7cc67f6814146391371228a37bc0d86c71e12429d40c88ddb",
        "deprecatedHashes": [
          "3fd92d1a11b6817f171ecf9197c1b8924fa76a1b5c2e95c442dce01336209bac",
          "dfd07560b495101e3e41dd8c6b9968a3f675f93d4e29672fd2ff36774ceabbc5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527422+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88581117-5c14-4e93-b17e-0e7ef5aee79b",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_14.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1bf546258becdce4a707801624a8e45cb50a6c4080b14345eb147daeccbd0b52",
        "deprecatedHashes": [
          "66f27736cdda5aabb042a8a36e8b55246404cfdda2643851e09d327d5cbaabda",
          "b869659ab14b890badf3cf13dce132fa9d6fb2a8ab00a19e309cfa5438348505"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527423+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "51f09108-cf95-418d-8270-2f7492a9add6",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_14.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "e04817294b9cf485fb0c07c8b6a17432bbff065f96ac1a5ed47386fed55474bc",
        "deprecatedHashes": [
          "1edce955362563c06b07d3a55e41af4fad1ec4b3825f7506ed88f52d395fd59a",
          "96b563dad96466d912b8c474fa2799cd5c5f353f733871e6a1b637407b43a227"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527424+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c7eeacf-0326-4910-90ff-ee6717b116c0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2c2b62e05e85de928f5889657fbabb31b7cc7a1c96d65d2e42dd53416f9da73e",
        "deprecatedHashes": [
          "61df27baeef680db6ef519d57e8cb5d005c7ec629ccf0fbdc1d0dedac4d1a51e",
          "ee1878bcfbb160130c26067a6c8c2d0694d6936cb3cdb036a8743411d9f182b3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527425+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4ed14b37-4b9a-45a4-9e28-8f165cbe4e1b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b051070e80d89bcd6fd5b42aa5ef0cab2dd2163dd6b05e47b19d4fe5afd8fd9d",
        "deprecatedHashes": [
          "3ef42ea25a8b13bf3603cdaecc91a2185f19a33dc3a745683a8bd9d96d0f804f",
          "18c22e2fe3e79c050dbe01f2514a023e2e5e890ac9c6808bd7f1b538330de118"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527425+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "046b5d9f-d857-4db7-b3df-fe38f13a3297",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_61a.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2197b9fe456b1ee9dc0b0b961644daa274bbf8a7fa2f3ac732fe70c677b41f6c",
        "deprecatedHashes": [
          "ee59bd85cf944e0160065b8a09251200e6374bdee13476872166a9acd5d86d24",
          "02102e2f6fddea72a1a16ca6415be74023fec43ea0e132b16cd59002bcca8375"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527426+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "22c7feba-0c32-4515-8d83-7e47488d6e03",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "723f910fd749599991d8fa801fe2c63bb59ff3713a8ef7e2179dd92a5d6ab598",
        "deprecatedHashes": [
          "9c9413bc9811ea701cffdc0e6f1a8c5ae8e607738054cfb106d87b6518f86c60",
          "bcdc849e5013565d6cf3beb8075b64877595b16ea65630681c036839206c6a45"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527426+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6090c95c-9f3d-4d7b-8580-0801610c1f7c",
        "line": "104",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7dbd7e8eed5d6ae1fcc65b234c181043d0db5b555e144bd9f751844ba27c5751",
        "deprecatedHashes": [
          "0242966991f43e897cf67c80bb6d76e229f6e8c1c170238174ad41806c26657e",
          "a64230ad0be5b336cb966303a1ace7ed02a9cdab00c1fc5c7f724d1605c37289"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527427+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "505709f5-3bc6-4eb8-bbd9-a341b9d6caef",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_81_goodG2B.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "377baedb46c7aab14ba54bce965e7306e11bf097ca69b8091abfc4a6e32c6227",
        "deprecatedHashes": [
          "807e9a15cd29826d46fe62e4527a0ede25491e6acd3b6590d73529bc2bc9526c",
          "6b89b59a35f56dbc5302bcb392b98f7efba09bf5f91e4a4dff8cbc9de3a7cc2b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527427+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cc7e2594-1547-4091-a448-47a3fc4ac336",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1a3bf141735af9de29379ff92efd01d42fbfc9815c0efc5092b5aeb7e762689f",
        "deprecatedHashes": [
          "44ed356bbb8fea0335c2bcb600407c9c2064f825afbef7511c3db2293b7b97b2",
          "dde80cd631568e4021994c3f56762847e6b0813c4ce28a5a464158005aae7797"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527428+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff073ef7-a6e2-449a-8f21-fbd9fde7f362",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c58c3b455c70d4bea29d3a94bcdbf854c5510c319c0d97fbe462d5c5afd2de0d",
        "deprecatedHashes": [
          "54d4117d6f4fa73669bc64512bbd10ff2bc5d4b695630fa60e31f901065bfca2",
          "5b1274158dc7cab30721f70e2dc845cb471bd8766e8f301e5aa3a0f4c64e187b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527429+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a66ef05c-cd21-42d9-8db4-b4f88a2e5cc9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "82167c3fce5017f0507e3390f395bc69db4e3c7e22fced8c97b2c5cda2efe6e6",
        "deprecatedHashes": [
          "5eb0875080fe0509013c3f194d5aaddca637d447e30e67b92bb5389c0b59556b",
          "9747965d379f80ac517c0cd4371a6fa6947e762b7d1c7d98cdd360f6da9fb7bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527429+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "341bfc79-7444-4443-9c3a-47b4aceb9fa4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f14d1654ffae0a4d1561ac642f775391efdb9feaba0c424618d1d7c763f9d55b",
        "deprecatedHashes": [
          "151cf1d37a58766df3a94837cb1ed64874465c043afb0e5dca48e5bfde0ca248",
          "74753861d2157019f4ad0f026a66ad98598c6a9711eb43e0a8d63e5e5f577e3c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52743+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e4221a42-1113-4053-af98-9d0bc516fbfe",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bef770beeaedec005f1e4b58076d3e1ce32852afb3182deb6c09e6757bea8cac",
        "deprecatedHashes": [
          "52cff146ba2fcc7f6e80e7118592360dd3c046b007b441999502e1c2bf0b69a4",
          "9a7b2226831bb4f18de14f2e50fab705b0aaec04065ecc8053d30056514f923c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527431+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "365e2145-bf28-47b0-aaf1-6288d8b74f8e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fd8af305be93d6471fe83fe1e1cdb9396763b7b59c72c3d9589cf18429aac0b4",
        "deprecatedHashes": [
          "d85804c03cf7fb0f692cda1e1abc66eec8fe774345ef85a9d61d732ef5730847",
          "23ef71d9df848e8995fe61d0f174942acece22e58e35ca84d7ae2ca297140d2a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527432+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "161ece1b-b58f-451f-84f4-f9d3fb729c0f",
        "line": "119",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d9eadb7631d0a090bf8817036e7f0c106d54ac5987d57b9771153770760bfb65",
        "deprecatedHashes": [
          "20b027a61468870a428e218736a7fbc274f889ca042d9cd17c61bf44ed082493",
          "948b462385c021bf997ebc4616b52bc87aee1ea90c89ed1e40d2734e9a555ab6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527433+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "00d53f79-3d0c-41f7-8561-dc20940c38dd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7beeefe659d98b6f90fd49ee4b1a92592def60164e3ba48c50bb4c8685d4fa55",
        "deprecatedHashes": [
          "813608b71372a2f3717d706adef0206150023ffe261601bec9217ab70803c663",
          "7d5dc1fdab1f4e81fba0a385e77ecb460e959e7201e4403b6ac3dda661aab354"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527433+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f1574c6e-b530-4998-b7ba-442da57972e4",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c5fde9808052d7a6d151900d1860265f9d7242777de47c8602f50c8a96e836dd",
        "deprecatedHashes": [
          "d08067b7b5d6ba51c59c2c78780416f9086eee27a6c8476a5c7e8065e110dca9",
          "45849c92de616379a3cf2e6e7d65d9c7b9f3df6f0d85da98f40930994a475e1b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527435+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "28cd719f-7e62-4ce5-a68b-02aaf2ddb41b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5575b547b4028e205b54e6e77f95f778296b19a32043c00f6dbf3a84bfabc157",
        "deprecatedHashes": [
          "2fa9cf6236aeecb754ff380d883cd0b4f21ca6015e3829cc277200ebadd08594",
          "b2b871320eb0dc6053a3d0b95ecbaf887de75cd96ceb233d3a1891d2c22e7372"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527435+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88783a78-0c48-4d68-b4b3-6467251d812c",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_03.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7d8b991c685b0144d512cc05868512e1be360449c9297d0b9d3a7fa33e3a011e",
        "deprecatedHashes": [
          "f14f5d48e202b9ce72d2e9511580a99d49305f28fb64d3228c129292590ae94c",
          "e79635826d048ba2c575acc101ea54c54144cb4dca4889160c682db3e66dc7d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527436+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5cf2ed28-d3e9-437d-aad7-e12f9215b6f2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7b74afdb99708394100cfa652a92f4d7a8b7cbdae7e879fc545114880b4f828f",
        "deprecatedHashes": [
          "eb877e68fbae0836834a5ae150f392abe83a144c475303321f0c0a2a60a696f9",
          "1b3631bf43548290665a24874c5413056f0c32f5ddae3ea88b67219e92d5c1d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527437+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "253b2ccc-02ab-4ccd-b1d4-aa38b4bde49e",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4998b56d96acc95cb4a6047ed40a284f9bda196fdce1af4fc6c321225e1ee7cd",
        "deprecatedHashes": [
          "f0c5d25d50fd0d303e7686b5255f7bb1b9e7a642cd9a297feac0948f06cc2423",
          "112b391f10df95248a45132e291ac7cdf807a3a13fc2d8f8d9559f1e547bf9b5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527437+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f015fbe8-e776-49c7-97c1-eaa2b1f7605d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "41203858dbf19de8ef9d31339a1d0cd54b8b558bd2bef26009b03cf404f579ed",
        "deprecatedHashes": [
          "a984d3adfd021305094955e7278f7ef30318aa5a291f1a2f0bfeaff6a5772e05",
          "7ebbec3de2f6a20d1272656ab28c92ad62d07cccc1ae8d877c1a0b7b6b0e41e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527438+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "869830a4-515d-4b01-9b19-2c640f1c9984",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9b744321ba5487775f3b11bf568dfd3d9be48558719b0825d86fa8777075a5ce",
        "deprecatedHashes": [
          "407f8823eb56513c6ff71424e05000a9ecc33137fa96f059c761ede6efc69eac",
          "d10b4bdf5ee92bb547f3aab570069ded1605c69c296f8f9d1e971889571f771b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527439+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0fe3185f-744a-4081-9011-39f23a5926d8",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8551c8652112c9ff0bd4add5d75a842af3c93edc3dcf5794193435d52fa082f1",
        "deprecatedHashes": [
          "0c404cfdf948382ad41c3e5892ed0968a41c4cd62002e7af5ad7c71f900800ca",
          "fd30d4d1eb4b82e0a63915d4082490802b2465a542e53946dabd0b72da32cd6d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527439+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fddc921a-0725-47b6-a3d7-4858a9742c83",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "eb654b8b1d70c23cb9ee2bf91ad607be3ca55f64b196cf85f2a67dce7408c60c",
        "deprecatedHashes": [
          "cfc664f322c7ec394c7bff5a2c3326bed1a41756f4b555cd86742c6f6fda3e90",
          "00b655e27d6aed70d68c322c83c2a46e42158a4b8b0fa1f834d9d8033f122b90"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52744+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5ce7fea7-ebc1-433c-b916-465d2e0c9569",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_13.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0960988fb432a622c4e26ade81b7b3684dd0634e9dd34bdccaab231e543a709c",
        "deprecatedHashes": [
          "040e6f78db50acbec659eb5dc4c2bf08585c2b161ca2c4ed49a5d5ada0759c7c",
          "b5da1b16c8d62eee49bf6b63e3797ee578a76b810afad5832e1806f028fbb067"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52744+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ac731f57-eac9-4173-8515-da62a5da3a70",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_13.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ee5c1d85fb5ec5eca11eeb258ee46c944247e4c76eb09c895186421c010277e6",
        "deprecatedHashes": [
          "28937f2b64d607dc3d76f19ba4bdec9fe91ae265a816367744e7bd47e413e08f",
          "7482d4b2aaa1bd2e28f07620eec92f7868bce44d6b4de370c7da2feba9e70bc0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527441+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10566a67-b1d7-4604-ae9d-a0a9ea0e7f48",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1168b984d3a9b9656f92f34922008d67686198dc338fe337e1ce815f91234512",
        "deprecatedHashes": [
          "7fdb26ca1e0b38c6b9a078e1cbb937739b1c1f940a669e13c0cc7d35c97a3def",
          "5165026438163a435295e716820baddec3634255c496dfa8673c7ac2b077bf33"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527442+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "058e5b5f-0683-46fb-b8be-e6e0a4a104a4",
        "line": "105",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1fa84e77a40d7acb6f1779f3cc0eea4d8832ab213c8d94225f095927fa76294e",
        "deprecatedHashes": [
          "66bab36e0e2bd06f50af22f19b3ffe3e21cb749563a3fb2cc07bf9bb7e4af7a6",
          "f5757b9f4256912589fc5aa9356ff9ec35e3ead1c62066e8c2fcfceae5115f07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527443+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "60f8c855-d1e9-4050-a7ff-81fc7fc0aacc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "92e77f51367bf0f613513d433e2657968e628b392d3115975620fb94e7555bd0",
        "deprecatedHashes": [
          "3931848f23a1dfcb7c59c4754eb521122d452a269155a18dcf48011884407271",
          "142e57ccdb49e4bbddef21a33bde99a006e5dfff18f982ea5166481532b0dc15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527444+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "adab98ff-0473-42b6-8ffd-ae65e5761e69",
        "line": "120",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d4ef5e352a30be70bed4805b49d3a5e63505a6f9fbb10f2ad9143fec2e9dd130",
        "deprecatedHashes": [
          "9648bb854cc363e9ffd708f925bd3ec0923d6cfb14378dcf9f05986923a81659",
          "1a5160b6472a3014611358f96e9f3028e7a240f38a2d252aca0b39d63aecec00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527445+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e8911b71-3b16-40db-a11f-37c14e60eb41",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "99c1ecda7f000768e31cd375cff994a1227ab82a5ae49e46429cf3246fb34d7a",
        "deprecatedHashes": [
          "60d07a05fa954c2ca5a7fc6a486daee38b678b4e95ffd9da3930497db7b38697",
          "322922d9b87ff0baa0f2fe9a3762977d230c3d405907a30f6d53c724663860bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527445+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "55012ded-ea69-4c5d-8760-178c2858373e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3649dbbb29a5cc3f6ee988b2144ae74a9d6216f78c5de6cec8e7dcd6b668a818",
        "deprecatedHashes": [
          "9d2de49eed5e1bf137c071a3b45b14491d68654c8eaf19d6adfdbf2fd749babb",
          "a024ac1e8fd3980fa0a389b667d198bd5d208d87c20f7ac2f2e03749f0edaaf7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527446+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd4ccbee-b0fa-4923-8adf-c4172074386b",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "353e821dd89de2a499cc00b689231b8b0f9d9f5f790fca6adc388b38d8189d4d",
        "deprecatedHashes": [
          "fc51b728abf98ede2ce56652ead700efab0f3407bc12124f0caa52b6a4b5076b",
          "92375d0dd3326413adbabbf025fd13576030073ab4ba11a476925d1eb36d144b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527447+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10537267-10ff-4bd5-ac46-f068e3b03b2f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d30bbd576eba640d9a81cde51dc714702d0138c5f86e819e3d60743fa3d7aeb5",
        "deprecatedHashes": [
          "41d8b1d1ebbd76da66aeeedfa1c4311c861d8f5755cca908f81ff1ecd9a0f666",
          "ae1bbc11c41ec6f3ba460f19e2108d08a632fc38f99380d8a32d60887c4c4e57"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527448+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6152be3d-450d-4fff-8a63-9e1e2f2d52c0",
        "line": "124",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_07.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "02fc0606667c04d1b3f44c5e1ea8e7ed9b33634472bc3cb7e338d7d0580c6d2d",
        "deprecatedHashes": [
          "51c4d754a0d1c8ed3e76701cbef7d789073aa5a540d3d6f9bcef755d80ab769c",
          "8ebc9b961a4e91ee47c98ec822204e3e15597b4bca4e59f59893e410963ab753"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527448+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c13d36ae-0452-45d4-a615-1d3431ef0631",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_07.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "2e8350f47c7817fd7d70558b2215129907f1df4c1bad4181ead8c0c0ef124d6f",
        "deprecatedHashes": [
          "ddbc4b789516f45976847ad3779cee5de672bfb93a3ab55c1fe47966922e577d",
          "dc089b7ea127c0d13ecd64ebc483dbb0d1cb1ab3fdb02db5413fdb68ad3f628c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527449+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f82a0680-506a-41ae-8adf-3bf70c3c9679",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ee319a40c8b95d63f156ae41428ab8c1e41c8bf77c4bf4ca0763d1b11e6b11b1",
        "deprecatedHashes": [
          "e1a66516a2770942d68a4ca44efe8edf9d1435933f8f2d055fc096f6a8e2e526",
          "a92e5c0c1f9fca06a29c2f042956bccd7661f88015e652ac8f76ca37b12f9a01"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52745+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f9ae15a-023b-4a94-9f42-aa9bbadfada8",
        "line": "56",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_45.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "80689ebd23e9d7f0182ca93c7a625d0ca384da65022a2ab5bd42b810e84df057",
        "deprecatedHashes": [
          "50bba0a00fb30ac3da9e95a820c56359fb15e49b166e89d1efb86f67db6300ee",
          "1616271fe2f5c7b4ec1b2a72e71cd1257a4b0b4f2495f41a8a9032d792a38d77"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527451+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cedacbd8-74cb-430c-84e3-5606da6cf1b1",
        "line": "121",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_45.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ea33a2145ae925717d0fad2134b1e127f08073edfaab55d47bdb45beace0eb9f",
        "deprecatedHashes": [
          "8a2fd4dbe8d7174434fe46f36f531cb396b26de50d4e8c8487b159a1ddf31985",
          "3510e4938743d811c0be5a66b6a415fc47c956649ec594272b53421b242634f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527452+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3fffcc95-0017-4df2-8f24-08fc698543f2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bec6d0f552da14411edd9cd5781a92f0612d102458dddb94ecbcba70675d6812",
        "deprecatedHashes": [
          "3413a0ab367eeb6560040772c17cdb1d8049a974572c9751e6c9cabe61636f80",
          "6de607e7da277805ddbd2701c7b42e2861a99189d09dc0b7736b181ffe0f3f5f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527453+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a7ead89d-acaa-4432-b102-d2f46928832e",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_14.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "88dd688b5c990eaa8d2f371a62aabff184bdf5872c6fa669c57e217aef7b65f1",
        "deprecatedHashes": [
          "0fb9961a044793c0ac9c0a3549a62e6aef3210b9d17ce6be40776a3e420d1b9e",
          "97e8363986be797993498f667c4bb4360aa2a25a254f8d39378a8d8ae761534b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527453+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dd346638-c45a-4d8a-b128-ee7c69563276",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_14.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "51063946443025009e1c34eac96acdcd470b22ee2cfb3a00e866035bcc50756d",
        "deprecatedHashes": [
          "5dcdad19528084a7385efcd2df4507e586df8739edabce7dd4b6761840d2be59",
          "72b3ac243b68343574a2fd176b4e39b3bcc46c036b5d77dfa0986196a357f65d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527454+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a248c1ac-ed1e-4a07-8864-d55b6599cb50",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_72b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5d705ae17771bc6c300a3f6fc44596b15ac898e0fcb007b8b76bbd13b1961ac5",
        "deprecatedHashes": [
          "678eb436a28149bafb9b8d54e6e7c19d9ca1afe0351170a973364f55a1c86184",
          "67379ec60441b587f303bea5104aeab5dbab15d92493f412aa27a9add0a8406c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527455+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7f5b634-6a07-4cee-9c49-4dcf9ec4ce01",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_72b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "7b0ba94010e01d011dd8a7c8c0e2d3e0becc43f376b5c8a9f4b6ec938bbd3ae8",
        "deprecatedHashes": [
          "d7f21cdf341fb0f82000883d987cf1f3d63d34fdb1f253ffc3cc9fbb1950338a",
          "938ef1a531968fbee81921535963fd8598372e166a9ee69c9a36fdddb35b710b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527456+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "373722f9-5f0b-4202-a823-0e981f8f6c36",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d592a1e79056181914f5a0454a88affd430813b184651df67bd706a1d66b0644",
        "deprecatedHashes": [
          "737854a06bc2185e56fc158d38752fbc4c96eb091c4f721c603935982b119841",
          "ad0e4c7ac7f99563b7e94f30472c76c291e32462507abd48fbc8ddfad5810335"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527457+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26716cc4-f1b3-4076-bd8a-8a062d285f48",
        "line": "52",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_16.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ad125dac2556d720aa394bb694d90312b45a11af3e84e4f74d19fac9f469a497",
        "deprecatedHashes": [
          "aa0e83cbb02683de05b3d72a343dfe8da2979728c0a556537b3908245e921b4a",
          "dbbaef97a851efa818de0ce7a4a999afcc99383199d6859a285db9c653a44927"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527457+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c8412906-7a54-4c8d-80c5-b5bf96e5122a",
        "line": "53",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_16.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "607a5f4dcff983d850314d8dacb8210df5b60ae773953b8ad1d93daf3291435b",
        "deprecatedHashes": [
          "3d65d1c6bd22f034d55858151ecabdb3de553b545e4143cf11d47fe514892c7c",
          "fda08e6e880b26680155e3add972541e8eece22f3ec8d657b1f343b2fa3a1be0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527458+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d0bcff15-f6db-4164-9ded-748d0f32a00b",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_51b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4f86467177cf5a49c156c4431a69268d9c9c8c1f1279e0a71ed71ec8c11acaeb",
        "deprecatedHashes": [
          "6fb60ceed246fe2662df98fa7fff102c74ad169ad8a9500d12bd2005b31717b8",
          "ea72c3305acd955807ee4e1fddc2629e0fa167ac4e8b5b26066d1cac4fe7c36c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527459+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e8e77c89-9c45-4c29-86b7-8eb9fd6dd403",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e5d079b4551df74304d9284e731fb72bba1c0507e81f77817be855a1db875e0a",
        "deprecatedHashes": [
          "278849e271efa1479ead059fc2ad0f09b96f34c4b235ec6ba37dbb0da5bcef9b",
          "87c9aeb5713c0c75b63e668bdcfa97da1e39566bee61149238f4d7c8a0fff480"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52746+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "536153d5-7ade-47ac-9fb3-e36f6c1ad04c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fc1e3fd1759d4767062c44cf032b84c328e88c93f87c6a51e3fb08aa159721f5",
        "deprecatedHashes": [
          "b6123e92c40fd724ee97020272c1b733232fa666e89fbcc0e90ba4576f66002d",
          "44835ffe04a5959ec961247649348453438c98214d997e681e8b7e2288b01c70"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52746+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eb44f9ec-69c6-45a8-9c65-d527c09a786b",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_54e.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "577ab4fab5f39b2d22b92bc42c4b59dd73fc4b2f6b463622ea730f9605ab11e5",
        "deprecatedHashes": [
          "0a8e5dc7440f6f4a826b29639d3526b42894e1e1a42d8aee02c1857b625a39a3",
          "ba8c0c9345b2933178660535e3f344d193359c9a9bfdd3f9028a860d63acf37d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527461+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ea77fd47-000c-409c-a152-42633c6c71e6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9753a2eae225b1e6d2c3b7787822173bdc9207a3b961bc7f6994b5dbbbee1606",
        "deprecatedHashes": [
          "800cc000370ea4f8fb9c68fa61f65ef392c0966b38fdd26f8fa3051ee6bd113c",
          "7c0f36f0ab2be5f97a7afc38068f574d4639247aba491c1a659c4eb28b3c6838"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527461+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c2f4d60-ea96-47c4-842a-f13b078b2bd1",
        "line": "63",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_15.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4659b8709b8d5089a34ab2cd28ca28fc60492e9cd172860fde02ae74bb659c40",
        "deprecatedHashes": [
          "0fab9789c5e3d31d06ec36c6a8a3597ba4252fbdb4cebe1e1422d8488d441b1d",
          "e65dbb447107f5314e6f7cf307fd7b744e55c62d68a63b2163534941d9e939ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527462+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b28ab203-7b52-4482-9622-f747922a3984",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "53de3fa7ba31bc4f186ab4cf1a53f58fb4703b5f382d8a6198d89cc7c2c17bc6",
        "deprecatedHashes": [
          "c8530400eb0e26a83bcc48ecf7a63fa18fc9007d439d1e3f9a681be7f36c6ade",
          "ecc603a9efa17607c3a947aa4771320f20f29513f5a36be859308604d35ee6aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527462+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "70ea9db9-d07e-4869-b71a-06dd4695ccf5",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_52c.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "77c3a708279cd78f914022cd1cc7aeefea471e71e536069ce23e3fd9d58aa8ec",
        "deprecatedHashes": [
          "1f2ecb3eeb8c6d942c03509000629bd3b38c5de9cf360f5392b8ab81f424afce",
          "9cf036014c2eeadb308dd0be0f16bd594e52fa8cf3b24bc2349d3acdbfe5d00b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527463+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c985d2b8-de35-4546-8d66-2091a4ebd605",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "11ec0014ba2b2107024c730927e27963a76202a7664774b2aaab04390eec4e7d",
        "deprecatedHashes": [
          "fd34541106d65f21bedae4a1ca9c97c1170fdfac1a4cbe7f4c86992302cc8838",
          "edb6e4af0926a1080dea02871549b7ec0dc8c9c24f7293b5738bc83c049720e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527464+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6437b3ab-5171-4ac1-a5e8-47d355bdc7de",
        "line": "124",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "10737c480e9c150160095b4782b6a879ace63ee7e7d14e4eac9040750f773fdc",
        "deprecatedHashes": [
          "cf905c95b997da4e8d80a1aa9b32037840c263ab82a176ae41d26b435a6ef278",
          "a5849de06f40183b85a8fe334a52580f630b1400e07aa5583cf54bd29e3970fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527464+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "de552669-a778-4ca0-ac00-8bca6124b6e5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "322a56ff4de0bdb8fe4d026f28a57f419075aed3209633650a606bc0f0e46555",
        "deprecatedHashes": [
          "073700c795ed5b8c1d7ccedf2579006f5c505921c84760d0e2b8e3ce873e594c",
          "5e56a45bf40256fb46a89fd9effc182bee0b6e4b9a76a8cbe889ba82100ebb41"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527465+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32ee6129-a7eb-4b99-a64e-8859a622363d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e539d9adc013b9ba24b7e5cc41b1a2659477ddfb927c046137cb2ab65a65b8b2",
        "deprecatedHashes": [
          "042edf59107ef53d2b3d4d782b6bd43c35527a89004217da686d5d41e7b80594",
          "b415f737300b6890bafc12f620d3d43ddca6210950a0ac6ce690d97f351f44b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527466+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9773d784-05ec-4535-ab38-7cc1c08a5349",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_14.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c1159efb7e5072243dfa888eb70d452dedaa9ba1279e0fab86a043e154061928",
        "deprecatedHashes": [
          "904c20212d834a37bc0847bb1412b0aeecddf52c19db1ac39176c4f5643e880c",
          "8f7fc5fb51bbc3f27525d4f5d867f0f3ad00269fb371b24cad0199912a08a115"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527466+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e1360bb9-6e77-4664-9702-498bd3c95c27",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_14.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f8f007e16ed19c4446a50e49ef2a72cfd47ee32ab1ac5b7c44e275b35ffec8bc",
        "deprecatedHashes": [
          "7c1c9497a50e15f10c0373841f11e3c1f114f5fa3627c8582a93fe32fe445a36",
          "f48288245a5ffbd89326a23f38ab2b94842467b983d1b2c4a6c3140da1813030"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527467+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f50fb18d-b8d7-4a40-9795-6c5c137448d2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d7ded3f834e2bb7b4722894b26bd8e781c25291d0169594a06776192cd6df8b8",
        "deprecatedHashes": [
          "26aed8c7d55ad214f6cf99a91c57c52ff636912a117d5adaafa7fe2550656d95",
          "319c9c5abb18d1ade0df73845faa3b9b38bb1e52fd8c6bca780521cadb0b3eee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527468+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7be7dc5f-eb4c-4565-9ee5-882d6a73b9fb",
        "line": "52",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_16.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "90045abb21e9c156b5053cc37157cb0664b077dc112af316bbde25f23ee329ef",
        "deprecatedHashes": [
          "704d8173b11cbc265c4652fafabe691b08ce04e93de72520a4bcda67a65222bf",
          "242050c9fc1538eac2c2f70e4a387962b60956ba3116a618b9ed073cd8da2db9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527468+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25c34714-5860-4e0d-a2d4-ec593aa471fd",
        "line": "53",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_16.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "d62471568e4eca48fc41251615429d9d5413c2bb9aaa428b41cb93f63120a045",
        "deprecatedHashes": [
          "10f127c77cded77185576586d3c8831ea61f8d57740415ff1622c64610476aaa",
          "ca2a60d7faa68c3888951ddc028c8ce9cdaaf25f5aea0b9b5a8e60ea547296f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52747+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "61fd5a7e-f68d-4811-9adc-2fd72a5386a8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "115693cfd4731f95cee6fad5c022e032ceec2604c22275d5fee6270e2514e1c7",
        "deprecatedHashes": [
          "b51f64c8437c1a3830716c30de5a0faddd577c12a2b116d6da71bacd3828ae9d",
          "92da49e2c1d0e4703f31d2df83751064bf502e3d3a5f98bfa9d73497aec7a9fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527471+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "67c52db1-da83-498a-9183-e9182e40d71f",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_11.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1edb2e5a9685a679a2e08df69b01ac8aca13b1c76663037fa23a86c11fdd9b7f",
        "deprecatedHashes": [
          "5d78ddc484ca2f57b91ac401b1fc6710620377139beef45f8b5b04def79f8eb8",
          "49bee9895608338a20431af8734352daeacf579f198528fcc2d3b4368de15c53"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527472+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8d8a41fe-6f9a-470f-a3bb-9827baf9c2a7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6b0a45796966dfed0912528a708bdb946140a6bf0175c4baa2e43852d223dd23",
        "deprecatedHashes": [
          "f7201bcc3bd212a6d1da686a0ac48ec74779d00d07ffecc0de35ecc8801207cf",
          "9d7d97533cabb476d3d5730e7af63b89d6767b3f4c3992a54925b10a8d148e6a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527472+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "44e6da8e-beaa-4d5f-81b7-57969a35e43e",
        "line": "61",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_21.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "19135befb34d812195e3a3c891783b9e6ceff47349c6f6e121951822cae9dc6f",
        "deprecatedHashes": [
          "b83228b2ef3e0be2d31b8534a2306b9632074d107b9e71406b9cbeb96f41f8cb",
          "644421576c23ec2d58c8504c15e3b6e3f12e84efdc1adb53e4368477c6bad4a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527473+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "edec0980-d3bc-4c0e-9510-7df2b34274fd",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8994824ab388cdc130b45815d62cf0420160bda294085fbbad7d3f6a3e97c909",
        "deprecatedHashes": [
          "24077deed5adb8d20b79d5ff6f2fce7498ae1561b860308e004418e2323fcd78",
          "945e40c5408372dd09dcc888ea46368525ae0e7903cb03f0e483097dd4081cf8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527474+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f88ed1a9-51f2-438d-adc6-89b6c36bf7f5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "292222bcbf47c3b6ad512d3d5de2029a34612dc47facd7ad492191438e5a35e8",
        "deprecatedHashes": [
          "54f3e61e0cab023641d78e069a49c9fe92d45875e7000c519f626e5b3ae636a1",
          "8131ef2ce87e5cbd8324e587fd5ccaf62f6de34591cdeb6b24524cd47f1438bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527475+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed47d1ea-a61e-4411-ba74-99ccee49153c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "482c1201f96855c2e0e285f5523ca07efe6761f9f6417cf9f15d6d803abdb8ab",
        "deprecatedHashes": [
          "e8ca371cf580522ac385ca0c8137d91ca0a3b0928d9a31153a6e227d2ee7e2ad",
          "8436729d41c7fe4a5d4f5fba391a48920529a467f47742c3d9fbb4a4ae26a497"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527476+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37752032-d6cf-4765-b90f-faeee516e0aa",
        "line": "120",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_12.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5664a27431459aaf2dc9cc2baa80aae4396b003160c1e15ef760861090e8bb90",
        "deprecatedHashes": [
          "50b87197991edc09dcaa6e5c03fe39be4fd6b93b0d2c79342878adc07f06299b",
          "eab5b670cf726ef64308a9c13e7c1460dbc3d68c049fc03f457842c3a8a42eb9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527476+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d6585f05-df36-4d31-b175-5219288f454f",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_12.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "79bbbc305e13d4b324a7c296ba734a599088c661d7b5eb59c7094a0969f1cadc",
        "deprecatedHashes": [
          "e1ecc9917cb9e17b5ec0e6586e5216a9004c57dc98b99d27bade9addc40791dc",
          "c48fe86795713bf1d657bc2f0831e9bba22b329252bd68d131bb207a4760fbe4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527477+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8eb3d026-80eb-49d6-8239-4cdd7bc4e4f2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "edbf62e266a87f81d49c077b593a6c81084f22fa79868f403b81193a6dadd726",
        "deprecatedHashes": [
          "063b7f505aa2c4a82e296b17498a22af5d90b196056f149096a81e7669e14bf6",
          "32d245a799e2de5b4bec74e5849cee2999725b4385b00afff5a7d6d18c244043"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527478+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5205f044-67af-4656-9f39-ce87593cd1e4",
        "line": "104",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_15.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1ab3c5ccc8488d3a05e2526134387fbd61632a95650183af7681d1b514c99a29",
        "deprecatedHashes": [
          "05312180c98263caa84ff4bcb79530d5d8c14ef6aff444c0c303f086a6dcb4d6",
          "19605633c4c45e6450cad6b5162f3456914a2e5d532e6c766d0728d9278a65b3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527478+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0d8d1a80-b4ee-40fa-8141-d5721ebdd8a9",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_15.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ed7585fdb59f3551dd05f187d200e839db0407af3806752dd39663bf15d80400",
        "deprecatedHashes": [
          "3c41f01bfc423c7d01508a32e098eacd5711dc6380526520f0feb09c89af22db",
          "8824a946448b542f105c19381b3eb6641b5411188a7e21234b67eac5104b0507"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52748+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "81ce0f4e-b207-42af-bff1-a3abb22a499a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7ce8fdc525552459e78b24a58021860f98a82bad66767c66be20335cc3a8ca4e",
        "deprecatedHashes": [
          "88376a5ee4fc2dd8c0fcf7b0fc54d482aec921e8fad1f9d8d9857287bef86ef0",
          "3300cf3ba5065801f9b5073f3fdc4c79dd52240e9a0ac351251de6a289daa94c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52748+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c0618a71-3ad0-427c-8ff1-2164792f2c2f",
        "line": "103",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "aa5ad44698e1ff921a0968a12be9ed941e939921af7db3d704f2c3fb28b976bd",
        "deprecatedHashes": [
          "26306f663027b7f3775eec9aa9b7e9566eb3df0f0eeb6e8705d3710d6613cb86",
          "9cd68e990e1340300482b38894b48ecca5021104059961aecb9c27f3c5213742"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527481+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f80a939-d962-46c7-a7fa-f2c60be0ccd5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "74b7aa0ab6c8067db030e64a0fe2d40b2877ab671daf03935b08156d6c587323",
        "deprecatedHashes": [
          "1afa6efc04767ca14a6ea0875ddac3ec54c05a5371984746f1a99cab9481647f",
          "a7aab23760579500b4e31eeb89fd8fa12d3f3995eeb132808ff85cdf8f50ccc5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527481+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "879b1786-4552-4eb9-94bf-2f3278db9374",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cf500c91ed1c8e0e500e640bbe45db377083b2738cef447bc37f47a6726f2d23",
        "deprecatedHashes": [
          "c5089d59857697889bd94368754ec434ff34c1c207e60aae5019d1149d105877",
          "4940c70755846c499ae991ae4d84db73ebbfa453c42d4becf14f8cd072f1b40d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527482+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4b292145-ffa0-454c-9d96-0d5eb1ebad84",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_03.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e692dbaa2ddd44ea7be2543f4fa7c28c522801182463802f7003ef52798ce975",
        "deprecatedHashes": [
          "56bdb4683aee22ce1b4adb1c4d1a525d27bef820ca52e759eda4f65dfc6d4c52",
          "ed3c195a4270740ce1ec1a41ffedeecf049bb2e5f58c1b96ef4b94e7bdf14e34"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527482+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2fb9934c-84ed-4047-8ede-e93a52be9298",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_03.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c85959f4d9ad879f7817a7b1c5b2b5e82382c1a43f0e27aec27e91b294e60791",
        "deprecatedHashes": [
          "3bbbebb139a180c0884dff4dac7fb7ca90cf46ae752df389d1cb4dee166639f1",
          "c7068a841697d33e8e736db156ca8b550e6306bbdae05ccb23c3335483c8cfcc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527485+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9688c8a6-3f3a-46f3-926a-69985af2d347",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7816b2ad06dc17eabc3a0c3f0c995de8e2ad530b9c9520713a8f5d3cbd5ff3d0",
        "deprecatedHashes": [
          "d28eb906d74dd471c660fe389f98075edb4acd795ab260840594be2ac54be49f",
          "52e8f864a66c50266b075235c54d8aecf9ed818851f0898b81c90d9917916504"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527485+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "14373a1b-d115-4d4c-9d8b-13bfd09b0bfd",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_68b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6778086b1291d43677b3aa236fc6b53419c1b404cd02c51650ed7131875de4e2",
        "deprecatedHashes": [
          "412032e66489bd74eacf7d3e48573f8961f272d6ede0130193203d191c72a100",
          "07d30ea62125a8f72930eeb81bad4023c20d06e6415e658c3fbd6499c8ca464f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527486+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f2b5bd81-c478-4b15-8e46-2e2ae24ddd99",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f50baa9b36230ce894b4b5ea9f8550c600f3f5fea61a8999622978c76ebebfff",
        "deprecatedHashes": [
          "23c077146e7002669410741a5ee7b8e7f7529acf3dc85e94de92730897538ddb",
          "3e6f2c273ef7a33344a55ba028e79da46d605e8360f30b5c409b80348036c9a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527486+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0cbba9a5-9529-4a70-aaec-3e603716ec9d",
        "line": "107",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "09f382cd3578f79570b28faa116076935593ec3da9421ae95fe8a1a0020b160a",
        "deprecatedHashes": [
          "2586cb95f29c8f08db6b49aec00f524adc551e20909b865b98f53f889ac938c0",
          "a39606ffc23ed464d42b2967de74551180cc216d91ab2ec9386153d3bb70262f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527487+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "721742c4-7e21-409b-a98a-0ee08ce255eb",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6d25606d13bd80b0c9df2635b48d99581a5ceb8c55c10eaa315f581dce7f11dd",
        "deprecatedHashes": [
          "50433c5e254a7e5c25220c8fe2a800bea928a92d13b397a1310c1628025af713",
          "dd8d2e66bb63048717cb36428db38fdefaf4d2e5242bec4200da768f1ce38af8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527487+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8b7a083a-5547-4790-b411-7c67b7016643",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5d3d6993a6a432a935278edffc105d986e0ca370e52e2a6caa90815f1a10be61",
        "deprecatedHashes": [
          "3a0f7f081fd7537ebf87b618b557f471af9df054674c4ec4f76a7d9848e0cc69",
          "0680220efafbac5a32ae79863fa38b031276bfc610f8c3fc9cda619da9f818f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527488+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4c88cd74-6dee-4bdd-8518-9d6ab1915dce",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "513ccf723c83c37548a17e965dd528f9dcaf9aa00891364b3b907fdabe7671a5",
        "deprecatedHashes": [
          "123583aa50adc85d99717458ba987ed06dd0520821f2cc49e02206c528bc7eee",
          "fbd2bcb7f808de4332a088b8f876a0b5f36ec4b32fb5bf0cc262d5ed2ecab438"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527488+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "73a11c79-8071-4239-a53c-e7c44b303427",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ad790f7834d5e67c994874fd5096c600b817df9aed87c814638a77dca277b4ec",
        "deprecatedHashes": [
          "19af0a90f2315388f4ca7c6b84cd5af73c7211122534948637b35868137ed218",
          "2a2354af6250528ae9e6aa47e5cef63c4393983a1a055e6674811e5619d65079"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527489+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cfdec1d1-f187-4d12-9b67-1fa78d333f85",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fd1e96c383d76f649bf18033b3ab7d8668ea7b157638c78f505ba270cc21e518",
        "deprecatedHashes": [
          "b81df26b05f392bb15563693ff1587b2933c8f725d3604efba36d8850f08be2e",
          "b988af9b5fc4059732759ec731d954d5fa6e8ad75a79a30faec9efb5fb4dab4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52749+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7627ca4d-8314-4e2f-804a-08aa11f72386",
        "line": "50",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c33c7f25e9feda2f3f27b97d46153f0aca4303dc4910da726c053da632e2d613",
        "deprecatedHashes": [
          "b26f61d0316f400681559eb12e2670b2775149fd19dc99c56302c75f90075d2a",
          "34f3271d99a7660540a24ce77cf752526571cb1346a29c4d873b1af5055c58e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52749+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "34ea4559-73f3-4ac4-8272-9c53a158f11c",
        "line": "115",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_45.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ba9df248d0b698e182364c2e68924f069e0585a261558543afbe1eb8b677e87c",
        "deprecatedHashes": [
          "0f66693a844067e87c42ae04c8d5f200638f7575701cf889da5741caa32ca498",
          "6f02bd64941558b7e1d0ebd3fc9e0dcd08de9efbcc46e56c90bbc3b4ebdbe80f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527491+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9e094e6-d9a8-4e14-b9a6-e782987692c6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "22eefddd7e84e06cfd241387e1ffe23bde1c06f730b220e3ace4e84f689ca6b7",
        "deprecatedHashes": [
          "6c3e08019f0b19da72a5aed813bcc6d2c3da92eb2402cb53915cfbae62ae1a0b",
          "53abc04454c8b4796e27d8c0ddc31677b021e0695c6dbcca4734a7fc76619f87"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527492+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4a67642-bfc0-424a-80c3-d931eb3213f1",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_04.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1368f73c4a86047c9798552def81c237cb865bc9a0c18938e9b201c2ad2d60ab",
        "deprecatedHashes": [
          "9ed73a44678d41011f611ce7ee7eb6672b1439c9c6f4abda691efcaa31e2c2df",
          "2a74b65c928f70e92476b953d9fa37e9114de60fc0011cb7dcd30960112a9fe7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527492+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd25203e-0822-4967-8c23-ff9ece257fb1",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_04.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1956d0bea7353b19c9fd1e4ef3946c3406f3d4aeb61a004b95aca59363a2cd33",
        "deprecatedHashes": [
          "7058fd76356a820a986647aace82e5f1857353f341b1ce9da924874779956562",
          "bb1dfc55dc47a10e5ef644c6661ca407f8304010f6537010eac5a7fec195cb58"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527493+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cb108a9f-a5f7-4d8f-bbb1-bd56a983a315",
        "line": "59",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_04.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "f7be513dec844da8dee9dc503f1db6c6240b41a82df3177bf5b05eadb28b4b76",
        "deprecatedHashes": [
          "f4f52310ad8789969ffa71162193b90ac49cae7153fb8340c2d8a5a93877c488",
          "24a852dae27b85b676274939d15828237433032058ba0fcde713791502b32ee0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527494+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2187ec91-9372-4c9d-b8b0-f4a54276a459",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9b8bfdd3986d1ce1f43cac35cb9c1c6f3abdbb1aef82f9636a3d2f5050a44a1e",
        "deprecatedHashes": [
          "a2eaebde6a4ad88c957f84e18a6201c5881b689b854ba52b63d372299022eefe",
          "3a53b6cc857c8574ec7b0313ba7302b4d827c6da76d122142dbe6194468acfdb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527494+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ed09270-ea68-4bc1-bdc4-850a0c2e53fb",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "540ec0f78f8e861e799818b1b75f0b134db1d2c78bba8b594ec98018eca4b723",
        "deprecatedHashes": [
          "2e358d742d88091310513b030b87b7ab767ff4da50d02c753ea868817c357ba2",
          "e6f14461dc26911815b6579485cbaba367a81629b61d2eeca197b2a2ac910b05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527495+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37a7293e-c998-4846-980e-9cc6db00e13d",
        "line": "46",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_22b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "457d028ed266f28ff6632a1128ac3c24cc23cb74bc3491b7d265a8cd3d1f57e7",
        "deprecatedHashes": [
          "67b06b7da90dd59f082e0cced71dea2a66032e79d0d569ad9eb96ed46fb01eef",
          "0c7caa39fb6f72cc84916ee9bb0c37d7ab4bf01cc93d8d18872fe34c1d4058bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527496+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7e3398f-70ca-4e9b-966b-46e3ca89bf1e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3b234ad3a416511f411b4be3b0023ecf1755b446ae9dc66c595afe65299fd38a",
        "deprecatedHashes": [
          "7b98d4fdb5e08c41c45f2e24a9509af56b7d33bd4cce25780403b80626b52f3b",
          "fbd57b006b95f282d5824b9c9979b79e800848e031d46d26b39095253f81c0ea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527496+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "82797539-32d0-4370-97d7-170e15f5c258",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b992e981f5f75ab13e5c54eeb6defa320a8402b3d19b2dffea540e607460eae6",
        "deprecatedHashes": [
          "122736541581c62aafa043ab99fdefb645dace7a3866d49c631e596f8f04d52a",
          "503c5c1c29168eaffef5430320b0fe1b74405948725698cf649385ba0c133f3b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527497+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b1e4cbb-dea9-4d29-ae75-e313600faa72",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "80ca78de4d6c24cca50c174ef436749b23bb7d33befe144eb3d5e9273131f47c",
        "deprecatedHashes": [
          "6d87b6822cf457b8f6de224c1423475ef5b236d3d03bcc6143cba1f2c175698e",
          "b503962a391e7e771f00521ad6c2463a29981be1fdfb62ed570284bcc6572678"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527497+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b266b108-1864-4264-b9b6-db9e247670a5",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "46536514ec2ea18936b59caa0292201626a1f68c2365b7695fbe6b8ff5d029b0",
        "deprecatedHashes": [
          "3ec10ddda89616343199765bf65b793ac1158ae8a9598b624febdc1a6b32dc82",
          "26e72659fdcd009db7779bd5d3d5a2b8020fb6712cdf872a4960aa9d75e1eb33"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527498+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9fc00b0-6cf0-49a9-8b59-1a00680b096e",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "415b58d9fc3c9beef741b20aa12b07e22b955ba4d43294dadd506d115dc00679",
        "deprecatedHashes": [
          "9f58879be828217d7d795f29da00326891d0ac649e2f1f4ed31df8350a8af9f2",
          "4fa1b5c52e5ea37e0c76393a4646361227e05ae34090a9fae8eb4e13434460fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527498+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2fe20cdd-326b-4ae0-99ff-370ddf17ed7f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6f82d9badc28d439e7e61b4f3464d2432889daf27fed1c90e189818ce9c1de0f",
        "deprecatedHashes": [
          "a01e524d6970ad6d08a16f92589c81eaf616da9329b807b3231da144daf6957e",
          "bb623b6733d74bd13c80fd959eed13a27ce8c3711c40629ea9664b96ede9d14e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527499+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f0ffb03-ca4d-4f1b-a436-a37ca25f599a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9aca2023a87ebfc267cf5719bcd2710608baccaf536a0a23afd2c6ff243a537f",
        "deprecatedHashes": [
          "8d46f1817081e2b4e0a7d99055cf781941588331c799b8e90652bd5252ef6785",
          "daf1444d2eb4c5a9c73b4e76cbf946c3b69d27ab048c4f14d445a6751a21cc86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5275+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "70edc4c0-cfc8-446b-a939-b84264008e3f",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6169022f6bd93d422879f9e2569a4e674cdb07b6a560e37cd2bb168b8110a2ef",
        "deprecatedHashes": [
          "fdbd57d95f1e86629c032c3ba27777c31e435ae451f0b561d4a4fc4208b83303",
          "90b4636ae1d682205d1578abe617e1bf069225e5d276212b6a6d534d2d47c752"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5275+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f32e7ab-2ff3-4aed-aded-5b614c24aac8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f8b22bfb5dfa218cf568f7f236de809a938c3230c876f1540bf63cc966de168c",
        "deprecatedHashes": [
          "4fb66f1bc46529f29a3b4b4a13caf6f1820710a68b6c611798caa71b41e2de33",
          "55f62269001763434d3cadc10200de699f17bab8af10e9f4f39d22f22c713caa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527501+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "268abe1b-c1fc-47d9-a2f0-9c2ef972593b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f44dcb452c56fe3410f091af65d3c84ac75a430ed6ea67048e9b3f6fb2423f32",
        "deprecatedHashes": [
          "ffe1f4dd96a144fdedb1d5d7b86c468152479fd6fd5dd25cff22417a98cc5475",
          "3e81a7be9163f91651bd2cbfcc2505b0ba9a1d0431b8f715f843ccb95b754156"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527501+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "147b4ef6-d266-4a4c-b660-5cf824b1fd33",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c020a1a2c2c8c69c3298c7187536bf102fac458b75685270d7305c26884da35d",
        "deprecatedHashes": [
          "714197e57ca50b06dd0db149ebd8062154576f5091b775ba2bc2bb63b13db1e4",
          "7c26777f30530d21c15eff275cf86511707682eb07e8ac1ba2a949accc0d87da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527502+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e7197d0-2aa9-4eb5-b72f-ebce6b24a4ca",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fb02e6a58c571a9e2e7581cb9d0583651bf485cb2770841a45ab822f9ab726be",
        "deprecatedHashes": [
          "f41a6ab6a11447349190da207b0d04584c8dbb8e3b2aca73eb0b32c7597fa7f2",
          "76a97f2ce46b6e154fee556da8a641b3a4d35b08c5bdd3c6e6b33266b3856dea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527503+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "40553ff9-27e4-4399-a9b1-abf29dcb1458",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_71b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "30c07a7e0c86fed9a8100306e1bd550854855229ac9194cdda13c03557f5c5e3",
        "deprecatedHashes": [
          "647dea95634d0b7388e84ad38a65f1f9c959ec7bca6814447c3842168c96fbf0",
          "659c5182c934c0a63da8143f8bd0d1821dfb5a7f5e7f7a3e40bdecf0d4643b70"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527504+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ad49c185-81f0-478c-b24d-bf71f9bdf7a1",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1dae0f173fcd83fefb914092b6a63ad0a5ea0f69961d5ceabb8948ba9e9f642c",
        "deprecatedHashes": [
          "d23667a8dfdd50722079aaa89a7264f39797ace1f3431e205deb932c13145874",
          "d9d201df1866e1ba3185f51fe81b1573656d95548ab689136a152a6fbea242f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527505+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a0ae4c7-cfb8-4777-ace6-f12dc28573f3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0627e51a7d1763cc372512973ff2ec7a3c299445b9de87c117385067a5465e13",
        "deprecatedHashes": [
          "ad423179344605e99b74af3b9df04592d07b44b7ef62bc035918273ef7eb670c",
          "ba8bcad62d1a634e4432ba20f28b917feb67209b9909c76b7b2d9bdc92374365"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527505+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8d45682b-3105-4adf-bfb9-c35c3f27f384",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_11.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "448bba6b0ad0caa405219a1c66e26bc8f251e0d6356447f7ecfb496faf78a2b4",
        "deprecatedHashes": [
          "fbda2ef83ae4d7a07bedd906a3d8f790310b47bd89e18224ab5fddf4999063e0",
          "111ae13392bd9f21bd7a50db4e627e7659ff6207f5c8083976a93fdb38cd5cf7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527506+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7203b750-7d62-48ce-8170-df6c0bcef472",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_11.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "54a33f4554ffcf1e332ace598378af5dee19c0c47bf7ea4da1be7c049c4fa541",
        "deprecatedHashes": [
          "17b7bbd9ace2ee27f5be3d055f47cfad21dec00e8494dc9511d08f4bfb0e8e36",
          "4926c28cd45a961284d6d3ac07b2aeec19bf3f2aaa584c14387da9aafa8fc22e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527507+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b5d68a6-e88c-46a8-9013-4264c864bbfb",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e0b2077aafb09e6cf9f8c2b022ea9e4a0d0af5dd4e1b5eb1547a12e42df1f717",
        "deprecatedHashes": [
          "e04a4381dfd2ff27e99234b6fb41e325aeca618b3f705357294818a2fcdce297",
          "fb2f9415ea96a5ebcc3a12d341cc66b025eeb361f4ce817becdfd2f71c3dbd0f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527508+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c955176c-63dc-4b45-b7cb-6af074bdd427",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e1ea111a630254d532092fd1127f028335dec38b4f8c9177253f9fcdb737f706",
        "deprecatedHashes": [
          "e3d61dfc82d89a1c9f302450c7f491296e6e1fa3e0fb24dab1c628ab6d2177f7",
          "96dd07c68373f85dd7620921eb6ff0c0ae51cd920d304686cb3aef2a94736f10"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527509+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aaf15f9f-dfd2-460d-93ac-79358cd1dd85",
        "line": "125",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "11c708269b0c219fb6b5ae83652001991222907cabc89f57500d5a5bdb6aa4fe",
        "deprecatedHashes": [
          "ada9644225d7863869f16f47bdadb76061f59d96574774bf3b21dbc3ae22ac68",
          "180db31e9ef7132f3f565c498510db6c18c697cbf3d87388d8699d074771c8e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52751+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e9f799f-a4e6-4892-aafc-9bdccdfeab5b",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "44dde9f6365daa72c54d9d1a83003e4c4df5f26bf273284cf986563955574518",
        "deprecatedHashes": [
          "55f0cc8363db7a2f6bc23b136289402dfad6bb36729f0af9375b607690161bc1",
          "a25d5d0ef12907bc353be8e8ffcfc34774188fb2a94459fa0f016482f3119577"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52751+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "958c38e3-49d7-445e-8290-9c9ae653e1f9",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b5804fd801d17960f2d4a8c07d2b9cf15ef7d2f82c3fa9fc12701f7178b1a5b7",
        "deprecatedHashes": [
          "f286f6214a9439942aa25f72bc0fbc4b31716999d496dbc2fa2cdcb5a97f12e8",
          "0279df43bf2e16910ddfd0087f4f0908479d469447ab79675861b132ed79e969"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527511+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e86e350e-d15a-471f-9172-17c3ea1ae528",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d261bf69a9e50881140e2b928973afb60da3f21f752348c555937f59133b4900",
        "deprecatedHashes": [
          "589d23b8b85a61bdc75b8a6de518ef791144f6886a315e0d84cb689670a16eba",
          "9ba77f845da1b5d03209a1d524efea62b9c77df846bb98481ca260dca56d05bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527511+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "57940213-a7b6-4003-a93c-47034a7eebe7",
        "line": "95",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "38433315a3d24f1b532fead5951b56de220a69bd57e6324d772d029ffbb059b0",
        "deprecatedHashes": [
          "839030e0995d0c02be827df4c10613757c785bdf9ddb20a92f691105a3d5a215",
          "1e983fa25fd7b43d6ea62078304740c5c65bef3b345141d334fde7a0a62b54ca"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527512+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d368f4e4-3b2d-46ad-bfa3-34af12c9b65a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "913d563ec86d23ad4267e25a3283f6e669c8dd803f14def98c0c7e1fd1fbe8ef",
        "deprecatedHashes": [
          "2299026381643edef837b23ab87daf395e16f935880680a84474376584886f98",
          "1db5cbcbde1c2d55403899bb612d0ec3a596d76d9b6a9321cd26e763afc315ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527513+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "861e1276-469a-4c02-9cbe-19e9f04e65e5",
        "line": "109",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_15.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5b1d86d445e699cfcfed7e59d91da5fe2fa07125cf192def89df37f471888dcb",
        "deprecatedHashes": [
          "9d47c38df4c855df2ec7cc54327f3aecb941f9e4947d223c60395e8edf66362a",
          "2f618b3c4047337749f60ec0480eb737e42b7fce9f967083d4a8cec5977c9801"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527513+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "96d3bfa6-6dba-4e6b-8f08-990406a58a7f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3cd1e803122ff5f23c865d64378bfdd60f7827335614e418aa01c41dce0ad483",
        "deprecatedHashes": [
          "0f9a4642906243b487201cc8f55b2d1d775466ab282075c2c2b5c5ec778abf02",
          "acf00b26ffbe34ca2e2e467cc59e620e3d2dfd4d2b304774056f7b4b624f53cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527514+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52934061-d627-4c1a-828b-677d98a02225",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0eee27f3659f7402791c4f949398df08f7d778937468b8fc23d8b1fd79b921b5",
        "deprecatedHashes": [
          "1b0e64e8dd61cad55987a83e2b1e4e8c9f313211d2817deac7f4cb331bf8b77b",
          "298bbca6afd3687b547399f5ce3f01a45ee1dcb96d1259957fafbd7e3b70a670"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527514+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dfd7d51b-ef55-4089-8539-510bcd6a12ad",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f0dc9a527a5497acfd6a3dae7a377c47db850bc23e3b599139926760e19e6560",
        "deprecatedHashes": [
          "129b810f3f8b78caeff39ad50620c84b13301575d58a3df05d61f2c8f9d7bcb0",
          "565c0b5ee2f3af8558f12c42bdfe7025e63c0f37635a501152494627cf003b72"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527515+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4161b85d-2f4f-48de-9771-254badf67fa8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e039419b9853787e0b363f09adfbdcef6344bbd447aabc46a464da4f0593cbbd",
        "deprecatedHashes": [
          "99d4f8b6255523a46b769dbde751d6d29dc8ca80c7d31cf5bc1f7e3474f5a989",
          "0858e0cf25f7cffe5e1fd2d06f398829642f35013f45d2a42c76fa388b4f3d07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527515+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b160d33b-ec9e-4908-b520-d80c1c141407",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "067dfec1ee5b4a9fca85cedd6b0d6fd305d559f88681cd7a5ed19c749e80a69b",
        "deprecatedHashes": [
          "312b1b54b78663698031646d6767c4d5998ae1fa045ee18d552e53ce067c3025",
          "1257ac48ace8916b40ee06b4ef382ba1050ae653166fd702ee981f47e3374ab9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527516+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1779a58b-2864-4695-bb49-75f3a2d56f1b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5eb88ae03fbbe8d4720dbf382254a26b730c37ef6d5170d154e3a3b344b0b8c4",
        "deprecatedHashes": [
          "4ad6e7473af6398f8309bec92a23ac38b3bd88b59b8ede614535e96bd3e4e02e",
          "8d7a25117090692bd62521089bb809a3a423f85518ad1bc22c225a51c7967c7a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527517+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f4bc2c99-e6f2-4df5-9f72-226529d55346",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e6e24d51c8786650dffaf4ee8e0194b71cfa23f5a74082de7ee9a2c2aec0bcc0",
        "deprecatedHashes": [
          "da4c57d6f3f5600f6fcd86960b4db709667db69e8d2b53280c2fe462d01913c6",
          "9b65c1417b565f79dd77d98fec1dcb62a34ed094eb9562e81851ec471f93c1b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527518+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "45960b46-6e13-4445-9b2f-1322a6478b70",
        "line": "121",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1b496de13b5c0c4f9d68d8f7ee9929fca61dc8bf5f47eb6e6362669c3a10f791",
        "deprecatedHashes": [
          "b51d0c956c3e690baf3e4397920c0b9a4d03ff3c07376a3ee389d18fc442e2cb",
          "e534621647a8740990e4887c42b717675ee68d86e134be57dc93972018784de6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527519+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c6135ce-f566-4c2a-bbc9-282cccabbf74",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c6a30934753a886ffc0e70811f81be02ad1cdccfc006adfb0d0374b98a547a8d",
        "deprecatedHashes": [
          "81641f6331bf16f6bdefbccca777550fe15737a2de687d593609edb64696ed70",
          "a3906e98d4d9fc5431488b5dd4638236f3d927dbecc5b60938ce50f3765b5ea7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52752+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7fe15715-7643-4563-ba3a-f59918c53f02",
        "line": "131",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e33a81d67f103968431a932b59e58459cec2a92613b9a2840ef0afa24315d39a",
        "deprecatedHashes": [
          "41443465393a314cb461c58d963316d285a354a9e98f7726503a1b1166a516f7",
          "c99fdfe480beabaebe67cea661057a6334f938804b551aa2477682ce4ff2b402"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52752+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "594b548c-a402-4577-a948-7e2fc690bb10",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "37e29c7a70cf5bd773b243c5d782199a2848a6a23579415c8a3278049630f7b7",
        "deprecatedHashes": [
          "01da76c4aaf2f58cf524643879f3fc0ac9b6de74f639ea1798988fc8b83b79b5",
          "3bd60dbb2a100f3786a59612e943ec737bf7bca0ea2eee75f09de17e6bb503bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527521+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25c4d081-eeb3-44bd-8dca-05f8a29cdc15",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ffb7a662400312c91708943686face09780dd641233936f228ac67a114164aa3",
        "deprecatedHashes": [
          "f4872cf4661c6b0f57474faa3980ded297f07b7c806b3ac64ae773e96479d6b4",
          "2c83d6289ee4fcddfd3b48e5fec3b8c0e4040f479379f4586fcf996fc6495768"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527521+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a6eaca7c-405e-434e-ae02-5f7d91f22c01",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_10.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "761bc1a9869fd8f6a68e7bcd195d3ef28bd5399bbc4e50e9eb9a2d56bab8fac5",
        "deprecatedHashes": [
          "48be79c23db837e24b467c5b3d4ec50d36b52cba81597b92bca1ee73bf004df0",
          "5c03ee59022a254097a4c9a55651d53a37d5293e9a9a802298205db6aaf0f1b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527522+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7583179-60b0-4dc5-908d-39d7be48a1e8",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_10.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5c7ac1e92d9aa680b37b6c8d580ac4ab36bae6c247f775f4483f38501ead66d8",
        "deprecatedHashes": [
          "40fe761120928ee841c4b7de9d1115ec36ecfc468a493f32ff82f3b98654eb49",
          "9535011ccdae1a658cdc3c55127699b50232f47d9ff101210d38f926ffb0f42f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527523+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c759fcff-aa00-437c-9f55-2c541bee3391",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_52c.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "083e0e38c9a5d0439cec1f92ddc816eb4f5cbe7cbbaf3ad35b144a9f888ccbec",
        "deprecatedHashes": [
          "c8779d1c67cd96dd4607a317228200099dcb96dd7f5339f9135ec83e7f8e110a",
          "bf1fabd74bb810ea93c533604408d06d137b97ed0bf24e8387665fa1fe11597a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527523+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2491aa29-3187-49ca-a3e8-0f78ab940b9e",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_52c.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "acde658af3d36339346c7183daa0fd7604de6446ebf08faf2f082caf7f618331",
        "deprecatedHashes": [
          "16be1e8ab1a8915fd9e5a1200cdc1255a27993d16d2f1356ad89e5db73a9242f",
          "7b19804d04f169e9c4986a23ce9630b5b38402b90307623d274e0692951c8455"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527525+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "43fc12b7-ef81-4209-a2b4-ca05f0ba1aa9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d09c0e83fdfbd773a5a22053bd1bc0e629ea4835a75bfc8e60c6634ba40f18fc",
        "deprecatedHashes": [
          "a64f32974c17b7b1f81f906c8230e262d9e096d6e2aee995256a64279e88fa4d",
          "d956809f3b9f49ca26bc52fef95a5d9ea15331502ca459f3272cb41fe67dfbba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527526+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "78b203ad-a5de-4da0-92cb-ac64f5cdd812",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a7655be86c3f53ef39fc9c002f7e38d8acd3e5dc41caaee9a5869b7a0bd47fc1",
        "deprecatedHashes": [
          "9416f7b1968ab165e9f2d4bfc51ffd81c080fc46846a156ece201f6caefaa6c2",
          "49834644bbc6c1565beb582c0cf2bc7bbd73bbc9bb2e05be13377c585a5f0845"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527527+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a261ed59-5d8b-41a2-9858-da61edc8c67b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "54866614bd1721fffcc5be5cc12b738727e84928c95ada2d9baddd2255badb13",
        "deprecatedHashes": [
          "9d65b88679156ba46bff70d07d312950d2966a1b99ee05977a4a6476ac6ac730",
          "750f995bdbb6ca93863aa7faf4f48f49b6d846bec84d8a1e5038a4521dbb1032"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527528+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b8316db-c019-405c-b01c-ac356dac8a96",
        "line": "122",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "546e1c5c03cb848d2ad6a3108af1d31eb127ec978d889394b404b4d8bb8639e2",
        "deprecatedHashes": [
          "2f55691678cd7dbf41118abe1cd48ec1a182cfc8f33b8288ef066b543dabdcd1",
          "0c118d3af23d75aa096ab6ab70681b78a92e3b71eba46d54cb04c2acfc442096"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527528+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a112e9f-04c7-4c8f-bee8-9640e41e2413",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_81_goodG2B.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "34a8e507189c4835d94d6c5ea45da785fa0cf4052e386f29743797492298aba4",
        "deprecatedHashes": [
          "c690e935b605da2c2c3f9d67e6f1f358774c15edc1a8b4fe449834c56f83b94f",
          "15b16aba85b89a6a2c04b489808575ce15bc3dd5234194b5c19fda9c6733f0a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527529+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f6259c27-2ba4-4930-aaa9-0b4f756e9568",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bbdc2bcf6fe14a5d697b0a4a0101ab02fe4fde531ef28637c406267427dd9a1e",
        "deprecatedHashes": [
          "e04bf1394bed88987359af688fbd190c47d2e13bf321b26c8d787f8f9fd8970e",
          "95bc3d6eaee7e1761fffb31733e9dd48684582cdaff6ac93764f734d3636f12e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52753+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b24dbc77-7890-4fc8-a3c4-37ce4388752b",
        "line": "125",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7fd35f084bf6ed59784797a7f4fd98b5a9afba0464cc896e99b6c370519dd1ab",
        "deprecatedHashes": [
          "d1c1a3a6f0c41fe8929de35ffd1f03526ac750d118e6b0b42784dfbc33222168",
          "38b2aaa246b7858532ee2f3560fe5c030a3ae08e7b20f7c77767a9e543963f08"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527531+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4fec7e04-f662-4b83-86e1-516576b08064",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_75b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c4c327ad5fa0e9011aa4833d9c9549403082c838725e2ebdb95cac6cfd3b5013",
        "deprecatedHashes": [
          "67a76e8be5320d53152ab5da6cefdf3708d282ba8b37547ab6a941ac3d37092e",
          "ce638cd4c427f3b9613de6c18c4b1daa1fd0abaef53def34c09431d568d26617"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527531+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "449d3cc6-3eac-4a8d-851f-d3e5a8d41eaf",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_71b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e6421885c5583032b76828eca02298e6d61b7ae4ee6f83cac3be17ed8e41b84a",
        "deprecatedHashes": [
          "831e8f0e3f2e1757c89916846ef5925ca306aa1883614678a73a416f877532d5",
          "880bfde56a834ea97e126d1ecf3fbd9298cb857c93281f1d29e0d2f648a9837c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527532+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "992e5600-d06a-4596-9492-22e9339a7624",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_71b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "95423cc6cd1d01c218abed5648435df3d6972e6f2b431816e0247f2e26475bba",
        "deprecatedHashes": [
          "a5bac9774edbb04dfdc168d55761ae43722fbc0b1bc6552aea4becf84b06e0b2",
          "896b3b45215f722b2c184e20d922079b09312e6fdd4cd108331ef49dbc5dfde9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527533+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e10bddc-9c64-41a3-8dfb-219b725d8905",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0234b64811883b104859e3a86ba0b9b94b9355d1991e483c148b3d5307346c50",
        "deprecatedHashes": [
          "dc89c191d42adab064f5d24cf7aa616ce5242527f3139c6b9853199947339ef9",
          "50292a6e28e9764aa10d8c8fe831150387f0eb0a87fb5c8cc679c3525789b215"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527533+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3efa813-863b-4693-8a7a-c8bf3dccf6ff",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "01e3e0021e0b4dc2fbe5bb1e101ddc72b9f14d1cf22489f86bd54b0c6fa0e9cc",
        "deprecatedHashes": [
          "7333aaa126d14060d7ad8896faf213dde45dbc10d29c47fd8f4a05e7fc443645",
          "e956eecfbda03f3f3770413cb88ec4379bd6e629d95f28277b5d9413ecbd4b90"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527534+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c20e0788-cbe1-485c-9b9c-1df8cd2e2771",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "29c2825a78c4cb8ebb3738b9eb241961597dbbb3efee66d5b1f651e012ca8b4b",
        "deprecatedHashes": [
          "125b5a4ecfe73dd30898a33b9a78a2240bb78aeed7ca404c1822876cfaa5fe12",
          "dbd9708c745a03b511e266502088fb3ca47e0245941cd6684b4863141d98596d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527534+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6448be4a-cf75-4c77-9914-0d99fce0cfaa",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3734294225f79f12e4ed18809e91b0ecddf10bb8ce3666c8957a886a95dfc363",
        "deprecatedHashes": [
          "d22a06b07107c84dbda6e098bbe96ff6832562b3c8b6693f654c0315ce8c5351",
          "4c97c8e93e3b6271799a4d6d227d2549cfe0bf2443efa7de0746733e5bc5810c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527535+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6504cc95-ae1d-4115-82f1-c4253d3c72b4",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_11.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "937317ca229301f229a9ea4a4109d2cac249b9dcd64b95b391f53da92f317e62",
        "deprecatedHashes": [
          "38292fb29d0942767a72ba4450ddb9099ea060159ae6430ffa8450728ebc0def",
          "a3501015fc247a239f6d3518875b8821de0db53a821ddacc21470e213d3b2e0c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527535+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "71340874-cae7-40b3-b115-31a42b5233fa",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "34204469367604a5a581b8663716f8e15a9b50a4d7102e84f755fb979023a0a2",
        "deprecatedHashes": [
          "137297c99c05bf6d4e69778353ce940736d382bbfcdb27b6dbb03ff6154e044b",
          "13064b908d56b7233487133caea46ca6bb0250aef9e81cc0608408a81238b50e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527536+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2e6dcde1-f89f-4ed8-82d8-c48869818dc9",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1c5ab3ba987c4e1f0eb30128e9926e52b0111603c3d144b8a9233045e70c2dfd",
        "deprecatedHashes": [
          "7b82ce7047201d8e5dc6caba3aba8ea990d2ea8664241d98f59e62b939c380d0",
          "3d76f1657acdc07d32a6cb18332d80d2d52aeaea2b1a512887c7bc99b4379cb2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527536+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23f089ab-cf84-4401-b71a-f1b3a6a8ddc6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f960f87d88e54c4c8fd6b97de6fd4807e3a66c65957e364da9a40e71143e0835",
        "deprecatedHashes": [
          "a5eb8a684f4cea1176d27d3582a547cc8033c1d2295ee906ce2ebd32875b6e1d",
          "971f1b38a624148299e6d49e5be0c7e58feb6b17fe813cc73ead53d704adf532"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527537+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "60ad68e7-1b2a-40f2-af98-3d313de1f4db",
        "line": "65",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_06.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b0ee05688e64cd638a9651b06ec437e382cfe64d512e81b19ad9f88ccd8cf60b",
        "deprecatedHashes": [
          "ad6d39591e66955def5b418146a57c56c160587bb819b07e75313f57f4fa27c2",
          "59f44c9b8a95470031ebbc9f5eddc82f8b134396fafab1b1f1266a2e3a7d4e20"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527538+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7999404f-b71a-4e2a-97b7-c16207b52a0c",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fa1f31c5264f3a4abb83fbabfb6fce4c9ebfbb03628df184ccd23345e8833089",
        "deprecatedHashes": [
          "7a33b1b8e4f78c77df3c17315d90aa049fad6f91dd74d49c7e1bfdec973d9301",
          "37edb58e5eb9d151adbf7d11fad9c6a8a0398bbcbdd7fa43968b2b1d7ddc227f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527538+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c5b3aac1-cd4a-49c5-9f61-72168534753e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "580dd1651999e42065301f88d9b862a2edd8a23775538e71d2b2569857ba02a1",
        "deprecatedHashes": [
          "16d4f722106a2d46f2f00069358dec0a019a72ebd87f7bcd7149dbe9ba0fb32f",
          "0a4a583fd108f493f22ed5eb0ccd23d87bbb788cc83032e1b20be6928414c214"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527539+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9a09c059-cdee-41c6-8b6a-46f6790fc954",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d9df25cc994737c07a7359534ce5fc89182eff3c43313b966049e78f19b4b1f5",
        "deprecatedHashes": [
          "049029374f4d7ba8f3f0d9f2e381e966108870361454a6723e8ea0c2265510ce",
          "9fa836346c3d83c1139556a5b65e0ec55fbe020c3295026940f7cb70b9a41106"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52754+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f34161a9-070b-4002-a53e-605f53217229",
        "line": "52",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c4ccb622c9f5a7baed0d5bec3fe16bd63dcafc2fa99576b78b4519b0a8442079",
        "deprecatedHashes": [
          "ccd784e92b61699a26b247551216bcb072cd52513f1aa6e6c8a73bad38852b30",
          "f392bbf81cd913957630dbdd8f9b950ec43564248678a8e2371bc9e45ef54876"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52754+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9887ff96-b38d-44ba-a51c-ec97f0cc1284",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "beed10f58082401f75690cdd1b27e0f41469c9dec78c3467fd1df4c140c071ea",
        "deprecatedHashes": [
          "a034b08e198d36b55fd75ac9b3bd5ae2f136433d686330dda4c5439d96e4a7d7",
          "30b99172641392da5dbc7a4afd7fbaa4422faff50b0c9b06ea93db800e074c5b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527541+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "44d43239-18cf-4648-b77e-90a6e2dbbc1a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c505a0d083890726a3c418b25ebb51533c947628cf3c4f6f9886bc3870da91fc",
        "deprecatedHashes": [
          "ae82e8aba4d7bddb70f46699e43e3628679cbd6e0245d508e1d61e43faad78ff",
          "ddba52397f5917a48b6de4b9558267f5f0212ac30e6a7106e33183f43770ed06"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527542+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c6faf519-fcb8-4793-9bf7-b8dfd7e00d37",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5c2cd12743bcedac3fa9ae3a770acb6a01084b6b793ac6990cd0ab784030476a",
        "deprecatedHashes": [
          "c190cbf7fc253bddc6b36788e3f8c707817aa2ddc15bbfd4b16e93f982d92cf1",
          "73f01b5b29090e757def47682db09acdb157e997b92c208ded0dee755afca5e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527542+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "92cd8897-feaf-45e1-9977-e34a06cf883d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1752f31e44bae44c80a99fbb4ac8f013296b4e8d802c6e089a979fe865e997ce",
        "deprecatedHashes": [
          "df5a80ea56be3915a075841ecf75860d0af71615f04b756e62af18cc4481a90b",
          "6f662991e3717aae74a392bbd791c03dfa9385313618e2bddc6fe0d729b2b724"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527543+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c1ef5f5-26c5-4cf0-8057-b81e56617d80",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "27fb17ba87d570d63de79b8cdb004b4f8ff0453b43d3d1352795825df3ed070a",
        "deprecatedHashes": [
          "0d3beb27b87415574cff10da81ae2e888f1909a1119d4a6eba8943e0db6566e9",
          "17fe38d43763192578afc598418d0de69645560c5cbd25ac52bfc732b48687b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527544+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "436d0441-2511-4fda-beed-46c52f94457c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "996aa2e27540859e7c89ee2a6712d1a94ba32b07a8412bb0fbe2096f0bb7d5ca",
        "deprecatedHashes": [
          "d956489663a10fcf82522747ea8a548eb4e78ac328ce0a661572b0a456c13241",
          "a23af1f8d5584339eb079779ed0da089c1ffae52429aa71caca37c83178ec8c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527545+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "321a43c6-b8d1-441e-bb5e-53360f743955",
        "line": "126",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_04.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b44bfb7e0b4368b4250899508b7ada7dd4d6dca91d89900be418423ef2d39dd8",
        "deprecatedHashes": [
          "9bfd6a94e19c7685258f61e3456eae1dd6c7b8c6d842fca1d8cebbc472d6a224",
          "72e08a31358108cb9143d0e8b218816e4661dd46163aacecf27f9e4b1f1da718"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527545+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4b6832e2-8132-4a7c-ba8e-f6baa190b6c2",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_04.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a978c231d9ed5715ecd1849cf3f2ba229ce39975fe6c39bd90ff9cb6d6ff354a",
        "deprecatedHashes": [
          "24f4358c9e53fa6d9f618885fa313fff17478b2f359bb20a413b32c88517551a",
          "700d1846166d8f64dc6fd4b1c7f8c95251823ca1434ef16422d6059a99a80e95"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527547+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7c296fd6-7c2c-41cb-b55c-52e9e60eeaee",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a9eb5bcc54cf78a2896e92a2a5b5791d3692672ce0f1eb2b2c366d1d4d753230",
        "deprecatedHashes": [
          "1d2d66b2fa69818e09752f85392525907c811825152d5b25768bd4dda540e319",
          "30f8b9d155451b0e079fa2068842d9f71184e3ca1214a5919c591e2b42e883e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527547+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6fa0899d-e5df-470b-92dc-8d98819bea81",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_13.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7788ed9fa47095fe07b894da1a724863a2712a458a647a1294cf4753df7b4f3a",
        "deprecatedHashes": [
          "be520ddc22ea4d463ffe011c3b7f925072311ecc21023976ebfe3793301c2fe8",
          "89ad81a8d68922e88d4fe4e0b7b72d4a49be39f2a0b144fd0b79d8bd658e534b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527548+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "04576757-147a-4337-a95b-6ef5035241a1",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_13.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "fbdf336e6a618f3eec206446efbe846854cc2537bd7be10c973c1bd7c70efb0b",
        "deprecatedHashes": [
          "f47e3288d5332eb4325ec6169a9fbf32cc66449c762d9b8f12aaee90b706c7bf",
          "620545ddf1f9e53532f5fc631601b5990f1eaf90f83ddb8756c34185cc818c20"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527549+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13626fe3-6422-4ebb-b047-1d531160f70d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4d6027674fcfa49950bb9f003b465be795a5181b149d629d3d8cee34175779df",
        "deprecatedHashes": [
          "ce338ff093b25680250e09253fbf642797ebb3b806ca7d49b96fbdb86a0e148e",
          "fb6204a46ffc0c9012ac9a7561e312880ae7fe28d698400c904c711a837ff434"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527549+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8130cd46-a776-48d0-a45b-8c0ddf90491d",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_11.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "92157284937ce58de41e7ba06e6fceff670f4ff70f991512c18405ac54fdd110",
        "deprecatedHashes": [
          "62333b4351a35007b76d844d8e1532e5771ee66404be4d606326a6be10378d8d",
          "99f2c2446b338427951b9c5ea38e2c18a670196bd193d72ba36f08fcf9e81a19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52755+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec8ae27b-f225-4f7c-bcbc-abe32d699232",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f166319a4212de3326b7e37d27252d34b395ae159def7d40ab805bd6971872ea",
        "deprecatedHashes": [
          "dfb2e3d1e1bd090d8bc1c78a1c73d057f8549b4d8daa1055aca865a29b374bb9",
          "d70d2a828e9f6114d8f83b526d7f21a7220d074861552a208afb8aeaff6f04a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52755+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "827d6790-8f67-47c0-8ef9-7aa8ed6d36fa",
        "line": "50",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_45.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "44c5cbe8bd4d554cc2f9b84b6a61b5687e3467f0907b5cf9443addd2f8e33d6b",
        "deprecatedHashes": [
          "670a80f6036f35cd99665f800129293f7915ffc3385afb05106a44f3624f91d4",
          "524e176b74083d261fd2cc73f798bb46ad3548b5cb2d7f6cae2f93cdf72f5270"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527551+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b73c596-0013-409e-a702-c850f80b8989",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d6ccc9b3271593944075213aea927d7789986e29bdff7d510441d198695b5d09",
        "deprecatedHashes": [
          "0c0437a09bca61b7414d0df92422d1d626264a6d61007dd3d4f68efd7279a5bd",
          "90699336b045fce94a615a3fbdda9543a420e0affd4e1e3c72cf7e0332784136"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527551+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "313ab185-e16f-4f30-87b6-f28c691f24f5",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "136c4368baf6ebdf73216d3771cc6288296d9581afa628069230fb0cb863b0ff",
        "deprecatedHashes": [
          "8c53031a936e5341036e824ff664990ddd42c62baf19f065215c9b7d87343fee",
          "e156dc3b1088263b4b21f030837e9846989b52f5a483999898bcfb069ba9a6c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527552+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b5cc4c1d-4e1d-48c6-8cde-fc43889fb131",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "37e554cac626eebac07920bfcd897bf54f02c3947cd869aada8b65212dab50db",
        "deprecatedHashes": [
          "6267bb635adbddfa428a582b9755527b969587c489b01ad921dba6dda05de1b7",
          "7c026434e852a0ddec7ccc53301a9b8ce498022ce2ef44bf5acd32e6fda74312"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527552+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0cb49993-c2fa-422b-aba4-e32287fa60e9",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "543fd93b6a675af51e8b938fb2fb9fa490cbfbd571e5fc86c823a59e3b87a715",
        "deprecatedHashes": [
          "3ee4c58da9afc07c41ab28556859027e5d0acf26605ba1dfce1ae1f47ac3f27a",
          "a2ec74df8d0c11dcce1713fb8353ee96deabda03e7b07a555055ff101949d0ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527553+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd45f080-deef-4f59-89c8-91544a1e0dea",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "53cc3127496b86df1a4237972007ce396fc22a56da548a97de344cab2aaf2a29",
        "deprecatedHashes": [
          "450d05034169f1133dd76f2049bed80ee23fcafff890a61a8bbadd82e13e7ba1",
          "8d139e073a3e0643a8086c417613b761a61a345db434bc07e686aaac09e19077"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527554+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "995a1f11-798e-4d21-9424-4b0fb30305a6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "27f33466734b55bbda1181776e8259648c4ff5e0c9026e271ae51f3e4a9cdf07",
        "deprecatedHashes": [
          "af9bf4c1325cacf7db6dc9e12a960d6d1cbcd64c921226a05fbfb41bed3baea0",
          "5e8b5201a959ffbf727a9de5b7ef9f9db33daa5fa734779f26d9094841649182"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527554+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1b3fb603-bcd5-44d2-bb6c-b9227b71b4a7",
        "line": "53",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_45.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "33d2d0a0c212e38bc92d713422b704c2ffaea0aedeb074929f753234e9971dde",
        "deprecatedHashes": [
          "982e327ed628269f3b8ad3f2c31658782192075ddf708c13c6685b4f9023b48a",
          "c10af2eea4cc869a0d2feeb8e0e72044279c46cad48e92b6ea2cc2947d669bac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527555+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b36853d3-f3b4-4d4e-9558-89435c889d1c",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_45.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f603b49a35442095bf462fda88fdf8073832a868f52457cd8d9db797eaced82f",
        "deprecatedHashes": [
          "cfd03e25f4a0f2a780af01909570143417b22fd58eb579147fb2f942f975d15a",
          "8d93a9a6512481efedee2594b5c4b7eab4db3652b342091f9838cb1ce0575ce2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527556+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f3457da-0e32-436e-9d46-7f4eae2ec16a",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_74b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0b65b1479c9012730dc8eeff0e548fc863965d3a642f4c665c00db47f6275a73",
        "deprecatedHashes": [
          "2efac0d173ac9014459cff97892879545e932610e2a1099e6954d1f0fb030107",
          "36b42e5970e73a73229232f2d4880661c01ecd56bd8ff7fd9a84f1fb3c554b88"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527556+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d092b66-7cc5-460a-91c1-36bbde9faf43",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_71b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "99d56c177bc65bbce652f8647494f402021c8cb290e9078c85e2c3b28fdc14d9",
        "deprecatedHashes": [
          "692349ca4eccaab7ede73ca0786fad99d23861af7fbd9f8f80ab62bc91c21954",
          "b474742ababbca8aa85d2fa40267bccafbacc5583750303fb07f8b72c9778981"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527557+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c313fe00-31a4-4970-89bd-ea67222cc690",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ccdc711f077a8d257d47e1d64c3d7f04777671ec5b399d1190cdfb15d949a02d",
        "deprecatedHashes": [
          "3714f49f7c6019fb132334d8729b1e51a64d19b4262594e52c4b5812e4187cc0",
          "517abe5f1e97be5bcd13517d21bea6ded0f3d3a9e2b8c95c4c64ccb9694b59b5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527558+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53d29ced-c6e3-4037-ab18-f54855a4817e",
        "line": "124",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "14f385540a464ef9002fdeb5673c1b5286b6f61669fcc34a31adb30459475528",
        "deprecatedHashes": [
          "2f74c4f809ae41fa80e077ee12cae7451a02db2be2df6d99ca02d92c4de98861",
          "23d42d172f0b317fb4f31f4b60cb77f9e4d6cd8ee74e9028daa595d57555451a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527559+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6c2ca35a-6e74-4ece-aae1-d4c106dcda11",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "95cbe96601ddd4d99264d8bd0480ed5aa21cdc330ad2ec3b04a89b9021da3f39",
        "deprecatedHashes": [
          "346065fd8b530a5f570030537a95db49cc93fef3e950b17037d85f6f2023fd74",
          "145bddc09e214854b26a4892733f5fcfff3d02df7d90317a9934c591bdeac40d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527559+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ddf378d4-4ef5-474e-aca2-19aac5572e98",
        "line": "52",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_45.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2cb509b1a89f5b5a7973dc9605e659642ad9d8c7ba74cf483851bdb54a3fd1ca",
        "deprecatedHashes": [
          "20641777a363ed555133743f3f75397cc3359e18c65bbf13e5dce223a702f801",
          "092a462ae71fc15b14a839919dc3725f8346828e97f2e5694431a11200cbff68"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52756+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b383a532-4130-4735-b082-87bae69e0a52",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ca7f21d0f999e4ac58e2af512e654f1727185942ed13cb6a667916a3f62f82ef",
        "deprecatedHashes": [
          "025a74e9857af54f623bb95ef484cabdfbbb251e2105a150c90ad11991c2c355",
          "59bf1672eab98f53eec05a12a41381a750657cd8ce4cddc64352d7da355f4b6b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527561+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0050c0fc-07ee-4781-9dc6-75e24224b23f",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8abe73f8618d12da8f84e99c99fbb9e7f35f99b40f0826c7cf1e6c401b26b18e",
        "deprecatedHashes": [
          "bff271251db543cc0a6d86d2da9e3d77b5b2d91bfeb06a3c967994a4a28ca3ed",
          "08338264f68ef71760af250e40d8c977687751c05bb86ffa217a33e6868a18c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527561+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2d97f949-9b40-4880-99e8-610048ecdfde",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_73b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a5a97dc8caf670799ca045a63ba7e242df5ab08f372d0d395d262027cdfef939",
        "deprecatedHashes": [
          "b0f7c361540b5d1f0f6a3302cbd24b82f0304efb8da81b3b98bd5b896ef9a3ce",
          "f1e8e7fdcecd8ce9979c4f3367a9059fe9fe8386f682d538d0a7d976fbb1f2e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527562+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53d7d51f-b372-40a5-bff1-1710d20137dc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6cb4a03d6848d551996b88911b93378a8e06509aad335be1ad752a3318ec763c",
        "deprecatedHashes": [
          "fdc0cde7e7e75d0467a058cb7de6b590857089eaaed58b07ec370e081bf17f3f",
          "aa8fc5044a37bc5196affb985f90d9b5e851b98a339510ab07f7dc4f52b5fcc2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527562+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "12f2840d-768d-4700-a385-824bedff3e78",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8036af4e550552ad3e0e8cb0cd7b2bb97156f092b9e549ae8bdbdf79b46f941d",
        "deprecatedHashes": [
          "77338036a8ed86ef5c00985c0c52ddfccbde439e3a5099a3b12fcd798dc29025",
          "5758aeb1ee73c44ec2f34635ddbd42c5ca9729ec82372fc62269d091abd6ecc4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527563+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "11a43670-e254-44d5-8b5b-38eb54e3db68",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a9e085f886a62699bfc307d8ca9028f984a2fde9b554a7d52001bd553214d57b",
        "deprecatedHashes": [
          "3c3ea86388334e21b4d4233ffd8663e2de3d42a7df65a8e2e6aa1ee391489e33",
          "fb39db823e7c90f08c40ef5f5b437232fba9e3d36089ff413212b06ae252a4ce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527564+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "797ce8c9-1e37-4d95-a9ab-d92b6c831a7b",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_10.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "379f8531a130789be2dc5bbc33aec8ab366b17adbbb13a9722857b506a4d4e18",
        "deprecatedHashes": [
          "ec9e48e534525c9e657d691912d4868d9ae737113e5ec3ea6f5a2e74eb54bac2",
          "9f89bf42f1fdc68e9b8994fd2e660a84b81dafa4e5e805f603b300d14992a495"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527564+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52df63d6-fe3f-4ad6-851b-0654e5901b4e",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_10.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9d0695766c5d26ff5a0ec93f2b77a369e2d1ce2a80fc8e208b91cdbedb50ed9f",
        "deprecatedHashes": [
          "ec04dca87b70efffbd748d68db0201693d794060211c140aef79faebeda7c21a",
          "8b318398995eb087a46c83283566426eb68e7e78055ab065f364a268278be72c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527566+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd1062d7-5c2f-4e51-9128-d190f10e67c8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4fdb244cca3e264a0deddc182c6820044f6049ac7551e6f9a930bfd529f9cefa",
        "deprecatedHashes": [
          "52ae7f3c2f899910f878e08ef95e9d99bfc3a80e27972638e8919f859b7fde5c",
          "b4543b5a8c58a318637d371e816c50c5e99709babe4bff7922eca4aa6b368092"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527567+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "22d328c5-bdc6-4b33-a751-4403ef13da83",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bf993df53f84af79824c658cca44f9e9fcd8778e987a04a6c743387e6afca577",
        "deprecatedHashes": [
          "2ed00fb9692522045cfa33653ece66d3eb3e1c882946d8a34846d75f25358513",
          "796bffa9f825e15be3a235dd31c472d99225ff72944f2fd09866408f95da2852"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527567+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e1141592-728b-4586-b22d-90ae511eca9b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a3fd432bd16b168bc562ad362da50b20a0a62176e60c04de48017aca1a4d0f5d",
        "deprecatedHashes": [
          "60af4136c0f3b5673acfa2d675d3d1e51d4cfdbf7a7ffacd36d0bfcd5483246f",
          "fe5e46f70bc34321430ad21a3e6127511761aeb40b93539c4034e937b55f24cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527568+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b585e688-9f9f-4e06-8ae9-3a70cea78008",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8de0d8f97b5370b3d18b8eec0c9c7833c6d44ec1f6e968faa85c725ed954d82e",
        "deprecatedHashes": [
          "79b225504fcc5f8ab8aa89c4cd74cd2f9163e22884bd2186e728f0ab4627433e",
          "1477621f5dae8c96dc3af0309b21dc3ec50c6848fb3c32f16ff6ea784dbd886d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527568+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52128fe1-7851-4e53-a59b-3f38a2241cf5",
        "line": "102",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_12.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1bd1da4cc2b3bf1cfa711d070e1fadcbaec54d97eaa5c843f528155cb6e10cca",
        "deprecatedHashes": [
          "70592d69412b7839a1b735124c59845e55105a810f45a57d36db991bc16e87f7",
          "84cf42916b790957ea51ab31e68a2c7a907e5fa1bc3ec79295598a945775d3f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527569+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "425aa9eb-4e27-4eda-aa8d-fcf606004eed",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_12.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5048d377f9a62332f0e7557a3a8958c7f40e8d512d6d21cfb89a5b4105e54aa5",
        "deprecatedHashes": [
          "c7a68fd63f1c0302992e5f80ebcf7aca5326924a94036a75b66e0e3b801a9059",
          "bfe48df676d8ea8e9f20acc49b9abe061fca13c8f84365dc11f76e66dd0ef20d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52757+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f09b707-d57a-4e40-86cc-e248a080ba1c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b01ff2e4b3154470559745c0cb96dd901debd2f14386e838b2d5e6d2dd8d184f",
        "deprecatedHashes": [
          "39150cf16330577ab002336efe5e95704c6e6be44538e79f60d866632e1ace43",
          "5062cc6c9e35181050f2e69d502da429f709e0a6510fbf1d90c90891f93ddca5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52757+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d1d85563-a240-4289-a825-2e75a7969285",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_09.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c6fb28fd65efe9184cceaf45e2ee3f3ae72c3ba5f70ac8bc83d47e8d02a8a1c5",
        "deprecatedHashes": [
          "47625f774bec657ed53953e69ba8ef014aa4c91c434ec5db56ccadddf54ac4bd",
          "6bd11d34cd8b927d8998b8b327b23fc93eff08b4d6de6957ce70e1b985c5ac39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527571+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e7f1d997-ff61-4cb8-9dda-52604801db40",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_09.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "96af1a81bb424349cfd408685dcc0ef67d9315a8c4c6db31b021cec2c8579e63",
        "deprecatedHashes": [
          "f498d2430b0d0e784795e5ee555eab34413a76719aa014c297bc10e92f1c3ea8",
          "11313d3301e9ff3a7572d89f3e6589febde4d8f47f1dd27e2c1734fb3fa0471c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527573+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d2e01efe-737d-41a4-97da-f0f0c436907d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2da0bf543a924bfcde5692b084fe901e3d0629356033d67def79ee7cc5b9dc18",
        "deprecatedHashes": [
          "2bf342641f9159800c9a3830df9f46c102ef51d619bc06638f88d58963077e8a",
          "93482ab0ca7621d15e8ddb0953a544a3737264579380a61fd8087fc85af2dfbf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527573+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f628b2e8-7a97-47c0-bc52-00f5c9a11bd1",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_09.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e003645e846ec11ed175665962509db0ab6ede2bb0260296a2a0a9f3f24f4105",
        "deprecatedHashes": [
          "4b7cdfa91bce3eccf28a68996e5082f41e70fe81b83c6e25319df85b9f68bbf9",
          "063e5c7c9007da333196110b2f753e9f3206c608a75e691f4db7a2e012f083a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527574+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "73deaf53-42b2-43d8-be23-7f9cc574bcfe",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "279f8bc6a5f7f4bb78fed9bf2dfd59362a27b6c783f50a04ecd6a1313ccc940c",
        "deprecatedHashes": [
          "3f97b35465111bec1e4d7112cc7f11df978b881952c97c5371144912e40de01b",
          "5c26544f98e2f779ce247faa4e8f9035ece498e9a1bc951183d35264055e94ae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527575+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e5b6a133-0df1-42a8-b4a5-f61fece3d763",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7a820195bfb80e373e99099d17de5970a3f83b2bf5df7fcd633e0c010ee2615e",
        "deprecatedHashes": [
          "8884fc7ae7374d1929af3c0bdb07305ad99c33fe320128c3bb30cc05a6660288",
          "29d0b9e1fbde02b53440b400db5f4da74de288bf41f7aa6f9509ebab37561a33"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527576+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d44a66d3-b200-4ecc-a8e2-d5febaabead3",
        "line": "120",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e0d467fe89e1e2eb263e299f8bf5f867714deea6ca02334181593741519d8cd2",
        "deprecatedHashes": [
          "226789108a5503d4198fb119e418af6f4f378190162b51ee8c67e844620e6dd6",
          "0dc96e4bfb49919e4a173205681412bb6ce2cab07152c41633bf3c3215f74fb2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527576+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f7bf5775-ba9f-4995-825b-f879d3a70e80",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e935557ecf824c3d7b3a7698af3b4e6106c3c4d56cf85bbcee652140e3fa62c5",
        "deprecatedHashes": [
          "dded2238517ccc86a743d97bf4df6add818f96f09006989f9a7461be1f18914a",
          "ec828fc10ac99c4fca010aa654ab5d8214aa0ba1aff7ee47efdd7a735f9c18ce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527577+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e512cce-a609-4351-8b67-8f4b1a2d219e",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "94da24c90a02678e9f1515ac14a63c996a99ced86f019d080638eafa726035b2",
        "deprecatedHashes": [
          "eedf6ce8fd2f6573d503e8932b12ec61681341ca27160c1f276e9b8c678a3b27",
          "3600db924bb86fea8c90cc7d8d764770ab82c808d31e7c068d443c33895bb9e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527578+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ca7ab547-d9b2-4519-a08d-21913f88aa29",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1e8884f1564d9d7047ba490ed2cb766b40a9af3007d7e7b4829cf48d71b21f66",
        "deprecatedHashes": [
          "b90c067b53fd360c745ccef9ecf57cac7ec6129a8147b43016673329f31ba311",
          "302d100942b5be16d4bf8a4dec9e6d8d71649622650f807616820b6393cab0f8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527578+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4ca4da95-3a79-4ac9-9176-c5b26d1ad038",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_05.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "586e048c4e0feb5eba598f48c0880fd3e03b0aacc43d57fb67f39c7842ae5a16",
        "deprecatedHashes": [
          "4263b73d8b9891f6c60bcceabaa6071b81f5e94dcd66eef8dfa095f62fb0df4e",
          "0af7a54ea83f5387bd7e0eb1de31ec89ac8883e963f87ea01816f5b0e066574c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527579+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ae88231b-bcca-466e-bcc5-2735b3a1de30",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_05.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ddeeed1771980dc7227bf467e5a993bb124c1b15e87824506810dcc097b3038a",
        "deprecatedHashes": [
          "630b189dbf85fd4fa11af92ccdcc3aefe215e68f0c2fc40486ac928209b2db6f",
          "404f9e2beded20961152fe34bba4d7fd77c035702b69e83d7bb19428f61a39c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52758+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7640cf2c-65a5-4378-a205-7043d28c1509",
        "line": "59",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_05.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "ff36084f1b226a344e5c4a79a33699fb612acf1e7e656a20c33df3fd6c74781b",
        "deprecatedHashes": [
          "43834089b593359fed96af50b29e2ef72a61846ea7a31cd25ff0a129b0ab2106",
          "61927521e0e1b5c75cb8398a02c9a828273e2be5a819c2bc471fbc77c1142645"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52758+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "834a9fb9-cbd3-46d2-a0c0-49444c801051",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ebf677ec792041e4c213be157d83dc79ddad2ca6ef6c73f86a3c52deb8c4c475",
        "deprecatedHashes": [
          "11b35d8b3552e12d4ef99bb9892501ad0273bb3101ba86249fc048a8ddff2c7a",
          "524794cf9fb417b8ba35624b5be6cb38db1b28b7f9cf76dec5d36796d93a68e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527581+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f442cf64-2683-4753-9f8d-1703a16a4b42",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "413691a0d5242f334ce5bf14a8484fea03e136c8aa9d12ebdd17695d93cf0a12",
        "deprecatedHashes": [
          "6ceb4b44ee279fddebd3251ec03ecd0e85724d1c077d46e784c5a5a091c185fc",
          "18f58e09d935c45a2924f461f448659301c15184bd18c317dba515cc02f2d8f6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527581+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8fb58dcd-6163-4ed2-bac0-2dad31a85dcb",
        "line": "53",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_15.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f3bfab066d00ba9f3268b8912a774dca3ec15c5f83eba35f7525635e83d16351",
        "deprecatedHashes": [
          "4155e27014489633ed8e65034614e9eeda4feaf49992a689e54fc379141f4a1c",
          "568a338bf7a2f480ddca9227baba99cafba09a10ff4ccec836d8f46b5146070f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527582+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17ac2d7e-4bba-48b3-aa9c-a598dccf75ad",
        "line": "54",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_15.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "aa5cb4796da8290ad2fbc820a9ba4afd5b4dfe013b948eca5a9ca4f2644f7f08",
        "deprecatedHashes": [
          "c19a22a6556697feb60962e9176b37b83059a3278efea0a2d3faf4a27f73ec72",
          "eb0d954973fed27de3c8adfb6f4f6a529697a56fab2d34b3385eadee957fde42"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527583+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6acc5047-6ea4-47f6-bb56-610126a759e0",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_66b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "804f5b312322703cdf94f819a6bdb552fa5a5e0466e4dae0412ea7a096528df8",
        "deprecatedHashes": [
          "ec58b82a2b3f66a07084f1134ac96a47e582f2ad1730796f02927ca629f15c5b",
          "0374db9fcac8cae0362acd2b4e3ef03c82514d76c2082f543b29a1bd8f99a363"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527584+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c4080f26-9cf3-4349-84a9-dab89512c098",
        "line": "42",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_66b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "073c4c11ea85cc733bac729b3b975680a266b7c03797c4c60c60a8cb699b0fc0",
        "deprecatedHashes": [
          "6d65aaecb820c2af540525e9ea959a339a4b5b599b6a21034181585dd96d21f6",
          "a77b6080a91d0e6840579975dbda82596569f90c48c765ad176db836acea49e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527585+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e444cf87-8138-43b6-bd08-0affd72e7fd9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2934f8f15eed666045fcb57fc7889b3fd10d4570b870827d2554d172d5aa2900",
        "deprecatedHashes": [
          "4bac0019ec15c1e636f2e0fb81033027aed16dc081ff8a5df9a1ff45c13c6ba9",
          "50f877624cf3794a18654d8039727ffe3ff27c54829cddc1aa5b2f69b5da5362"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527585+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce5d9534-f366-4c1c-945d-76cd6abffdc6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0de4ec134d9c93a84c622cd54b0fbb6d2c3d49bd3259b9843effb42c987176fa",
        "deprecatedHashes": [
          "a58b56090b130e58ed58ba91d09e655da733d191f1696b31cb1d4d755949d68d",
          "44a4ed412202b2422d6374b041e92c5d78637e7af2db7aa4ae4b22f7dbe554cd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527586+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "09aa0d4f-23b1-420b-911c-5ba899b10271",
        "line": "52",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_45.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8ab7564d6e1cc108521dfba46d4e66f6433510f28a85acbe8ae0c99dbac6a77b",
        "deprecatedHashes": [
          "c7ad833ebf934827f08f16ab3e0eb47df631e4bd6bbd8da10471290e567a8134",
          "adcc82a0433e5beb5a9ea083f47fac11bccbeab4aea80828b363c4bc73e5e727"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527586+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7f7ddb6e-c624-4fd3-b8b9-bdc8b4444200",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_45.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9017bd7c995f4428ededec882d14f3d3c5056f87c6a3f82fd79efb4439c6d838",
        "deprecatedHashes": [
          "1b3449c16d79892799ce037173655b03409efd1df426c49695c48077806d72e1",
          "6f0a9609e40da2d4bd1e8c2f8aa6f2174e2a651dfe587629adcf14fdb73a2eb2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527588+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7983663c-453e-4985-8660-58755ce5a989",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "99926a9b2b27ee437899629a9241943f9bdbe8936dd1d65e9cc74fe5d238a4af",
        "deprecatedHashes": [
          "94dfd7dfab70f659dcefa0fc955348e956fdfa8586eb272ebcbaaf35d2a9fc6b",
          "3b2882a37662e047a891ed8b434798225a57fe06fcbdba42f3ab8ad3ea6cd8da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527589+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ddef90a-a379-4896-99d9-6b5f1b615ea9",
        "line": "123",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_31.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6b84ccb411ba28f0cbd938335397dca60e682fc575fb50fdc5b33d1b47684f19",
        "deprecatedHashes": [
          "ab65675e3563c0e831fabdb5f72a6ae9ec5e42862b2c63e6a8893d63f14a8bc1",
          "89f1a7c373dff0efbddba1ecb1dd410bb0e9e8a28c323b264f3934754a0ce534"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527589+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4d13631e-7c72-40c7-b7da-152539b253e4",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_31.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "cea9acd35f8be27fb982c52a4d19bd2a074d66274231e167b067b3017ca5c9ae",
        "deprecatedHashes": [
          "19778a9a9a94eeb0c20f9c7a28177fba3528b21ebcb256f14ec43453e164a8f1",
          "406a11a2a8fe44d047707fc690baa5a3a62263bc772a5cabc45f661b4af341e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527591+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "43c82b56-5b87-49e8-b509-807381725f9e",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f7dc286c2275d1d6eff147dbfe774caf5e587c245fc2d5de3cb34b99ee0723c9",
        "deprecatedHashes": [
          "d2c84f829a02f11f1dd59c1787694da47116d85691c0d3bdf9fe284b458ed371",
          "83846c0ab27e0eab2975d2e6207104cae030a8ca04ab0e434bb8313db549b2ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527591+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3974e37f-83c1-4b00-bf26-ec6f37a40705",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_67a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "902b38f250a4e52830edc6ab3382bd0852414d1714ed2ae20ab818c9274179b7",
        "deprecatedHashes": [
          "a9cfc86d7895cd893fde97bf5d6f5487039cd30767ed1c0af552ad5857e0f51c",
          "350348b4ced2623da1e06137d4a576d306c96bdf34e57345edbb1d5b37608519"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527592+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e6ef8e5-2328-4512-9c3d-2b292d86c71a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_68a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "94a3f563c31dc68ac6000a24f3bba682b2052ca41d00e3deb0142e31c2b6c997",
        "deprecatedHashes": [
          "3088ed218977382dbbfac482a131f98aebe4768870de6c362995d1eef4b8cde9",
          "9a7a77cb37191e7346948a0aab4f01551189d10c8b913d98a16120af6f68f1ea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527592+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1474f42b-b555-49c7-8ef6-eacb563f226f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0f15e46ced49b1d0f5b7fcf281d190d42f86ca9e9bcc0883a0defd2ea72caf60",
        "deprecatedHashes": [
          "01c5a3241d7c5abea851f6b60c8c478a0398470f523694acf86e143351861b09",
          "6657b84c50a5bc712b0d6942c0202edf929d10bbd9b13f0c7e970787f213ac02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527593+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c516b4d1-7f01-4c4b-ab78-9bb2e21d8505",
        "line": "111",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_07.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2b03b3c15f94203c8c37bfe56cd684c31266bce30f1c69b8241a2e3b5a7d3822",
        "deprecatedHashes": [
          "6d3828c1879a0165e4d95bcd400ef61778d1005d58b81c5d8452be33fb0b4e4a",
          "f10ac863bf0957e5e9b9d2219f1b82d63283b337869b05c91932d758a4a87ead"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527594+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "82c04134-3d58-496e-b5ac-b579dd70cecd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4f938f2e967037dc9ce7d8f941b0b8b964ae088f45406e7adbd65c7cf556b888",
        "deprecatedHashes": [
          "96d4300f27ccc57848c35a1a45ad5e675bc404d1c15ab0ebce0ae6aad1481fb5",
          "0e238ebcefd2de82ade6aab87bb0246cc6778405537c574b473161f3e531f37e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527595+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5f60d939-9f34-4f80-ae89-8ad8298fee57",
        "line": "113",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5b545ef3e685c8de40d0360b1a6078248e4127b760a63e00e97afc3b38fd231e",
        "deprecatedHashes": [
          "f6d6530a37b84d2e2e0f8b22ad57b68abde26c851f7a6bb0a413cce044474521",
          "312ccb683fb06e987944ed0085f93282845ce9f0168b99c1c6bd27380f9e4d19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527595+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2898a630-9fa5-4059-9590-eec4104ff8f8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9be58f35032b3f431127a3ba715aa5bf84334c51061dfd26b856c5e6cdbbabd3",
        "deprecatedHashes": [
          "304ea7ecbeafff50516aaaecfd19d0465ff23b0e23a7bbeca9a339e4f63f3cf1",
          "e987aa38ba93c3cda1fc6db10ee5061cc152f98863f67abe602c7542e267e42b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527596+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "797d0698-643e-4a88-ae79-099586bc4762",
        "line": "104",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a360d87bcb60b6a5127061abce82df96313af88960079377364eed3dc53c09b6",
        "deprecatedHashes": [
          "f2e0670aeb1f744cc9842bdbb1c0e8999415c1a7e67ec4bbe0c7158ef24871dc",
          "affcfd4f7d612ad939cda03556dfe40b7ac45700f622a3296ead84e33ad5c531"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527597+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9e37cbd-88b8-4975-8db8-25824aaf75a7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5d611f7c9c38b9039c72e81d209f83fc5076dbe57697cc461939884962f7b0f8",
        "deprecatedHashes": [
          "540169f7b6ce62ad0c00dbf53387d0b4f63789bea06a94847a4c188d0d269878",
          "2d1b6e538c7030e663f20904965018e00a9003b44205351b71abb921731fdd7d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527597+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8946f14f-16d4-4d98-8ba5-020749c30a3a",
        "line": "111",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_06.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "956c6a287c2c40b82938b3baa8b0ac5d4df3015476a9e056e0a89aee6c95abe9",
        "deprecatedHashes": [
          "63c905f7c146e9ac3bbf8afd0435fdf650ebfa02f8c4f814042eb3601cf780bb",
          "2aecf73c45992d78877c44b2e34620f31c675400ed2cff42e10cb57b5d52a4fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527599+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "453de6f5-99dc-41a3-a017-52e6890611db",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0a1e2d2e57b5698f0050fd90dd9ade450da38dd8b0ea3569fa62aa96f645134b",
        "deprecatedHashes": [
          "43f3b35d844ea9ce90e5d359b0bb9deab1fdc722fbbfe08b908e63f3a43b2a79",
          "fbc53fea715aa4705a60fbb033d48ea59149375f5c5d4d2b6d9daea90be7b894"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527599+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9a65ca7-24cc-4548-96cc-280fc383554f",
        "line": "123",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_42.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ed554c4eef9827f7633d309e3895b4aef6b9db86e9a39502e6d8acd3f3392ca7",
        "deprecatedHashes": [
          "747093f3b381882635526462f3cd3cfc1bc3cd6ab096c7e9ba57d9a13b5b6f78",
          "f6dddd7df031e156853a9a3677b69fa77f8c39457736036c4ce3fe3a52c8470e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5276+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0fe2ba99-8f42-412b-8fff-639dab8b2801",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_42.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "efe0cf1f22f5462a7e761cf91d753adb8f9710b641cd4e18e1eddb96e5caf2eb",
        "deprecatedHashes": [
          "4b2cbc7090b1be87b42d47472dad1c3e7aceedba58de3df71804f7d15fc3a6aa",
          "cc0745ec7ae3b065e98831f026dda1a1f9c8b75c0b5ce660cffc5ff79ffd6f97"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527602+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f12c014a-9c2e-49b7-abb1-6c8ab47586a8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2b8f10b795ec1485a011f1696ec2902dc52394f1b2d533d443b93f09acce09ce",
        "deprecatedHashes": [
          "a492c3d15ee8fcbc000568198ee11330afce3a50c9c3f05931132b1f1ead4272",
          "24266784601b72ca341b20292717cc738971379e188e4134896f83b87eff2e29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527602+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9c2fc33a-c6a2-4382-ab7f-27259d8a4845",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "83437818897623308f4f790f71178c761a9170d8c483129f816c3b2e483da560",
        "deprecatedHashes": [
          "0957837b15b32bd71bd08a01a7cac07288505bcb71ccf06891c53521a7906910",
          "d4275172d0791d6dd8bdafab1358bb48e7096d9d88705adc3da9a0b7fcda279f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527603+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b59fb8f1-f6f7-43e2-a8bc-b070b0bc7185",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "181bebd8f38b9ad24b400e3a97da098b85a642f004031bb8aa298da39494e91f",
        "deprecatedHashes": [
          "6bcc40ae4188133a42da46fe0388021edc0ec4383cee51cfd1a09b81b63cb892",
          "114fff068ee3e12dfdc27964f85d95f2b466ff87070a10b3e10e33e2ad8d38c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527603+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bde49720-b73d-47b6-8a52-f508870beffe",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_52c.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "67f47de124b2b5efee6c3665e7ee42077d809f72f963ee795ef86c99e48dc984",
        "deprecatedHashes": [
          "2a004b1351391abe5133adb6e0a957b9cebcaf3f18ac6940491a7660f59105b2",
          "99d7af8553efa0a0c54817f75b7f0b7e68a2db7c646b910749e6b5dbea5c6d28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527604+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a58cb168-f3dd-4d2c-ac8a-33351c321ba2",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_52c.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "5947f7c44cea7040e0f1bf8c57c6830d0a0abd380b60f68a0e3f290f40a57769",
        "deprecatedHashes": [
          "38ac97c5442ae069ea0579e33d2131d72cb7875c0eab9a6db6d466b47e83d409",
          "307c8374bd033fcf4acaf7830772a2019f7a5fb7bee63d1739057cfc6e9d1b12"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527605+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3459fd21-39dd-4a96-9fa7-9c93a4f03a47",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_75b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1e56da4492c7bb3f3345f288019e9c379c0f78d3e6fbffc19f29f97dbab198de",
        "deprecatedHashes": [
          "913d7f3227b6cce4b6b15d48aec06d85bf1a249de155de35d7cac4b190d178ca",
          "3e3f94db145cff1b6874060e96f64a526b0141d9b11e0d2fd4357ef7649f94fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527606+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3fdc2b1-e716-4535-85e2-6c25c21a3d45",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "42afc6bb3ec4b7635f0be463e5d9130feac0453b35bbd8fc54f1e234f3cd958c",
        "deprecatedHashes": [
          "49d186c780d373ce20d17ec059b38d397cb31744b2f0dddc0510bb7243666816",
          "b50a789bef4b02ae22f67d4ab738ef4580b3f4c4413cbddce37336ae18b71be3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527607+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9485e91-e1c6-4860-8733-31cf12d403f0",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1f7bd1afff363c8d73cf4fdda1313e11dbd7f083ca532d35a20b238d9b02f38e",
        "deprecatedHashes": [
          "37d8d70cb31eb3782a43b8cae8a40a4be8fe091239b0f265b4e284bbb2ebaca3",
          "57d91ef36ad76c572556bba9c423f7137f76c0f2ca4c9e81b55093d80cd10eb6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527608+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ebd73c5-833e-43dd-b920-be22c9e55fdd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f1f2cc7d15545bdde0e14115f5695ab090da3b206a27f5f480f1f35e740d054b",
        "deprecatedHashes": [
          "99e833d8774e80b440230d25b2494b77c67769a3977fd7257f606f994822e8a1",
          "55c07efef45e03ffbaadcaccc760980bb2314256e5175d27290cb56f9d66870b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527609+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c26ac225-b7a7-428c-a4c7-46ae979130ee",
        "line": "125",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_21.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f688e99525dfd6ae6864fb86eaa82f53f0f74584d255ec536fe4a4eaaa4501d7",
        "deprecatedHashes": [
          "226117077e1b36a2f7ac9810496810ef25d90915de90b8a35fe6eef8d56f3eed",
          "9c712b6af210656787d674369cf603ab1cffd37f71b763f8126e344aad743971"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527609+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b6a4e9f9-513b-46b0-8469-fb61fc8c0ae2",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_21.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "d1f4b6831d5eb18116b0080571b5e27d8d8cfa3521e3c3a7662c54943054e2de",
        "deprecatedHashes": [
          "cacef5a0b065cff6f7701bf8a9db816b4144bcd9b17e22765386d8a03f874610",
          "ac149aa7571c62bcaf04e760486549bc5878f04514cdacbcf53297a21b550043"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52761+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f0068c84-fdf5-467d-bb96-5b4d368b0390",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_54e.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "10d59e7d9f65816438567d4f13238c7006e41ded85be0cbe06dee9c9a1ee4941",
        "deprecatedHashes": [
          "8cd9ce855bef7f80bbf7ced95e0e32df5623620ca4c1e64c89ce63d019cad7e1",
          "f7a28ec4060b5a89b4fdca2e3c479420dff839012c3563e3004c17bcfb2ee119"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527611+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "433e02ef-3a10-4cb0-ac62-8036d4fb0711",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_54e.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3e80277fd96d1bf6f0ae55e89b73c70e8562b63bf1e84a81944daf55cf6c43ec",
        "deprecatedHashes": [
          "19d437942d158839fded9b860729222a7b55f71b5f043f10a3dfc91b2ade463c",
          "6aee9536458d90c8acabd8f4a6761d4e0e7b72abf3352cdbf8c09723ffb56f65"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527612+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dc9553eb-7510-4cb7-bc7e-7bad19a37469",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8998339186cac4711d3e06d03b585668d355f981828a8d4692625890949868b2",
        "deprecatedHashes": [
          "8827d8799d3db0a575306e282e3a217c6409fb8bb2d5a567fea196ce857704fc",
          "66bb5c6db2d61f9a0a191419e825679cae4656bd12b8092cb56b862ce2345890"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527613+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ecbbd40b-05e2-439d-a95b-ed21b55ab0ab",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_03.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5e31cdd3f360346d7bb0787953c23154632fb94933ab7cd252cee686ca7bf263",
        "deprecatedHashes": [
          "ff4678a0424c94a3f5ff5fdd51ab569d956fe20c27414e53e82e793124fe1876",
          "d21249ec9b8e6f96f62d94a6cba2608e3af96ba4f72a1874eb102e7ba327c567"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527613+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f21a3f58-e5a4-44b6-9020-c29ef9335b28",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "263370f25ba03d3ce2d1398bc7c32a68ac1307af8b19c06c5e6ebd8046f05ba9",
        "deprecatedHashes": [
          "a8ed5fd5f220df92ce159aa4685e929807f6799ec4aa3fc55d8ef610d7c65cba",
          "9caf57cab359677c6ae10ee6d398c871ce70c2558926a5a33f68644d7a163144"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527614+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1bbdb196-b09e-4f99-afca-b7819d110255",
        "line": "106",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "de0d8acf776439430340266cf52c280bc7866d3593eb8af1da9436777c2a8bac",
        "deprecatedHashes": [
          "bca07564f9fbf2b7905ce6de8bd1370a31fb6023d03f5b2a80f5ed631feb06bc",
          "f5128226cafeeb80254cac059801a663f6658a9ce79948219cdfc2f3885d54b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527614+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f0d4c48b-c191-49ea-a847-0d956600e9a4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "11e2f96e5d5e01358fa988bd9bd3221250ecc88a3bb36e167e845ebf0e68080b",
        "deprecatedHashes": [
          "511ba9c24a0f8413c41fc028af16d0d41e3fd58ec27c3a90c9034ebf266d5100",
          "392acb74f2331fb61d1143ba7626fa055f7ffa9d59883012ab6bcb36b245f100"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527615+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0cd71226-76bf-4ad3-bcbe-740768f4c0e1",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b98ee1021571196daf62f8a77df576894179cc15d29786072def29dac6ff50ac",
        "deprecatedHashes": [
          "03f4f63b70cec8a742212dafbf5bf6b7618482773793acf75b38ee1e54a51547",
          "e0ec68b55f47fb914330459749a30d01fdf6abfc758165912f1921cef526323e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527616+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32bca4f2-ad7b-408d-9c81-96a4abb96332",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1fc98e97da6bc1c1e6d712490006e46bddbb2fe413b87f9999017a1527477359",
        "deprecatedHashes": [
          "d34f9ec0b92b2cd2b5ec46d50e43da0aeb4914d37942069133a07be87bd678fd",
          "cdf9e87acca1a13cd729262d0928eb02140479c67e447817a6158b88b86a8895"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527616+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6bcc01a9-848e-4602-af42-597161339614",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_67b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b26e8e8657f2c92a6687dc06b94873ac800a32441ef0e09b16e67ae770d2cf4f",
        "deprecatedHashes": [
          "0383e83241e59df98437830b1f3c83a0f4d6e8be4ff0437a345650a078b22c9f",
          "86fa325e538711ea6417913b010556ceec9920d504443025a26a0fed4356e379"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527617+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4f65b04-4e7a-486b-bd5f-cfec8c18263e",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_67b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3605dccb14ec9f99f63e694897ee6949005bdc7ba1d137b3242a06b4096b0df5",
        "deprecatedHashes": [
          "8005ef30dffc06a5aee727a6a7865b03cacc8a20964384bba6f8f4531123b65e",
          "adb9b703da209dc4623c37bdbe1ded513b6ae4f18a1b815b94be8039a48f0b4d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527618+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "de258dbf-6287-47e1-9dba-e3bf897940e9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ff6ae1625b7947e66c524e1abb12ab871d2ef9a7bdb423a8f968793d85bb1750",
        "deprecatedHashes": [
          "e3ab9823d82fc9607f65fcc1dde2a2dd328adbb894447d2d088101e0a3474788",
          "48e44b7115f4a5be25258fffe107fee3a1990aa879e3ca73d23bf0d781f698c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52762+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "34033392-0d73-4b03-8ea7-e7cda6b77f44",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8ecc698ba201e20759d9d3d3b7f987be90db17745a784fc94e6191731dfa164e",
        "deprecatedHashes": [
          "4224296947dc2aae2fce9eb7a8a090b512b07e629cbf71d2eae7b6ca77b5d8c1",
          "aadfdd3a3cf4000046b17b227afe0abf07ae72bf775c12897a6189f01a3bc231"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52762+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "36d2e757-7e4d-484e-b16c-f5f2ee30858f",
        "line": "114",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "71dc22795468022bc3abdd26e07037e911d19a97da1411cc8c3d8914684c5f1f",
        "deprecatedHashes": [
          "a91d473841b62af7fbfaccaa620f35bf01829d0db3ff5605a6a7c0c3c7a832d9",
          "226b31ae8162c0d3b9c04e0b796565682e80625c45ba5a34eca9eeaa7f94d4db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527621+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "be21f71d-3f61-40e0-93fd-770cff216051",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4bd88f30019d587ab2ee115c69fd261e865b819e961fa65334b61297f9af1adc",
        "deprecatedHashes": [
          "92fb3ea370b2231b340535f9d25874ad238fc0f7b85d8d819f11d7a7bbb099a5",
          "a255063efffe8a2ff1289e4bbd68da1a52a50a5b20edec57f1591fc115983560"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527622+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "60c9e7ba-d950-4812-a792-a40e68fdc898",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ae7454b578cffa0c767a463883eb6790ac3d5d76892ad58c08044d2284a661ab",
        "deprecatedHashes": [
          "e45fc73e07f4c81be0863d5c6754be33c4e940010df92aefad6d34d636a8d1df",
          "013c2c90e56639400e4a877c046495971e29bdc013a6835c11edfbfe579b57da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527623+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23bef60c-ebc6-472d-8b22-3b5fe28f3b89",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_71a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7f60bf3c5bf56f77b1d7c150b5a4bbda87beb47315c7cc7b59130febda3c7d54",
        "deprecatedHashes": [
          "8cfbe284c087ddd13389dcef2fb040e20ee33e86ad9d03d32addb8c8177c82cd",
          "70f959fc3afaa8d94ca8c8958a1c05c04e3525819f2dc87e85cc87037b94b9b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527624+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8fae203c-5755-490c-a061-39217390c41a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "86744f23d888ee16524fdc5d56756262cfc196554ab8490ac20a71562eedf8be",
        "deprecatedHashes": [
          "474194797092f7e68b7d79476fed7e0d8dd37a8803d033c6c9f7674e1045cf33",
          "2470b097c7aa0f893d248bd356133fe970257b9c395af989e328f18c99112a4e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527625+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f7e7ee13-6ab9-4d1c-8c05-547bc6c93a52",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d9259c1737f474e6ed62981319c293abea50367413f4e24f6b93bae23fcdf0be",
        "deprecatedHashes": [
          "420d1360cb3c2ae3477e92b81e2cb02d24b2235c03548b22d92e911b3b861bbb",
          "940a71fdbf7fef409bbc32dc7eb64f5cfcfe820e3f28138a2c9c976c40242431"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527625+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "78e32498-e402-43a4-98ec-f4cf1af19b8a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "30178298b40c84d8e3c1ecce37bdde7cf9aa5fe2393ebff43d19c28c35a8a47e",
        "deprecatedHashes": [
          "f62282f3857dc8f54b548fc9e55007e59eb816242a0229dcf2a0d385c76049fe",
          "80fb855f6400b3ad9a998e8e3c8a3c16b5376a3b925fa48255263c87a90896ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527626+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8494f569-f1ee-4a67-9d25-f4a7e7600aa1",
        "line": "52",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_16.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cdf4994a0c2b2e71de2ec4c6b1a5150c0507cdf368f4868731f0c9a4dbf03f6e",
        "deprecatedHashes": [
          "6d48e1cee00b1029039b438102b33dd2c38ca1464b5cbf9e9c87043188cfc5b0",
          "190c6ebc5ae2cef2253f523f1118b1545ec16a02985bb4f8f1f8530eafb2eb91"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527627+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a931560b-8da6-45f2-b98c-f8b7456ead7b",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_16.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "558a9442b1ce5713bbc0ed1cf4a88789ba0a87e41419244e31b0720330f424c1",
        "deprecatedHashes": [
          "436017ba78c9bb2ca1c274216ac590713e82a861af3c954d437232dd99c679f6",
          "fdcec93be1d5135466c797b8634983bb6a17d33cedeb157031cd4d8d3c08e7e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527627+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c0346628-87fe-4ad2-bb86-7c3da12cc791",
        "line": "53",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_16.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "070849e65009fd2ecfce6d8542820eff851f8a45edaa6d258cccd4cd6776977d",
        "deprecatedHashes": [
          "c87fdc1eab662851ff932e4e0fa94aef7ac311b8f9ac2dcc81d5b96110d904bb",
          "94070b04b48d1460b899d2b78e057e1c564260363d720c6c4ded08642f8c6c26"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527628+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f1929ae1-bab6-4fc5-8922-5944ca67681e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e0d1a41fc0e0185d348b0c672e90e9ae6e78441f4beaba31efb698587c2d6283",
        "deprecatedHashes": [
          "279db4df2b9d8b262c3b6d9eb6256c367326089105bfe69ae8a45b8db5dd0bce",
          "3a0f4c1d5360a317983d732230fb72673308f0a6f10cbcbb624e23f96aa125b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527628+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "46485e1e-112f-444f-902d-e65febe31923",
        "line": "102",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c4dc0181a0aa94850f41e5659c02628b093c7817b6f69d2b5032239abeafc3d9",
        "deprecatedHashes": [
          "9d947482e4c9d42e83a76a7dd15ac3187c801c5d613dc8bcca305554680c7acc",
          "a80c69c9c9eba9e9519adf01ed6e3348493f87d771b40ff04d44a6e5f47cfea4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527629+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "027d3de5-f04e-4436-87b3-8331d0a91fa0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_54a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d0bc38db836157affbee7ad5040d4f1e91033cf1aac1c78b5f74ba66e5c7a6a0",
        "deprecatedHashes": [
          "d68588e75a43e8464af93f9e5507e87cca58d846aa32015c6658f1a98b98f45b",
          "632588d1665b26cbe2ece6648a0463489cab91229e56960a20c63f2c9cc4a44c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52763+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "76e684fc-daa7-4352-8ef5-1013ea53261f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8bf4c8f3aa50e672e08f61dc69d3330c0a521e837ec449fa8226b5bb859dd2a3",
        "deprecatedHashes": [
          "b1fd6a92a88bb25eaee87783de226bf501c3ba7846d8259a54014526df775976",
          "e90055a70e5d9d0d18b79599c4aadd3f3720a6d606f36d718517d474e07c201a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527631+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5da46f13-05ff-4dc1-839a-ebdbf8f9818f",
        "line": "115",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "77f7619578d0129b8e2fab3f230720d89b34860e51632b9161aa22a1c7420d4b",
        "deprecatedHashes": [
          "3985c99285be8bf32976ba0d7c55652de94f1d42dc8ba6a8a61a3bd1ad11f104",
          "714eb82ef602126f4f577bfcae6ffa1396acbf332cca220bcd4d7fb2b49929d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527632+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f580b876-e25d-4368-8f9a-0e1aa22ef4a2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "acf5bd87a35be0d3a20e5c303b5f7cf857710f88ad57c2509ef1c5c817d2710d",
        "deprecatedHashes": [
          "9fc9c763fdb5fd27aeca36843cab9e704d0ab268558630f2935a9fedcfc5378e",
          "a0986cfc13043a227becb67567bde027c774b24272cd82624eec74980306c9d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527632+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4c38468d-0108-402b-9cce-ceeb8f301375",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_03.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cc5b167164e8de61266919b526441886ea51d9af4569420fb873ba0c3ae02faa",
        "deprecatedHashes": [
          "b0d27934cbd61a4cccd28e86038c7f40d7e83f43fb76fb2b66da49b523ec47f8",
          "944dcbd90a52f018ca7ce27907200425acac98ac309535231c0a1eb9bae9015c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527633+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "45dd788c-ad8b-47c7-a766-b83cf668cfb5",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_03.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "55af9071be89a20a2a417e8891019a32da81c6851a4f8099dd234aae5e062581",
        "deprecatedHashes": [
          "477d2762b2e29c51825fe9b686724f9197ddd4809cd163452f6c125b0a63adc4",
          "05957bdd750ec241304b24f597ffb07bda4dfb00678f0ac8bd8bfeb187fdfa59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527635+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9cb49c8-f83b-45b1-9f49-fd3c733ccc8a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_45.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0b57b8bb41a6453c0f9bb32c805ed5ea29b7054935e648138f0926a2d5403093",
        "deprecatedHashes": [
          "c3f8858fa3ce85064851439b3beaadade9d87b47ec4225541bc4302bae31e0e6",
          "fca738c5488846cf67e4efb7dab3024d25ae54a779a90e53effc4edd1316240d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527635+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b39d1a78-6df6-4d83-9e29-f2ae5b4648a4",
        "line": "53",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_45.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3b193b323366755cc667c5a91d0abe082be330aac15c5c52a14ffe206e9a4f55",
        "deprecatedHashes": [
          "fca24574144bdad9bb6dd83558cc428aa7fc1d4ca53dedc1ca1cfe8eed854266",
          "9dee77bc227d7d02f91bb79406993943925e2395fa1f693ba52227caee6ac0fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527636+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1e234525-cd66-44e5-9cf3-8464a892514e",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_45.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "52a6959454c19f4238dc649f8833709b0529071d26ca8215ce38f34268f261a4",
        "deprecatedHashes": [
          "b351b591f178006538e7011a6245f507859a0a2608a198d71618fa260c52cfb7",
          "d2939237fc34a2585ea2c1820340d43c810ddc732b17f53301554e4bc5adad52"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527637+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d95ec5a6-67cc-4572-ac76-e1b4832b6673",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6bbfdd00de3ed6fcecfc119ba5f4449d540c6333d2b211167a92bac3ad73dbd5",
        "deprecatedHashes": [
          "733a2134988db44e7bedceb5a3fe88e6b8a5f0bbc7384e3388c012199f4b422e",
          "c920115c686ddbe577772a57316b00f263528c1f4d4728c927bfe9dfd6db6472"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527637+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "369da191-50ce-45b8-bd83-af9fd8d0b41f",
        "line": "53",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_15.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "df9c24b01b43142d64a929522b1856f1690036814a3907dfdd3e9f64f1279408",
        "deprecatedHashes": [
          "cf42c2dea5b4fb8b87b3e1f37ee451a4265524a5ce34d048a45f1b66d71a163c",
          "27a1d1a8be8f3f0685edd245e1ac5bfa0c6de1f2f19243647237faa18554d1cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527638+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ff2bae3-3bff-4cf0-9716-8566cee0aad0",
        "line": "54",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_15.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "f677f118c6cf5ef2d21e981fe78da863321f688d9306f6554b2d9217a9e0b13f",
        "deprecatedHashes": [
          "f06faf2abd738ad271985aa7956b7341815b86d8d2224b08ee969fee3b215b57",
          "66e2d48baf67805605f0eba9350f168203ed019aca78d3c4adfcca9d78c3cf10"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527639+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "260ba1d7-c86b-4ba3-85bd-9f780accff6f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ad6d5dd1f347dcb99082eb2580751297064ad6a4adeed32dae2ee0b7a6809361",
        "deprecatedHashes": [
          "e86931acda93273c11bf16501f6eb669bcfe5b1ee22d1408c1e973e84dfe23ac",
          "990e5511e85c401922742229b44c17664569deec1f4f4cb26b5c3b0bed451ea1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52764+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d92ff694-290a-451f-8652-61d748c15678",
        "line": "40",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_61a.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "20fa2e45f7ff08e99f779656aa49816ea0da08fd7e8fe7b1b5ac1295310430a7",
        "deprecatedHashes": [
          "186d104734ebfb09d6cf3ff18ccc9bff32a35bf5d9e69e03a224071cd0f33461",
          "7ebfdb0e69cb4d69d3661974d70d6a894368c805db51f35f49dfef97197180a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52764+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b46d732a-4649-4b24-bc20-18059a0e22fd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "483ee4f3dfcd89646d19cd8fe45a364a0f1d3896da958332bb4ecfc286923df3",
        "deprecatedHashes": [
          "871f6148fc1e9e77656bd7d8d5fb5596f88ff265f2e72b83fb5062d89c6ac818",
          "5f2e5dc4fa15aeff01186e6a430480fa87a76b06296ffd747eb069d88edbcac6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527641+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "257bcd0b-fd7a-4a2b-9ecc-0096d912ff51",
        "line": "102",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_16.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "dc58b17f0b9290ca3d6828669420bbd1ed9fd1410462b0256e893a6ced580e83",
        "deprecatedHashes": [
          "1fad80016c41445e8b399af06b926ee0874153c610136975287854b6c67491e0",
          "0fe45d325d134cf5497a6a6f07ca7145b5f89d48e283b5581cb2df79ecb977bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527641+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "99e6920d-9e81-4dca-962e-ec636b67dc6a",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_74b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "96e05a3f4e701b9dd86d4e70a9128992a201279271fba59f33132099079a42a7",
        "deprecatedHashes": [
          "e6d3fea5cfa4e051a8789e81e237b741a0943a4ec89ccd026c3c82a88d8bc67d",
          "3ee5f5e2c3c31dbe216ce8129337e3ee3148c1a769bfb148921b9ae6c4149206"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527642+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "24fdb69b-7a50-4753-967a-3e5dae089b1e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6d88789b3325c595f4240c9e26a77f90cf5f076fe7a64c18170f9b2b96efd9ae",
        "deprecatedHashes": [
          "35a9ffd38e2aa3be8ff01fcaf45ed8f90dbe5fdbdcf8f7b8faf15251638918d5",
          "ee7df61aa64f298e38971678e099cd99bd0aa1ee6b96223f0931b2c608e40e0b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527642+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a9b14c7-ae40-4a0a-a065-79b006e7a4ad",
        "line": "52",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_16.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3500d631fcbc056927252872689e8beba2eb96365e1abfdc57da4faa5b561015",
        "deprecatedHashes": [
          "a5c792fb917cf08278659186495fb5c9a9091f1e05a502651f4ee851b32cb5cf",
          "1651cdc317be167d62bfddb5f970102612dfe6631d47c9e925d0f35dd729bb91"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527643+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "16295d74-06b5-4393-b00a-2fddd090afa0",
        "line": "53",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_16.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "edc09ab704d3335ba9e56aad5773ec0c7512d94bacc68441bed02c0514ac6f4f",
        "deprecatedHashes": [
          "c1c59d88d246e3dcf7a592e888ac1f79b629a2a6f27f165bb2bd0867d5b3e7fa",
          "ff9114f41f2f936888c3479b00d754a4a7721b43e3033c0c94e11daecc542742"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527645+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a58a8f61-0c15-4e78-af43-2fac2aaf1a00",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b6ccdc9d343d8c3067a46553e41b195a7db4a251bee69fbf777982fa93376908",
        "deprecatedHashes": [
          "55ee8835a625a4721a1d8a12b8606f5f3a61d20230197ef6122527ee8b064243",
          "c03d98b182011bd66e5c20debbba6efe5009dc2d0894e4c71618a91af189ab4d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527645+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ca1c7d5-6996-415c-a3e0-7370d350beca",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a87103a32dd30b310646f41519f031ca31b81a08ca4505be050a543e7ff081c3",
        "deprecatedHashes": [
          "0aef8ea6a34ec5978d03505b968fbadfd2e9e3d237dd204f499fac0a502a451f",
          "646b84a6d1284f7943a2ca4c668e05344de9e3fc77a584746efab2b43f0d0c29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527646+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ba110e4-3f91-4282-83f7-00553893b137",
        "line": "46",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_22b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "23924163b42a8c0d68bd6d4e95b83c71f760b5c300b9a4ab3124c3f72c65ad2c",
        "deprecatedHashes": [
          "02215754dc06ffef7e40c008d89fd30d1ab12bcfaeeac59cf2df7d7197d3152c",
          "9b6023a4a934567f836ed54d5b8dd92fe17ab4941c2354bd58cc5f46d7425a2a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527646+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e09b8091-5007-4993-868c-d2376229d8e6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a40360bacbdefcc17e5dca33ea6f293415fa99440ddb748fca7c2fa4d1fcda97",
        "deprecatedHashes": [
          "a09f9c67f03bc90da3663f72872765db8ff340e91a7218fcc9ba216aa1226498",
          "0fe76c64617389376e049a44c15860dd0ee571a8d1838ef0762f68579fedbd49"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527647+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f72c090-0cc5-4015-a124-d965ea1e9651",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_10.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "458cd408b0d32d9b02ec1936bf57ee9fdafc583ee27034421d04fd0d01a34959",
        "deprecatedHashes": [
          "a00ff54bb96b8fb835d8e6b0163eb110dd85c766889025f7421b9669454a87ae",
          "227c0816eb995d07398c3210074efb0cac25455e5eddbd530114de521e9691b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527647+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2f911fc-0308-465f-9773-275a1e8b6541",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8a5b3fa5f609fbb65245ae765fede8ca440fda87938ef8db0dc7796c53865fd7",
        "deprecatedHashes": [
          "8a30a0789eb153f3ee7db458d0a21ca80498130c8d507678fabc2de8d55a0318",
          "6bcc359de517294aa0d16573c01e0b3df26d3db6a739c098f1244993d4abaf29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527648+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c3105a93-5d4e-4a3a-bff2-8d9fcbcab95c",
        "line": "110",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_21.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cda4612eeb33e70dc56b1ed9166a8e03dd76099b5653c5d009a991143e48d01e",
        "deprecatedHashes": [
          "216eb087ec16f4f6d8fd6ee7ea58a38a3d468c2f268e202f877f0976b3402f25",
          "af3aaaf438272857a089105f051c851c27fb17c912939c3f7daa2dd593d2427a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527649+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0741eeec-6e9e-4722-bb16-274900180690",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "968e8c2361988c6ab50c6af4a3d1e97d836f7cdb1e22bd61139ed4253a55c25a",
        "deprecatedHashes": [
          "dbfbc06ebdbb59bbb170e1d7e50e7c65126dca62fabf5e2349f2acd6ff9fd47c",
          "d94bb377e460c3b1138898c8d8121e035ff09d0120fa8fbaf8a3510316ecb9b8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527649+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "493f91c1-03eb-4675-9c87-4ac19fb01800",
        "line": "67",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_04.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d27d4288ce4b543a21ae1500c35714fc8576610d1504eba7277d7b474be72fc8",
        "deprecatedHashes": [
          "54dd1cc27b711498cd124eeab4cdc70ec05a9bb7efb18c7b9bf93438bb9a7024",
          "cbc0d013a55514cdad28a51a3a7e4d9d6d855c0fcbf7b3b3e641b2be1f9381bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52765+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8524bd65-f8df-4cb5-b7a3-4eb39070e728",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ffe9e6eae0a41acf357281e16e10e583db8cd585ee6e4e83e70ef590710a2597",
        "deprecatedHashes": [
          "f6728c375b57552606c047f78ae7c9626d060397bd6a153ea5c738f7d3c1ffa8",
          "abb283819a3c621734401828c449d1f4009d540db1248f843b4b2c89c0bca8cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527651+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fb2d9c0a-4a0d-470a-b862-46d0532c132b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fca74a6716042b0232fd501c255fa5a7f03158e782a52ae3ddf8417519703eb4",
        "deprecatedHashes": [
          "2cd690cd97a6a7f0f7c6dea4556b31ec20a77056f05d897d665d69a9adc7f17c",
          "6a8bfdb11eede7e9abe12468b64c1197348e04b55d1970e36d75006a0589ade3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527651+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "26c32c05-c716-499e-b60a-e3b35bf3de5b",
        "line": "58",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_17.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ac4f34c3dc12e131bf633a139567dd0c4f40635e0ee4a4bc92da3a89dc0fb088",
        "deprecatedHashes": [
          "cd89f9b4ecf1c030b37667706361abc09b738b114fa59a5f00488dfc532797c3",
          "15fd1b65fcfa91a5426c03cc94e85c0799d337f8227982e2bd34b25230da99d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527652+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13c4655b-7060-4c57-a399-477e847d2be1",
        "line": "59",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_17.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "465e39807bc3e2d1bb038287aeb8c844d89b75b23eede7db6077aa70fbc66ab5",
        "deprecatedHashes": [
          "03164dafc4c2cea274bc6137ff758040dff605fc63a91421dd75659e62a724a3",
          "5200020275cc67f220d6e99faeb8b18795bd6b423ef3f63e78a1a078920ccf15"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527653+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c6d4160d-503f-4d97-873d-e2c0cd5fb83e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "746f2924c608c919468d229dc7a73bcaa0dd9ffcca8b3619e468421390c3363c",
        "deprecatedHashes": [
          "e9966cababa72e6c976e8d3ab07165699ac53b6eefcd140590c2dfe547dc8a9c",
          "8964c2f5aac0488e2daf98eb80527ec6370b48f6743ce8613c5c9162fd66d246"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527654+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6ac906ff-c794-4d1d-80d2-2ed481923c1e",
        "line": "43",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0f0c48c9a642a7ecf7f2ca8961e8b1eaea68c5238607d3d52c313f0ef1189447",
        "deprecatedHashes": [
          "cd13ea836e6042cb441703277db4b90bec1bfc4effae92508e4669620ad31bf4",
          "f542c7120ccbcd7a337de5247a32f69496a47c613c75fba7f95e644ff8d523de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527655+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d5bfad54-1958-466b-b24b-80bd587cf5f0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_81a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "82cbc78b96a8737f3b513f1801af08cf1b7114cfc9ec1c338741bd80396abd19",
        "deprecatedHashes": [
          "cf088292c251855217f1ff1adace3a61c3311f77305220298f914f893ad8e277",
          "0a84408a3942767fdfcdcaec70012803a35e7d2baa1c470b171a0ab646d6818a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527655+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2ee18b77-df66-4898-aef3-d1538f758b74",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e3475ba62c7f5514cc459615d76ed07d0b0697767dc8c7fd77a64a111e4d7e99",
        "deprecatedHashes": [
          "4399f11dd12e5c89691e4e92191a1068ad6ae2e2a32675e5a0210e407d331ee1",
          "26059218fedd99786441931c9971559f8fdc0b8760f89a4f5274f42de1c71e89"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527656+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4d564af2-7e3e-4520-a20e-135c6ead7a2c",
        "line": "56",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_21.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a2765d72a1cac251d028ef41ba8071d0fa73dc1499ca7ab6af373b0999205985",
        "deprecatedHashes": [
          "cc895250eb04b92fbd9cae9c6520577244c33aad1e197825dbf274cedc755935",
          "c50bbf98f30c887f584acd0c5bb2df3c94fa895be714417d1ae530c99d8bc822"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527656+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c24e8c5b-c662-49f2-ba43-241a072e1599",
        "line": "57",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_21.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "773f6e9f026c133214ff912e42fb79ebf6660b57d0f73e919847713cc2826d61",
        "deprecatedHashes": [
          "52235e85326a73374ec98ac7b80515efea321dca4c7ba2c6fdae31fbb7f7d6c0",
          "99c5c8e287575bea051ed8423472d1ff1066749ac14541e9b12ac35030f55d27"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527657+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b486cbd1-1bb6-4870-ba5f-b9e5ad50c18c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "aa731e70fd60ed1a5924793012b50a40890b7516e2448ac4b2601584e73ef6d9",
        "deprecatedHashes": [
          "c49933a251a4e92793c83a353536cc185fc1775f6e026e06f6336b02e248ad78",
          "798b78be7ae6f6649a5b893d3a7f4c3e821f97c3bbe3259013c82a77f2b8fd30"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527658+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3a825acc-c35a-4419-82d0-33e814d88d0b",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_07.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "baba21bbacf1e419a71b75c34e139bd502d601864b5c51b567a95f996944110d",
        "deprecatedHashes": [
          "de39e438ef9e2cd32f1f628858df007367cbcfa68277d0c891eb6c3e8f10491e",
          "17a036a2810fb77f47b448db9dd05c429cfe23d016dce6fde8faffbf34a7fc80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527659+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e7df848f-c77b-4e2e-979d-f451f3b5f057",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_07.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "98919221692c0a3dbfb2f16724c56d3b83e55da5a3fc38199ebf8989ee1eff6d",
        "deprecatedHashes": [
          "590d39915477d44f2c444476a90cd639c90166a6ab54ae728a06e8ab89125ef1",
          "01f44baf2b9e00fcbfec5b6b324bde6c07542968b6abb7195090413329243fd8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52766+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "865c054f-0341-4133-ac44-745807553af5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d1ff37897da4f7e5811919184190cc9cd57ce5f0d9881e46c0d702667786b374",
        "deprecatedHashes": [
          "e019473449886f2aa12696e55acf8c4923f3afe05a53538a72ba52474702f9b2",
          "2df1c460261a0bae79d8fff9b254c393e6377fa666438a22670aac3933acc314"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52766+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8aea1b06-058e-48ac-aa3a-aa9a496ee022",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_61a.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d1bd7fd0c1d6f7621a72abc281e8c347666a79582469498f61cc68d537183826",
        "deprecatedHashes": [
          "1e313c8d25572babe49ba6eb1addc6c380aa01f3ca17f49eb6b9566041812187",
          "951af3b590856995400542dd5633e55252edd2d626394e5d62f4753c2234d287"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527661+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9119f60f-5e95-44b1-98a6-8604492f5880",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_61a.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c1a927e2afd6d3ecba63359306771f807c3f903eb650e5ec053fc4d7cb11ac26",
        "deprecatedHashes": [
          "b2ece5b34fa2a7a8c8cb2209ee0dc341d34ba57d77dbe5ec1fffc93700d9bd91",
          "d010163cd62085834a8f250e3d4d0531d17a59a3a2ee28358cf245941cbbda2f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527662+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9bf466f3-a18e-47ee-920c-812bd782f2f7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cc42da17ee6342ff6e26e3d9119c8e448c4d51f4d756afd1c926db8280271f65",
        "deprecatedHashes": [
          "2b219f5e3a59a29cf1be3c914306c3504a1897c08e187f0b4b110c1ba744f895",
          "cd2e72cbaa374a170219388d875d07e51bfe2f25574dc4a6c56774595928c30c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527662+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0e08cbad-1075-4634-8f41-9ec143f92cff",
        "line": "57",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_42.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2f881cd6c666700f289321b0762999ca5db5204bf99ff3b1044e36a6bfdd00a5",
        "deprecatedHashes": [
          "ee8c3fc36a55eb075d40c61bfaa6cb43cd3d5a5e6f8136bc8d7aa623507c3736",
          "2ba98dadfa7ae2ccfb3bb370f6f89c3fb07e17743c2a306befe61e2addc434a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527663+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "af918fa0-1ba6-476c-b78b-1b7e00dd5b46",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "33fac4532ba7b2097925157fe5262b836e33acde1cfdfd41163970a6f9a9cc94",
        "deprecatedHashes": [
          "06498fee00597a6f45de23dc5f66f92233b138beb1343e570b13c64af33924c4",
          "1c5b79fca11d87f808568fe23b19f06c136a67dfd5bf5abd4a804d6b8450b321"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527664+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "908b13cb-0cda-410f-807a-566fa7852728",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "023c6afe80549e93e5c14e875da6e501a672b0ab61e2449306996b201e353cda",
        "deprecatedHashes": [
          "66147fba8c4246b196327f99fae47e01da1e84c1ff2c6c9c9470425baae12873",
          "6132510cd667aa5036b0887b8c1141ae12df80190c848834e4fecd813aa0f21a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527665+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "86d0bec8-ee2b-48e6-b36d-db4b7dcb6e44",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a8f9661087956659177e481071ff6f5329a9d59070a9282e768d5baa7f302733",
        "deprecatedHashes": [
          "4bc8d5bc95b272e2bb25c0755fa757ee966603f8f2cb52b23ed12d5f7198e5af",
          "fd373a80775390c0c4b13a6f03da38f91b4cca656fd5efe219bfa06fa501fa47"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527665+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4342f75-579a-440e-9288-0c32f6dc4297",
        "line": "97",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_16.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0505eb8a71bc090ddb1fb92378023fe784a1aa1ace282fa99e91f9adf8245183",
        "deprecatedHashes": [
          "e54b3708c60e44aca916b15f7c0ee821ac4b0d9d316f028d8749a973b0e540cb",
          "8111b7810eb65f79913e0d1fee5df4d5c8883f54d490e717cc43a7c376334ef2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527666+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6346d76a-e3e6-4193-81c8-e78da009db23",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_16.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "600a03d1a1b0f184d4cbc187155790191cedc114887d3601dec5620bc494dffb",
        "deprecatedHashes": [
          "a4cc40711be672c09025396e1f89edd94dad53f53401a8ba0713351c2c6ed96e",
          "80b587c4e408c03d827669b0248145e26dd90d5c2aa65c16e3a06de3700b99e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527667+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "69b5d60c-a42e-4eae-b14a-78d58c312865",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f88d40653915a4349d54afa51c9f566a845ec751749e2b8f7bd287eae3ff95d5",
        "deprecatedHashes": [
          "a2bdfa44eab8a407e88f52e2f103b8a6077972c29722f7457dd8edb5bc305ef1",
          "1b52f4c1a08acef8bffeb7878ff3a0cc1b4e82bce457414569d0193b468e5036"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527668+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "84282bca-a2fd-4f34-9069-d69212b18c45",
        "line": "48",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_41.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "df36d2867994fa7b0d99bfb31971bebd9011b890f2b15cd5479dbfd9b19c0c80",
        "deprecatedHashes": [
          "28f9703b0e2827e02981bce0c23a29838c2b742da938614d4d6ea50ae12f09c9",
          "2c970887cbb8042e5290e1f70aba2db633424886fa07ccfb1736b8876b1013ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527669+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "322ff1f4-c53e-4ab8-ab98-5e31fa791b37",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_41.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c79be08512f13e1fdf89f85934a297b88716d7b9fa2fb86be0ad05edbdc560b6",
        "deprecatedHashes": [
          "71b3156adec482c31af58b0f57f3b43438a293a6ed7c198894dafd56e3cfaa75",
          "8b8cc2bd10e859f90f9313f8f960acf7f379ebc77dd04c952eae5ac2ff9127b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52767+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7cb5923-9d48-4127-87df-1291b1b18d3c",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_73b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "76a579036e3682599226fb9586dda4058e250f656a2cddb7b84128aae341533c",
        "deprecatedHashes": [
          "19c5bc9298e3ad89c80c6068c251a7c006072d296be6cc8a285f586147cabb78",
          "2f3b7937f52e45fd1db128889ff42eaf140a8d20f3206c440558e2d6ab4410c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52767+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c301b67f-63cb-4df9-ab03-ffe5e0db7eb6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "51d02695bff74b13f41bb8cc69a6a215762f22d9b4fb7656226e99fe01c00621",
        "deprecatedHashes": [
          "a55b73c5a0b4841278215eaa5f8d842eee39691670a0db92fe135415eaa0e315",
          "6549648ad8e95ca949c8cba84344aeca1539a3a20d33467e3055075a0f1b786a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527671+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b0eb1eea-9524-42cb-ad5f-646407b77a53",
        "line": "103",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4b1ce8682ceb0fb4472f8766730ca5da26ab99ca48e4fe376fd0446451d17e03",
        "deprecatedHashes": [
          "10d0ca8535ae7e30a6dda0bb3f8f5b0ea53e32bd1b54ed5057c85389d640d923",
          "1b936c9e36df7c0c6305205556055110a50f3ac4675f2342465ca620906cbf4c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527672+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52ddb546-093e-45d1-9256-cac11fbf2683",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d53060bb5a62c4a6d59941834c4d616e11cf13abcad7b1dbd3b4386342eed570",
        "deprecatedHashes": [
          "834d046104f9cb9ab86638b914385e3ba54b6535d053eba0b89867ff11b6e0cf",
          "1905db269270837f4453c5a8c399b315720a502bc8f909a2fa909908ec790369"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527672+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f7f7805f-c44c-4170-9ea0-9560fa0f9a92",
        "line": "114",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_08.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0b69bf08cdac0f4cb74437c125dbb847537a14e8c0fddd9f89d9e619fd653926",
        "deprecatedHashes": [
          "6f5fd35f5c6264d2a60c7fc663ba922024a5ae24970dbdba8a2849744da5a3cc",
          "25d822354650221729b9eee05f9f30038f13627a2a235d304103d6403e6f15c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527673+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "107bedb8-d749-4db1-9aa7-66973e294a31",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_08.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "10058fb63a7b8842f8e566f33d31e89d9ddc48174323cc7cd508961f7d91fedf",
        "deprecatedHashes": [
          "3aef55416c775fb1943a6409a5b0589728cf44362365faf3e673c490625341f7",
          "e15813ffec807504004c23e8122d0fd838e9dde04c9fefd32f35772049a91feb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527674+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "da09beeb-4df6-4b76-8eb8-e490fcd0916e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "02f03e2a7531bbd5ff533b7ae5534770a67d48a3555f3ab9d946c9966a619ec4",
        "deprecatedHashes": [
          "854e8321bb40d6f55749f9a530d8e778846b9276b8e08b95010cd8c4520f0d10",
          "acadc8d15479e4a2201ceb7c2adf359ed4329dd0e6f444241ab406c48f1fe81f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527674+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "df10b70f-561a-486b-918c-f4609771a240",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_17.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0175553239e8ce4988ee7653029a965cb71ad53f9809bbf779d3fef394639482",
        "deprecatedHashes": [
          "e5dd3cbfedea2c29427775eac6f48d459fec92d322c593d0dd8dd9dc369dc91c",
          "40a9c63bb361c272b9785112dd4c15bca3f19b25b18d872a544a579ac57835cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527675+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6c46e109-932b-4e10-af8e-6ad7c71f53f7",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_17.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0d8941127ab53ee8c90d836ffcb0254a810ffc970ed44c4b6df291431f105f28",
        "deprecatedHashes": [
          "a31b0a3d0d74a58811536aefb8b26f57005ab00dd6a58280c159e3401244a4ce",
          "7e3fa1efc9d78019ede1d7830102f1759bf6e8e4f6778e777b618f056dc0673b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527677+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d87923b-5888-4f33-a36b-c9d7bca04643",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "021295c6fa130d269e7753ded145110b36e18f092c572771089d70468f98906f",
        "deprecatedHashes": [
          "0b49442bcca547671dddec8a3cb804039d11a09cc64277b26abde792f8cbaa29",
          "a12a94a42ed984cebf430e70796d37d5a1c71d2de79daea879ec4af26cff56d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527677+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef3dbf1b-9e53-4144-909f-1f2c48b51e46",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_52a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cdc7221ac000b05b576e0cb733cf28ba41cf762e4b3c13e076c5b6a4f71a2c50",
        "deprecatedHashes": [
          "c367be05c5981701c1d7ded629030e703828b657c5c8fdced4b5bb0d366eb648",
          "521311e08b17fc8db22174c9b1c86170d256f30de1862d22f450d20ef5d322df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527678+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6db7d122-8911-4b5a-9e28-d2647964662a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f0af4e38c2bbe631ce77c57be4377b206876ba8cc4b7d20207eb34e55ded664c",
        "deprecatedHashes": [
          "392e9926f30c6e2447da72cec99c41c698dbb474a7d5f9101cca61eaa7486047",
          "3f5e0eef19a43f5c509009d1ff93cdc49da230661226fc104a8567ba26a3ef40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527678+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "586512f5-6498-4b6c-80ba-5bf35f5f2580",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3616be30a7c945ea2e4d79d5870e4774b615be2d7219abaa6519bc4788236bbb",
        "deprecatedHashes": [
          "2d184f8c0602b76dc04f69cf8a53d07057466052d522acacf004c38b6505a9ca",
          "2d3f8ebcaf1c779f642fd649ac3017861b9e1870129e344599adc5e8e232f2b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527679+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c5c4ef4f-6fe5-4f21-9f2d-673ed383b2b6",
        "line": "56",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_21.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f4faa8d09186f25ee5f0e2ab4590c9e21679ab74471db64cf87df52a095c722e",
        "deprecatedHashes": [
          "1f7e0acf274180cf0367a740b2a0a7678716f770da91f4c53af8a5ea4c87ba6d",
          "41d1fe83c907832dd1448384059bf87d8561406c9dc8e70ee420946f4b8104ae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527679+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9d916089-8b8a-486d-a117-0afdca5c5c0f",
        "line": "57",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_21.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1417610ab473cdfe46a64d43c646dd491821586f2b6f91004e6cd07b8c4c3014",
        "deprecatedHashes": [
          "de5a63ef4dc1fdc4632f539a138edde7dda7ee69dc527e15fabaf75d58b90297",
          "6ebed331613f296813e0775abbaafd321829d6eb97abb6e77ede5295c9bcec80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527681+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2d7de0e9-768f-4dfa-a142-16dfa1b5d56b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6038f9a6146dd9df9a5f8106072d19e82b97e677c553aa67df66c7dcc47d0317",
        "deprecatedHashes": [
          "90022c4250c718dba11182039bc2a8548fe82409f96baf5942992211da1893eb",
          "798e0cecb2665d8535d1d1c434e5b913d20e9182805362ffe91652863846719d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527682+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "acedb982-93b5-4339-8f96-4b045e3ccb82",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_03.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a15203eeca97ed39d18ee89e654643299341709c0f52d0fac64672190d12983b",
        "deprecatedHashes": [
          "dcd807595191e6282547bd3d0c916caea00ac84b0ef7df71c4218a5d71028193",
          "55c952352a5934467d342f7543a2ef16fcc4866dc2ca45d55d178e52a2328656"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527683+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "81d035f7-1fb2-4b51-94b5-f8fb8295d94a",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_03.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "21b729fba627ee4ea458e9145a6d2b891f18b0f398285522e2e9934e6d1d6f1b",
        "deprecatedHashes": [
          "e8e656d3263f23289562035c48f8697ef6c3e929f6a047b2e4a6bbd0360c68ce",
          "779a8698d86b06d7cf3e70c62908e2694bee4180f29c4e589a2bb0e98b53bdc3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527684+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b2e24ed-e745-407b-ac74-a46b6dabd21d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e0fb00b11edab702ed462be14f6b66f12c45d101a78989abb9f5496f09b7e902",
        "deprecatedHashes": [
          "48e2c2d956c25cb180ff40db6dae252aea7c10994bad062e090a6f9674899ad4",
          "45dfc2eec14903f1583641ee635abaf6a9ae77375a496a6892cfc8a9cf8d3cc5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527685+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "118de4b6-1510-41ba-9806-97a843b08849",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "37a464d561bec2afd2c0c68312795885308a485ce4d1e07817ff8fafa1640625",
        "deprecatedHashes": [
          "615bd899f96c4a27c729e3d92a047edd481626d32981f6ba5dd4701b09e5d698",
          "d914f589ba065fabdbc88d0ff596aed85217c96055ca5836ce0cd6ee5bb0a8b1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527686+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e95d87a-f77c-489f-886f-752c5d0cddd3",
        "line": "40",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "57d813e2d1ac161342b4727f507fdc623e9d4c9082672b36d56095a914f2ceed",
        "deprecatedHashes": [
          "49a73467de032d2f7add65a5a5780a61696ba0edd2e57890a01d2a714ab8dc07",
          "4a2baa4852bfbac17dbdee559a913f5fd715acc84150188a4db6984d89b3cfad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527686+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "55e8e0d6-d753-40f9-b5df-5f8984531a05",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8a378f7c802a79e485ea2ac8dbed2927a7271a3025120e8684940b4a4ae91be4",
        "deprecatedHashes": [
          "b12bd169d7dd262cb512b6dd6145c944dd03d1547cc3ac7cefe73106b4490b81",
          "1b460f22955fd335090d29bb8c1baef11e3d8346ab4a31c2c7027678bdc0d743"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527687+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17a1e32e-7282-421c-8c8b-9daa59ba70ea",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "26e30281c4281331951d88b9816f85622c81af27af7c90c4347ae43f41153730",
        "deprecatedHashes": [
          "8571bc3b9a1e7d9dea77dfb0a6c8eb98ae450b8947bb2d29e6974d250b73326c",
          "73b89b74f727e7998d7664f24a1c0ce25983b0b18daf2ff237dd67710a40ae5b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527687+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d119654-17c6-4d2d-98f6-6575bc5665b7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_61a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "add82cd83f3788a0df7ebfa988af7d7748d334859259e49290af15b5455bbce3",
        "deprecatedHashes": [
          "2fba8fd2b69b9eeb5b40728402ca7d9df81b45c1fedbc582adb87e67744e9649",
          "31b5ec445d0b4c8905e6bd1ebf1d826e7e49ab379c9442e60304d6994a217c52"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527688+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1e479a2c-a864-4064-b3e3-f84fd0ba4235",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_61a.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f19bb0a4fbfd91f5cc8e2c9412643d1db4d68ca2e1733bf6e31dbd5c321dafc9",
        "deprecatedHashes": [
          "792a202572de4f9c084583f8d3fc123ac43139a67e302735afead2b05b033fca",
          "c2b17da0318aef8d58e5f33f807997b5509cb87093136be6359fe7513d1a06d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527689+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7668c3a1-8439-412e-ba30-dedbbe4bc761",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "67ce1d6cd394e94069565e2d5f4c69d2fee7c7bd15c22b6e1522455b333c62a0",
        "deprecatedHashes": [
          "a23febbac6e5a0983b6d869698953d7e21aa737459adabda49e1fc0d29a2e807",
          "9fe7ec3b04ee2fd6fa8dc3fb179d2cbef45bf82f2007b215f01375d8a0faab7b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527689+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "75fbd8be-9962-40b9-ba4e-fa8a56fba081",
        "line": "95",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_01.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7f9095ce6f0345d1d4aa6ea335e29e9d06f3db565afb50af144832763d5e08c3",
        "deprecatedHashes": [
          "22ed4cb81dab4300dba6844c9c54095b540142c116fdc61bb9630ce307318432",
          "ce2353e4fb454f969351a8c9a5477c1378204b65502850457377e5e3a4fee7c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52769+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "58d1a855-30e5-4bf1-8eff-45651c3cc0ff",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_51a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c1f1d918853d54c73bf60bf33d7cdf916a674dc4d3478db5d7135f815311f5e6",
        "deprecatedHashes": [
          "e44c100b1282cc00857f9de6c5871c47d03152aa81c828f55be2d638d364aadc",
          "508ecdf11274d518e01d8e526f2a6167a3e392d14b076079bbfa012fe1f283a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52769+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e4b7383-6056-44b8-8a77-154738869910",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4b40f0a5f6d8f0d87b94808276f6d211682e2e15f2b7a0bdc0c8a95706d82017",
        "deprecatedHashes": [
          "9eb780ae368db254437b85a8997f95137a0d21042ddabe867e011b67c03ae368",
          "38de9e824358b6a494c8cd9ce9294a3bddf3e386a10d47b8ec2efc1a9f566e3e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527691+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "80030339-76f7-4cc5-bb5e-e6b983bb1ddf",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_42.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b2b6095f833663d4b3d925d146e8521a3dd3d198c615f1f53433c8ce03a45f30",
        "deprecatedHashes": [
          "0bd8b4a283c8962491f71b75f1ec0244ebcdc0777d4373a7d77a0c02cc0b9975",
          "0ae9126f3b40bde0ede966d8a5eb7eb2f8d7de3b623505650a9093f06ba3e18f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527691+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b63d3a2-cd73-4d1f-a4a5-4e39e223e682",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_42.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "54cf3de31a3cf0628fb99c406e45fe35b77db3c7a914e598d173cbd61148939e",
        "deprecatedHashes": [
          "66e8efbb3701306838ade92fe446df5e5b5a4063c4ca279d63484d9a3ed68af3",
          "ec0863eefe26e2273c4e0c120d30d4899f0d018aec0134778b6fdbc27be676a6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527693+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1b3e106c-4569-482e-9e20-521023a0eb1e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f3d8d957560991e01c2bb00e6e0e406c2b7fdd788fcff82163d08afca00c5d3d",
        "deprecatedHashes": [
          "605b8ec82a9a1494b8ad5b237e8dc14e66f164c9d1ce1fc6adb9b83f1cc35cdb",
          "96fe03ebb291039e888a502aa591376def742a9d9c4cf1a0c94122a078446fc2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527693+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7c76af8a-7c17-48d1-a450-bf56b9ae20f6",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_14.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8dcd290376af0c374405a92ffd062015fb2e49fc07c3cc2c7c4c416f86213ec2",
        "deprecatedHashes": [
          "ec1b17dd35bd77468a85caf274fc823555ad9ebd5a820376910e27418f6243d7",
          "f765188ae2e612cdb81706ca0a303a170eddcbb7614971f330df1468a67595f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527694+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2ed5fad0-fd2d-4a46-943f-565c0d7cba37",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9e357d896900c7445132b25c5ef46b32c3d331720a74e2f99cf4d3fdbb7ef645",
        "deprecatedHashes": [
          "66f017f256507555fd3ae9b576414384139818ee43546389d24f03e81444f3e0",
          "ab464632504b1d60dd3ea0991149ae76b5da7a7f1332e4aaf544ea4e0fcbf98e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527694+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cdd7e6a1-7442-470c-b955-ad1855771ec2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e8e41c9609666eb8ffc9f45547fccc30bf40c96c7057df081881aca5db181473",
        "deprecatedHashes": [
          "d6666638461ca3949c857ac57df388ef9c7dad346d6306116b29e9de439a6bdc",
          "995d308adce0f1456bbe50be9b26defa472c199345f436d37737a2fc19f4c8c9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527695+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "19d42fa0-62ad-4399-9090-c66d032fb986",
        "line": "53",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_15.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7fc36da43c9175b6712acee5f997154f91197be5a611ee838ef87586bdfe739e",
        "deprecatedHashes": [
          "c32319b3a76c3bb194566088905dbf95a35e26a3db2a445bb6cceae566546e6f",
          "aabb8e107a4c3a5fe94fcc29211ba4176e3edfb54aa55ea883cc42f92490266a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527695+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef05e2fa-089e-440c-8ef8-44689819c2a0",
        "line": "54",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_15.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "803515c656467e37e847d14a57f21550810a21c16d798e5b450456c103ce3c68",
        "deprecatedHashes": [
          "54d44c43c22585fc1d1867606d929af70413526ade5613a5b9b829bfb197583c",
          "a47fd3e22e12e58e7f45c1dcc2a0f3124821ba93b246233e3c769cb771b1aae2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527696+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13cf6a85-e535-45d4-8a68-61b8b6b11aa3",
        "line": "41",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_22b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b2b8167cb86f5b6fc1fa6b55e78a811ad4bb4ad84be0dcf9b1db53a7234f1ab7",
        "deprecatedHashes": [
          "e9c70b8a9f319db5671eca2823fd54c31ca81830d51151fbc4f7e1fd289248bc",
          "b52d1075a59089f7c967831aa3c0cf4f91ad33637ff37f57a1d5276b64314029"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527697+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0603b60e-cd69-4d5a-82c2-5d8ed16f2cf1",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_22b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a96f257ab468f7b0b0ec59d2412bd8bbb8e57fbf25d69a21ac9f05e11f38329c",
        "deprecatedHashes": [
          "f8c6fcf7bcf6616dd656e7462004dc9d1583419edfa40df6e2201a3ae966d2af",
          "188cc3ea7a10f4e594373d9c25622a489d28b00a6d2ceaa7bd16c5daee601cc7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527699+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9c3b2b19-c98c-4f89-9cf2-082c7a1a8a59",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "25e77c36e29f13f366a715c6b272e2b1da66404b8c4f81fd42bebedb959fe73c",
        "deprecatedHashes": [
          "05cdd68f7a0c7df5b5381d7fb202ed020dd25c44b418d5ba8164d91159c2e22e",
          "aff2efd795f3a836b242dc00a389a8ffbb6be5f9dd66711e4fdbdac162edc52c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527699+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d69b12e5-ab9f-477d-81c8-dc81533798d6",
        "line": "126",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_42.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "19259885f61cee9f74bdd038bb3871b86e156acab294b17bd4579c91807c969c",
        "deprecatedHashes": [
          "bf12ec8aa07afd9e290106ebbc6e46c396ace74d246b721080c5dbf10636cae0",
          "8d0c1b201c22f7f3563d1384416f4847dc4b88607c6d2816267a6948ba89938e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5277+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fba6ec2a-d81d-46eb-8e39-ddd33567ea2c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "75a76cf1c7b103bc4c05542503fce2246e80f4f81025f055060105ad225953e3",
        "deprecatedHashes": [
          "75102e2ad71d5e0eb81d2ae8ce02b21fc554eacb8be382bdb04ed1562a7d5b98",
          "f5103443c8d81c8fb892e4d1a0d4d78dd23a6a30a424e4f66b357afc223fac01"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527701+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa257d2a-1731-4e44-86f1-6e57d0eab4f9",
        "line": "120",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "eafdba70c07ac45a1c9da04c601e61e4470110ba111857f446edd06c98eeb746",
        "deprecatedHashes": [
          "8f50dfb14e04a3213b1c5a6d2ea8f40587a1ec69c0fc7c00ba049bfa127a6471",
          "3f95ab088303f146ca27943538b67653b733882683aeae52288465160098e6fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527701+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "287d7ffa-0254-4e87-9ec2-9360f693d70e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "547ce82715ffb76d101af75bd26aa4e109e248547d348c6a5d0ec5b29da0f319",
        "deprecatedHashes": [
          "3206bc764b40c3aa458cb28b0fd07fe24a08b79ec7525bfc51b4de9a5ceb7e1d",
          "89c3270ae1c7f4a96c911e4b934c7a3537726be48fde0f67870aaee630cdaa66"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527702+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ed2f37c-cfbe-40da-9afe-77f3afef90ed",
        "line": "96",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8cc46f1422017edd36482b1658562ff44379c2e58a355cf7e7aeb46985f8ecf5",
        "deprecatedHashes": [
          "4297b796e1a34b34e9d3fc17aacd17cab78b200784ff141a63497122e503be53",
          "1cca9e4c67a2ba34789570f9a3d684a4d55a03fff9a55959c372a36347555cd5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527702+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "28311ad0-0ab7-4b55-85c7-4afcc778b869",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_81_bad.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d86022fbb7ca282053b7caeb77506334f2f4be03f20705224198e7139525912f",
        "deprecatedHashes": [
          "6888f583e3cf96e5b3b11d1bed8794c9c2d47a48475e335db559f9f18802398d",
          "2c88042ebdbd8f1ff36bb2c03326dda16eabaae6fb956b10fed726979eb46024"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527703+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ee4cdfc-42fc-45a3-9005-54d3baaff83f",
        "line": "51",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bafe7f57c8e27818956037962f854e240edc3a56d927b0ae13225873f0a1e665",
        "deprecatedHashes": [
          "bcce9a1fb2defe13d7d99f90a6c91ecf93fd386f4711a5b6caf3615e5c577440",
          "18d6d5459b9dd80cebac69fd097e1f3e5f2f0761eb5a3f84722dbd5ffc5d1303"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527704+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32bdf890-c7f0-4cc0-908a-1a62b4e0bfbb",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "43180b2429e01e1196a556e314b83dc16945a309c2ebf0bb6ec33f8554ee778c",
        "deprecatedHashes": [
          "302aa4a4f9301007b856c2e1384e07e4df75fb638fcdcf31d6190054844b3541",
          "b95bfed5c7547efd74290feb4bfb95257556abba455f7261c165bdf7bfedf5ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527704+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "11ea2d61-764f-4bea-a3ee-3141c4b4c906",
        "line": "41",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_53d.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0dbc6b41a3e765fd9b2d7565a46bb788d021262640be5801973b741a283261ff",
        "deprecatedHashes": [
          "e726859cfc6a92d578ab8b8c8fdd6f24eda8be60a8f3ef14133ebbbff2d9f489",
          "15099c4f68187ce08344e84cef7a18de3cdab091658dfbff3d81c4ec290b38d5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527705+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e819ee02-b98f-4c9b-9d4b-c5d356cbcf35",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e84c3c616f668028895f454a0bc0d47dbfd36d1b272cf6b1491a907fd8054779",
        "deprecatedHashes": [
          "f74be673d6ca36048640db4803dde96474a30d54d22d3877ec2c4c19dc3de939",
          "259c607fc971db14019358f31deb9b7a99b091d2188d3e033e15ef3f2ffa8d4a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527706+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd20e983-ec89-4324-a99a-178c92c53fb7",
        "line": "125",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_12.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2e843e8fbe970443f2b4c0cb35f64e244a86588d04b8d6ee784f8691ee57f747",
        "deprecatedHashes": [
          "6310d45edf7cc75116970f6f709a2abdf0491eb820bfabbc47fb95dff6f9727c",
          "dc20a0ed70eaab90dfac75d84259d9aae64b0281900d12cd390f46db28ced1aa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527707+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "15c48deb-1dd9-4c31-aec7-a86c0b58e5f4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5885c9f0a170dccc6c8783764ff960fe51a4ce1009b9c57e202fc4debdfc06ef",
        "deprecatedHashes": [
          "338830fd6ecff8f6c1bd1765e7caf45a68bb93474355570424448848b81bc377",
          "42267997a202bdf511e146b63d8c9b83864b5b63a4d6b1e542be36a6b7a47968"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527707+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2233b8b7-1c5d-4c96-b887-df996bdd46eb",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_10.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cd51062db11e555fcb3799565ba71ee180c27ca51bcadd9732dc53488d631966",
        "deprecatedHashes": [
          "eadf0bd3de93f269af6782ef838d6e79a5c854f149c6d45f94d7819aba08e58b",
          "beb5f3f31237d6b29a7382a8d33644c53be280d559d05c8fe5193ae18903e342"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527708+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "896a1894-0ef3-4d50-b610-98fb3bed493b",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_10.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "581fe97254b7c586350f02d0377eb644c58001f0624213dfa1fe5df2e057012e",
        "deprecatedHashes": [
          "de21c9d9f0be6473bfa85c255b93ffe857984243914e3481e123db9f63a8fec2",
          "e7c7767461f4f169b39224d3b7487657633d02f005140836acb6ed1c33ed3d48"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527709+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1b1c29c0-7d88-44a0-ae8d-2cbc0f23f32f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "33678a07908a1cc93810c4907b44563afc7b5ec6780f9231bf23847e1ad07afe",
        "deprecatedHashes": [
          "1cc8831ab5d5da7d938adb0b5c1e0239f13b57feac46c2738c2fa4bd6472dd9c",
          "c6bd3dd28b1f0236e1fafc503bb406986a601f22e76cf8463f95575eb3d98573"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52771+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bac1b6e7-e66d-4bb6-b223-ed265cb7c740",
        "line": "73",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_08.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b8a35aa86184b731b88973c097eb1510fde07caad2f25da4046dc781adfc767f",
        "deprecatedHashes": [
          "ff7befb12a3928e417a3710a94bd6b2e94de3b1bd615913503a61be3623d9090",
          "610cbe7a98d697d3cd2924257c6dfa19143c69a8aa4264c2c2b078bbb98ad50f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52771+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d22d03dc-48c1-4282-a091-b2e5381beb44",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_54e.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "13763a2633056d53c872ade26b36867a0f39b2d3c9160d28d2882c7d75d61a5f",
        "deprecatedHashes": [
          "66ecce044e080908a0e64c7b65fa51b4522776d5882ad65c10721f322a5df82a",
          "934085972dfb7d4a58de9026c09d18fab19a769a95b0482d30d851d835ec2245"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527711+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3171dfff-2446-4eca-88f0-dfa22d902349",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e795214a346fa5fc443264b7bd860694678fd7c35452a33949699dbaa802ce7e",
        "deprecatedHashes": [
          "81c694e1bf9a8581d5409e67ca6d84c42837044c423eee6e9c5d5377ee01404f",
          "3b9f6237a46ee595fd1aedcea9883415bc46948d9877fcaf95bfec95874aa4e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527712+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "69f4535b-b5c5-48f7-b58a-c2ef77f69ba2",
        "line": "113",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c745644b12134e5452a5582ca46a504df420d328e4226fb936ee09e0efaf9c36",
        "deprecatedHashes": [
          "7e1429c7690cddc2966ca4d923058f17e9cd2bba4a3e056d3c3ad09b5b31b703",
          "0ef502bbb34e173f472d27983b2f2116f5ab57d67d79eda87b821906c8474324"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527712+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dee7de31-5dd3-4b92-ac51-484bc0330c02",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a46e8f2a0f58f96d24aba9bbf8f4c932b61372b86418faced6fd30e32386a967",
        "deprecatedHashes": [
          "b6f9f88dbb95929c53bbcaa7f00829fe39ad04713d69d7ac73337e94b45eb2c4",
          "cd08c2acdf802ce357160d518d2e8760cab6a93532388bf5569fdfe063f64df9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527713+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a53dc57e-4967-4092-a61d-44af147f51b2",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_41.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "acbae34296b374400982f9e3931df3f0bfdb4e68145fefe8ee1a7b7d648b4984",
        "deprecatedHashes": [
          "1f810aeb2b5e5fd2752eca9b7f134046f96b295eb54b883a17aacc5e327301a7",
          "3bc88985cc24866ee93830700709fc785ff44952854d9484a3d45482cdd63f4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527714+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "63067ad5-5d63-47ba-be58-ba73e189f8aa",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "85e8317c558a517b32d73febc8e9e749d2ace8cd10e2d40bffc8e75cc17c6162",
        "deprecatedHashes": [
          "04ea4c0b137b9d7d85187a5ff3ce0c5394f0e1dda6477ec14020a5f804d718fd",
          "1d7d67341ec7dc46a7bf2b506fa018f9374c0313eca21e1951d19085f0b1f2d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527714+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7a2c088c-06a1-45ab-83f8-aaa590d45659",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "91fdf399229c7823795e57088de596663bc822b8f6c106e72e7c1d69ed3a6032",
        "deprecatedHashes": [
          "4b9d5ba12f222bc0fcfdbbbb60be7beea0b9b23246107ba9c9a18ae9a7a3f570",
          "5bea1b6efc6c14692bc2dd8650b0c3acb56a288c7690ef853c50f46087121491"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527715+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a3aeea12-9dbc-4cf9-8516-a9db370ef716",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_05.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "396f4cbf74f0d749dea479a96e02a06bc0f4ffbb83dc670a33eb852c0dab3292",
        "deprecatedHashes": [
          "ecfa0b3d289fd5513cd020d149a4853f7f8186d218d41285e26984e4d229c650",
          "7580834d2e80634312b1d1f5bfe2495cd7154251bf68f93418417aebb55bcf47"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527715+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f13e32e6-fcaa-4126-b988-a9657a9efd8d",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_05.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4a719c7a685799f959dad04a97df80b5379bac1d2efe34aab1b8a52b8cca5dcd",
        "deprecatedHashes": [
          "e178bc705f820cd9fdbd77b1a842c52b5cc36466b693898e10b7f849516a964a",
          "1b7987d9374d49532652ad3f66845a25edc96b5ec0dcc7008227441ccdd28012"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527716+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fba595d9-b0b9-4460-99b0-26df57675fbf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "dafdc98b4ad1aff28755a02aff66553319a141436ff2ffd942f279943aee917e",
        "deprecatedHashes": [
          "ba083ad28481f6ce93f51b5278440557145858ceae97f6726414faa3d29cae7a",
          "df5aae30191a3bb6b13359181e501cb82cefc101e3934c615969c9212d1bc878"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527717+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c9d73671-7d68-4b62-bb1e-ce43d3b7efda",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_02.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ed34670679539935df5288b9edaed2988907748bff3623c3d15332e42756ae1c",
        "deprecatedHashes": [
          "a86afa41a50c6f84939b53fa20de9e2787ae710ff7aa106a722767d67077404c",
          "2fac8fa40479d0cb5ad0b9a302678b1f78613a55e43d23f74007f62f9665972f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527718+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "288897f3-2edb-4dc3-9bec-d586cc485b89",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_02.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0515dffcdec7a1979e624c246113382ef6da9f2c0eaa906fe4213154905ad592",
        "deprecatedHashes": [
          "8432cd5705bc2058ed9cd2a51d878841c266d377338fd2f71161bdd70da97575",
          "eb1632c3ed279bc485f6791b9b9c3f68fda9fa516ef7192d685384da8b07736f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527718+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ba2fc04-d699-400e-b0ad-3b8734defe61",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_02.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "cade0b7be593fb4a4c06ddf5a1c961ff95f3f312fc325e1f8e3fe2efb9138098",
        "deprecatedHashes": [
          "b525cc8c9b6b06b14e67d91157ec0d4bd935fefeaa6e1feea6b3cec6bf206d62",
          "eeef6ab957c1f7a2d538539638591adfdd7ccbece59bd2740a73d85f417be28e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527719+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4f176193-979d-4aa9-b7e8-ae2518001750",
        "line": "46",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_68b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "be8aa88053171e47669abefad83320c8161b937c86115a7ace5d17100a02faf5",
        "deprecatedHashes": [
          "c6288bea661fc4329705a3e3537bafff6de5716e9587d43e04e7caf3bd2c9eca",
          "5f7f087c1f20db55ab6ab6ed9426e21c16608361a21b0fb0b24636318eed8d8b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52772+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc59e0da-35d0-4643-8b3c-f1dc6d74e42d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a988903649cc76a0809a7744c56eaa33195887b9b2aab3ff874e0db19b598aa4",
        "deprecatedHashes": [
          "03a32267b47f78252af1eb3dfe5c4cb3675e7a93de65c6218295e2a7c7d930da",
          "17a0fb2b177e30d2b7990c49076539e59a7d67b708df86e56fbcbad339a2420d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52772+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "313fe887-7058-4e92-b1bb-6df42aa79408",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fcf66ff4d887d5eab2b8b98d6767d60b299204ffe81a4a57fc068c9848274621",
        "deprecatedHashes": [
          "aa45d36eaf735bd84db65fa9a504128a0dfcb4f47e24c6d4df47b2c655428c38",
          "6e64c1e7ba88b345c8edb1413f7a3e1e484001207f908b6c282bd5d30be74df2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527721+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9bd42c0a-00aa-4f76-a06c-974935583149",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c7794483bff88a3c2df5e14bdd6cb9585f6b6630d1ebb092164101bb5449ada2",
        "deprecatedHashes": [
          "fafb16a117273ca37861700be0fbbf8f1f1af25063b0ffbf7468721ff1e77cb0",
          "4c8c435b97cbf20e2e0406a144ec52b45ebad29e4a3f43b3e872bbc15cf59920"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527722+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a9f16829-5a45-4ddf-a6b3-62417573a875",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "db5c8eb6b0783cad948f5ee739bd72c5f3a1110661798ff74b9fd3bb2476ad68",
        "deprecatedHashes": [
          "6a71c177a26d3453e6ea9d282bf81909c94c81970cc6fab50929df0e89d7da44",
          "0e5d8e4561646c47e9d36b1338551d63f124a77614cca675ec19f3e0be2fd403"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527723+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "06c815d8-0490-41e6-81c5-afa72e694a4a",
        "line": "123",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "914663d37ea5f1598205d69da139ebf20cffc9c97455fb13f16b544f9494b802",
        "deprecatedHashes": [
          "789a9a1e5e8452dc44d1caa9e29aa8b967acb3ceffe46dffa9b885ba1233332c",
          "184931f22c6c7efc62470b1bfd8b84950010bf085bdd04639457ec27f263ec09"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527723+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "24b8c1c7-5952-49eb-8571-3b518b3f84fc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "27c2875866dda357ab26f4207d657aac8b07c37957150281dfe06ea9f14b5dff",
        "deprecatedHashes": [
          "09b8d52e594d912e66a780bc6412c1a85dc1310bd637b4aedd7e93472bf7abb0",
          "8fba76dd55943292e4dbb1b49ad96d6ea3d0aaac35db7e50c23e99b4db8c144d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527724+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c0307220-1c47-4782-88bb-8bf68ba91d51",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_11.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5476f3f63fe3628d67ae70a6c9229165c18e433092d4d3fe6005750ac81d9fb5",
        "deprecatedHashes": [
          "fd53e14fc903b975feefcdacce7a83699fbd6059dbb77f0812d7f4818b6a5178",
          "5e014beee4018b61d00bd2ec64cb28399ce952673f1cdc27285e42962ba9f384"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527724+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c06a3ed-997c-4fe8-8edd-66f77bd6d0b4",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_11.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4933994dfadc0b0b6786756ad1ca4f0cdb92d2e652e8d2e63c82d8066b1a948b",
        "deprecatedHashes": [
          "a520412dd935deb6d602462439658c2ca0ab08e6584db618272ffabeaa18a979",
          "836e4fb602e1dc02ace1d9296709bf0d6674373a71d7d87fd6fa659c8a313f1f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527725+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a710cefd-897e-486b-a810-957c565c7222",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "eb33a4c900447a3b421caa36bd437f1f5441c348f6d475b21c4e03c5cea0e42a",
        "deprecatedHashes": [
          "e97f564a4f66ce397e2a134461c9a338dc13eeea9531ff7b839f9ed9f6d926b8",
          "20981f08eb4619de5ed3a9537115778bab42915b08ff212692543bca4b80203f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527726+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a5dd155-5921-43ff-b555-455733d527c9",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_06.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "428ab997c3f201b464b6ae83446d865158bcbd1714dfa4ca7d4e67b4717a9d90",
        "deprecatedHashes": [
          "6def7fa3348265bdabaff830259a1e974cd9a6f1b24babd05876340fda8eca0f",
          "c47742d7261260bdf8f093a164ee7c2087d5cc95879c4ae946ee4be544f46fb4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527726+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d2d4fcdd-5a26-4c87-9518-7a573cecdda6",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_06.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8f5e50b2ac02b0817a2eedc176b582651846f283af53dff4326ccf0df83ce4e6",
        "deprecatedHashes": [
          "a694cc6115faa87e84f7a6d405092b1dbb82cec3400f27c5bc608144beede359",
          "6acf58f6df4a8f6f45e76fd6055d0177e4346a6f5af6e43d40e773755e653712"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527727+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "581bb483-801d-4c34-bf0b-0f684739e0d8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2c6e64e94fb6f405e2da8228f79bc6a0441e31833686e36b92ddf80886178b9b",
        "deprecatedHashes": [
          "679356e984646efaae92e07475d6e238d13e0e3236ace33859bbd713457fad7b",
          "0a8497967bf58de4aaf6c251abade355a409144d871c10a71acb5870e2617dab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527728+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "af8189fd-3eab-4caf-a105-5daec7ae73bb",
        "line": "64",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_08.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "72e30717a2d66dbbd37386aa879ac5016002c6e7a93903a45a1fb970b602f7c0",
        "deprecatedHashes": [
          "4a3c55950b261dd2354ed9fa182632e46929544329b458794f43f09abebbc23d",
          "6c98bb6c00a5a6cbd784c64c87eb756523a6c6fce2c7cc66be0881638473bd3c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527729+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "475a1fe5-c02e-4f77-8236-89a9734ef979",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_08.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ac2d5a972997d7723560bd6c679df91bf5e1fcbe407951777d6df0904df0224d",
        "deprecatedHashes": [
          "17f58a2d3f6036905cce4644466be9319971da68ee0ce37348ac38702b331e0d",
          "376708c92c951f36da6bfc21f039f23c1158dd088fe2026371c683d029ebe350"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527729+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b1b6e4a1-64f7-4662-a02f-6de255864a87",
        "line": "65",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_08.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "836add971bb66bb283afe7aaf993c0186812dad288f50274def0383f9cd43a4b",
        "deprecatedHashes": [
          "c96575a709cc0ef35b16864fe8e0da198f5e2d917e1778fa2cb0de41c9903e1c",
          "610320ecf99609c9df7b6d5b1adf63ad398b988a2f6a9427c726fe792feeabad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52773+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "16eb6159-fd6d-4b4b-a7fd-1e2c9ea4608b",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6633c09ebaede4260cd6951b2f34bef217ce87fd5e30024052bc39b679ff0422",
        "deprecatedHashes": [
          "e09747815035e88fd5cbc11ea2122583a7a1143a9678d5325124ac7a8bda0e84",
          "8c5b958d0f3bd7933fed3923333fb540c2635c4cd521a8081730fc4f9ab0d75e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527731+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa116eb4-0d39-4c94-85f1-7bb360014cf4",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1256a0da9df3b648c25083ade5b04bb3eb78fa96a762048305e9b77c222e42f9",
        "deprecatedHashes": [
          "940441e7b6a84fbcf6829eab103d99fe756f6ea334625dae71a6acf85e2e760b",
          "2f9520034f4e72f70b2737e1cffa3c24ef7da29621a0e2d92787ffc5bc233b60"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527732+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dda703cf-1990-4c85-bbe1-25c36295ad28",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "98ef868e38be0a4d5c5e1427ecb83b1a4a9eb7f468dcb286a83989b145086f38",
        "deprecatedHashes": [
          "eaff318bff200661fd0b27994975bae7c13ec9db04653efa619ec78ecefa1112",
          "c91fc66b643c627235600939997701899a8aeacb6de8f763bae7f47ef2019c33"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527733+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5dda9f63-a3f1-4ce9-b853-8ef8d0c13a8d",
        "line": "126",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_31.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "85034264bfe55fc9495b280fca4ccebd0e5e29a6a6486e7aa4c730e9af154ffc",
        "deprecatedHashes": [
          "34b3af99eff18a576654fcb550f7f6c5e16647940a76354148eb2285646561b7",
          "0189cf015138987776c8ca10e020460dff0e4c3af00330797795dc3fd7e9775c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527733+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0711ad31-4ed2-4d73-8d8b-ed432e18edbc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cbc383aca20ed801d0b5f01f4cf35b4a2417f4c1bb1e8333b06c4ec5f5762a2b",
        "deprecatedHashes": [
          "c424724e9b3353dc41974eb08a0e38cacca8eb40b832cb6f282a92b5db455de6",
          "7697b58384a5fa151f801ce0c97c27a16367b9d04445b5792fac3328423f76d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527734+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "619b7d9c-6dbc-44f7-8a7f-21593a4a50f8",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_07.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b0372c8709c2c6153367954aeb55d2c050c0433d59d193deca7e1b5031bc471d",
        "deprecatedHashes": [
          "c3b2bb7c95b1cb34efcdea00fafcfdd2ffca2e69a5951d080ffe1e99d3b4c005",
          "95103f1fc8f4eeb0495c7f8f4c1696ba1cec45797b64c971383fe66ae994e7d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527734+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f07b2d06-949f-416a-ad40-30e2d3275732",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_07.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "2f4b6fd895798426c8eb79d35cfacaba85bfc9524dec2342545399c6b2303f52",
        "deprecatedHashes": [
          "3459ff92c5925daafd15389d940c7e74d33ff4d2c9e7e14c580436dd1e30ebfc",
          "2590a12b2583ef10e0533857cc05061ca7aa68bc9bed78d373c98a20af6a4c53"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527735+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "247269b1-2db2-4dbe-ba5a-718b8f168123",
        "line": "57",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_07.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "2d01bea15dc955e01db95e4a80f354e4d4963e0b61979494c7bf5ec61f3f5dff",
        "deprecatedHashes": [
          "db7a05b3b07650c6752f8d7ddbedde832b1f57a2d435ad7c092bd1b4d92ea0a0",
          "3c1d79426d586388e04649ad4c2e7fe56281d5e9ae87c02d20efe9fb04ac5515"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527736+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "42556483-a733-4ce5-8970-1e76a138976d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "09ca758b1b240eb97860b9301dfb2a4b912a6a488fe498830884c3833480bd93",
        "deprecatedHashes": [
          "de1c3cb0f665f49c19e5a064c3ead2d9b4ac528b5dbf1646e1816f684c0c2b1b",
          "b217a132bd4a89fca8a91b29e7fbf672f38417a9f128fa31a58182c7e9bda8a5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527736+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88a2bce7-cb91-41fc-a8fb-2e4bcf9edaed",
        "line": "96",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_16.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "26359348456ba04ae18d9ce7749f1b8b395a3cc6b7d1990d3f80e4377ae4ece0",
        "deprecatedHashes": [
          "17b55ee5457afd3a8db36fa15eef58ed55fcc3a2e357d73abb33390237adce48",
          "a01bbaa409a2746ac04fc6902fd53ea20b2855fb57d07bb7c8ad7185df2b8183"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527737+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "af8b750f-fa91-4c3c-9399-efabca6e4bb0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "00c151042b2a09f8c1ac5b7bf921707fd757103d4d0b285ddd89093b2df9dae1",
        "deprecatedHashes": [
          "b00ae466d22c5e18fc7fafe64a88ab87fdaddc7b9d3d179762c4f2ab05275fab",
          "38c89931d736fafededbdb0158ef8aab5e0f60a6c6d9092f50016d24629a3096"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527738+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "879dba6c-71ed-416b-8992-e6489c3a800f",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_11.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cc7f1ba27067fcbc5dc962202d35beb3e87af61f2393e763e8502f7d918955b1",
        "deprecatedHashes": [
          "9ee52a3e6b59ec4d68c5f37e3e6df84ae50cd01a5da1d4bcbd14bfa8319d8d5a",
          "1af82b86fa75005778c5d13dd583b6990b186506436430cacf0f2d96a180b697"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527738+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "04eba39e-cdb7-41d9-a31d-2d79d4948c7a",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_11.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "edf49d2040a6f7049c6d2b1dd63e65b5a82b89b4c7ed948996710d06dd6eaa5a",
        "deprecatedHashes": [
          "1aec52e0201572799f8f4d5535af3e02cd068c4560d93b3483dc1a0d16293be4",
          "e848c86a8dd1395dd653d53482290721d627be10209e70456b2d716a4e903bf1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527739+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "19bebdc6-86ef-4962-9496-945d737c4953",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e9c3863e701f9f7b49211c0b0dcbf8d86b35740b0be39d97e08748e7c671338d",
        "deprecatedHashes": [
          "de0f0b1b79b39c1956a3d14406d6cd56c54424994f995a5c7517693b83b9d96b",
          "b5d888de80cd7e8ceed43ef15c84ee1b45f5e7aa56c05d2ad5fd4ac7f4b64d87"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52774+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b29ba858-4dae-41bd-9cbc-246eea2f8e63",
        "line": "53",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "66f135fab38a9e65c7cd07ee1b7e2736fff54f94dd19bcefcb1e3f10019922fc",
        "deprecatedHashes": [
          "7db34aa767cd3f21288e7406c7005dd38b775c5c61a6d05d420e057926a749f5",
          "583c64521058f80295268a6a487f36f2b13d83a5fcf37b64f86d9d16f194f7c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527741+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "54702079-78e6-4a2f-8051-fc0b5ebc3539",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "560b6eb63ab5cd966fff64adedae2a2e50a8e8f363e36730911b872133ce6140",
        "deprecatedHashes": [
          "ac17518c935a5101bbd3094e1154a90015d3cdcbd6a7c6c3526a08270a866050",
          "b568876ca956d2c217a44efded59610565ce74c467215b04616cc43f2fb186c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527741+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "352d74dd-c101-411e-9e0e-8e2d4009e0b3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5cf93462d406d59f2eefdb0140ef70a6c51dd9e070ffe69af38e8a0776e1dcfd",
        "deprecatedHashes": [
          "7fc1403988ffe9ca359eda3e644cf17422882aaa12f9f397614cf44136027329",
          "8fc41b13519e7c67269c49007524993a1454c1984f21a1c1db7fa6b813a96733"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527742+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e957bda2-57da-4ca0-bfc0-e0f2474735cb",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_17.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a7709b2ec2b87bf933f346034284b28e2b4f05a31fa6baffc0ce529c6a03dba5",
        "deprecatedHashes": [
          "fdea19972982a42cd47e958f44f45fddac052591b4119e4c7bd3bc2f23fe44bd",
          "ef528610bfe3d3e98d5b9f801b35c8002998188d63e7108b55b70772e49d82d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527742+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53a54022-97c7-468c-9fac-670eb1c02c2b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ccb210f4b9a53d007771352984320c030cecc834ab09311e485db8b46afbdd9d",
        "deprecatedHashes": [
          "4e780c888221a5b58102b5618271adf1afef0a13e8c82ad5ccdde5a5385681a2",
          "27d2d6419d85eccb8bf9b7015a77187a894da868b867655031d36b3e9a1d95e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527743+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c2dc8996-f4bc-4bf8-b474-1b1ab0980637",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_31.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3c7b1c9bfe9d6aea5e0ed5fe8e1fe40f1f56b82de32ac8dc2316fd9498763093",
        "deprecatedHashes": [
          "dc2bf2a896bf966f37c1cc17eb5501ac3079aeb8a32d8e765b90d689f2eb94b0",
          "b5e8ca1e130a2a3853d406877212e9511bc81ceeab7716f25b621535e7c14e5b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527743+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3f0d7cf-6c8f-497a-8464-a28e28dbfaf3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "445d7c8bb6ea47b884b58784169f03f11394813856a65649ba10234481982d72",
        "deprecatedHashes": [
          "2136766af8d9e3fc4b221ffdf6542bdefe8fd99ea1ad3818dfd3020cb23fa4b2",
          "22743fd78a230ba35461c9faaa5dd73cf6cc3f2fd316549b640a8feddec3ff74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527744+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "55941a30-13dc-4dce-a0c7-63f19f960521",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_17.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2cb806abc3d54c63c613791a1c70013cc3c4a3b4382d5a933b01399b25983b7c",
        "deprecatedHashes": [
          "fd07278b071ea73c3d0372eff4e4108a10a94b692f47d0fc4d70ebc89cf6222e",
          "343a2057135837a8ecfe48d3744ea3f9c818886c8baa0d09895709ad169cc87b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527745+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e21359de-c99a-4fc3-a56c-dd178f0f3a89",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "426420f31bbc8d75e897c1a03c9f973f9e0a055fc0bfcb685b376246e1001374",
        "deprecatedHashes": [
          "1e758b3a437117ac82839de5a4ee27bfcff384abd4f2c9b3215511d0b2975159",
          "c5c28768c6a332085684a12617160d0a7685bf6a32b08e2dfe9505c24d5f29f1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527745+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b94ebfd-ea2e-4082-b76a-8869976193e3",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_05.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c2e4a35c289c0a5ebe39f7d42fadd37c8d8160d9d2fab558266344b828cb5ead",
        "deprecatedHashes": [
          "b4672ce389f2ddabc9d5e2c71b18a359b7456534c7a9ab78690477874f680767",
          "871b2032e21e033668ef558103b699b7b2b81eb42b12ac465ccb5b8830a2095c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527746+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e118ac17-e3ab-4af7-866b-54b4b73a9740",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_05.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8ba27dc05ecddfcd5a5951a2b63b5a013cdc6641ba728378a452faa58d015243",
        "deprecatedHashes": [
          "e06cbb67ed95f6ab9a34cb8354d28a589e9129b765465e5ee78b9028091f2f60",
          "75e00bcecc2fdb7dd6c144d9b9bc49a80a335395a8f4684503519b26302098ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527747+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd4d0f5e-eb1c-45fa-948c-3ff9fc0eb763",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fe31cc89574164447a0d1d6b972a91d2c0a35b597fb367183a03490ae4057721",
        "deprecatedHashes": [
          "a07b86e0bdce70c868e50f5559d1ff4fa72c096ec9f444e4d8c121045bdb0165",
          "4fa1f8e33be62378a41bd622b03d9f1ad3fdc2517b5a464329cba48ec2098b80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527748+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cb93a8c9-6bf0-4519-b102-3ca47265f0a5",
        "line": "105",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "40416d381d7f0f396dcf09db470d44abdbb47b01db1989b946f46bee4e100747",
        "deprecatedHashes": [
          "ffd94137193a45451dcacd49ba9e8c20fb8f08a004cba39419d7ba385a3294be",
          "dbd48c97bdb147f88771664f4667784867a897914c553be88fa661c05efa1613"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527748+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed227529-7b1a-4f26-805f-ec312c220eca",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "66ba6e4b37e5db4d673cd03b35a74d4a451aabc7667e8dff414d7fe62429bc45",
        "deprecatedHashes": [
          "e1febeece1ce756c7f77ce262d4fb207a9fb153a987b07963e481c2755444264",
          "17e0c09506a58c588169d67c109a265c918064fb24ebf7fc469aa5d9cbecb90b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527749+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f136d33f-55c7-4838-9208-65d66c50a526",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_17.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "16d75f408062ffb909a106d76e8fd63fdafa347917b01b3588358d130f94f666",
        "deprecatedHashes": [
          "a9a0ce39bea548ec2319d9fd922b046808fedc05cff3f070db88df6573e176b2",
          "3075b0bc08d2f6c032a9f162a7db9947c67ba9685626f21127dd03b92b8c9d6b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52775+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "41d86bfd-f429-470b-a80c-a97babfccea5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3c1c4c362a6870cdeb63717344e18cd9d13e9faf2719aca34610e82df75d3d57",
        "deprecatedHashes": [
          "663ceb239aa658f385aa5a6c8b445678da7ade8ee679e26d2289ca63a91f38af",
          "b85cca3bae5c0814249162d6848045e1ec748d7fa9735a95ce2c4def88abce13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527751+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed383014-89a9-43b1-992b-422093f907f8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7407a3f7b97e2a45eb571ecba4bba801e4d405ab97d0e45e40989f9da64018c3",
        "deprecatedHashes": [
          "097e2b6c29f4b0adc4b0b6218a6bf16a73cff728646abeeefd2ccc2a65a1d0d2",
          "aeb19809dfd89dda2ad607043d1e69b70bc97801ecba02c64ece5e748cd1e3c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527751+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7fdbe5aa-2880-412d-b6a9-70f812f79f93",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "588835a18c4a1b450a7231e2765523ddfbc2383735e36e398cc9dc9e78f5c3df",
        "deprecatedHashes": [
          "da7c90fc7f5fba7dd5511f18b1b17bbcb540ac354744fe1d7f2c6dd3462bb55a",
          "1b2208387d4601fa279def660721ed75b3632c7a95927af27ab20c048c1d51cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527752+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "809c5aaa-f1e4-42f2-aa44-b01350166d2a",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_53d.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "25750228c2ff62cc8f179062623be3770e241bd5c7b7bbf8150872bd63a0b2ef",
        "deprecatedHashes": [
          "808302775c8577e61f495472f82a82884bc38e76dc6156a7f89cf3e5a1a0ad0e",
          "4023c0e2169ea25c77bc9a27b5284531fb5979563e97a22f12b8aada78c8f2df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527752+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ec3477e-7bc9-4346-9891-5896342ddef5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "91f709b5cdf3ba85a5483e4f43fe6e5e008080b5ff101c6f842d03880a5d3485",
        "deprecatedHashes": [
          "fd83d227872fa5f972eba4c606c74eff5594301cff23edc1b383961284522c3f",
          "2ca258ad4bdbbb570ce7f7ae13fb7515f543774610f9f4628f787122bbfad784"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527753+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b4d569c1-5d55-4772-8f52-3409bb48c1dc",
        "line": "64",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_08.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d94ba0523e76eed6a4109bbc83c5fd10cedd4ff907e8528699f7199b86881b25",
        "deprecatedHashes": [
          "f735bd671386e50843f09edba728765915dd48dcd2b26ea8cb978f9618d50e43",
          "e152d3455fc695048ff44cf2bb96ac43299cc9d1bca9c60a09d29c27ae4357ed"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527754+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dfd17ce9-d1db-4a38-89c4-04d5813d4e07",
        "line": "65",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_08.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "ae2eb4018e4bf1a72ab0ec7c8f7ea5026c59adfa97060b275c9b9a40ee5ff352",
        "deprecatedHashes": [
          "f492262de33fb95b1fb158d2f13fbab35a9c7fc3861335f13d467f06b44a921a",
          "e98d201fe5301170f10ab896ff9954ebbf7a5b33a28413f3ce53e9b716aec223"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527755+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ca5b5e62-381b-4c2f-94b1-80e7850d7118",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6fb11dcb852f76b661b944a59e501da487194b61249dd56897bdda2d1aab8e65",
        "deprecatedHashes": [
          "5c8737d33d1f8f03027dee4023475b0d7d852306ca16830134afa9597b7ea730",
          "9272cf7c1515a2c49486f615dcc6aab188a34b421937451d27d68629f0438621"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527755+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "136a8a67-b020-4ff9-8196-22ac785dbeac",
        "line": "105",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b4cf16141aeeb9d6027671c200df14d2b94934cbe2593e97d5bb6341d642e3d1",
        "deprecatedHashes": [
          "86f964bf60a0dec989028410d2963699f0792a42aaee50a5548e5ba97f632ad0",
          "e6816a862575bf8ac2d4ec35d60f0acc8aa678881329be02c3dcd72fd0162f5d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527756+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dc4e06d0-a8bb-490e-83b1-2a6426e8d600",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d02a8b551b1ddbbdecb134a0ff53e6454c99608375d36df2f2383e90d88e35c7",
        "deprecatedHashes": [
          "b662986d78e93217f16a9bddac1608db0943500ecf7f095962e1a125cc74f99b",
          "2febbf482fe5ac811e0bbc894557b6c389b8fde6ab12edbbcea66f7d3aafeb30"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527756+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7d16e65-7e4d-4889-8692-6648f938efff",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_03.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b8f7f45117cef3ad3a173331e73b4395976b8c417385d7ef91a7e78b13847212",
        "deprecatedHashes": [
          "a880206df0a69f7f0fc8eacf00cc3a47985ee2daf0fae209d68cdb522c2ee629",
          "36ea71f66036bb339400e36a3bf9b6caa161aa825742d0d1c0492fc8e6819965"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527757+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dad07d6e-706c-481e-938b-215a08580cbe",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_03.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "531fa0ece5f2ac75bf21a4434e1168d060fd08d047295643671d1b5e1a1f277c",
        "deprecatedHashes": [
          "2d070768380627fbd6ff54ec1335ae114889ac4d55099e05f5da60e87144b572",
          "2ca47fbd0ace5bf97a4786038c20d4b09745995111f7904631b9830c05fb1ad2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527758+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a85c006-6a4e-41e1-b0db-62bd512dd7c6",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_73b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e13abb206dced449b757eac189140d2bce8de59144822427c071e24e04adb903",
        "deprecatedHashes": [
          "f717757e085521a124531758c9fd58b7f15c5caeb41625ca817c2a4ac351f35f",
          "ce8514b677a2ac32db0f365f61f423294bf75fa281b32382ff7284a3c3ac4a19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527758+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d3f052fd-a8ec-41e3-bdd3-1497afef31d9",
        "line": "44",
        "column": "6",
        "confidence": "LOW",
        "file": "Main.java",
        "code": "} catch (Exception ex) {",
        "details": "(1/1) * Possible vulnerability detected: Information Exposure Through An Error Message\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. For more information checkout the CWE-209 (https://cwe.mitre.org/data/definitions/209.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-63",
        "vulnHash": "85e8d730df942248a6f67db622718f76538d32362a28af4f5ac078f39b2841d7",
        "deprecatedHashes": [
          "ef74e95b9703764ca5d284b27d3d16678446268be6d7134d9ffcc406e9bd259f",
          "60a1d4fa8d01cec347e20c9ca45379222b39d28e743ad039aa2fc5b5656f8c7c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527761+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8eb0dfbf-d292-411c-a96d-1af20a50e003",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5e0fe5740799ab801d02192132773d972022abd41e4bcd8a6d980555b09097b7",
        "deprecatedHashes": [
          "97b77a1ec1ac443bd2177004523c19c83325e1e5fdf81517e8e7e6c078085167",
          "b4cd1a846f0988395ee47d846c63f4e20230684fa96ca30aea55e49a50c5bf13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527762+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "085a9774-6529-4281-be5e-dd5a48e07869",
        "line": "103",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_31.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ef643b764c33bd703d374b72b0f7e23ee34267986f06bd51b5c518037554fd4f",
        "deprecatedHashes": [
          "8a623b6e2a8e56ff9260f7344cc98eb732d09d340f85a2d4dbc31cd967ce9375",
          "0cbb9961a5ea6fbcc93c400208aef3520103214bef2f8fc6441ae8facc3d1750"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527762+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ef2f8e5-1f18-4984-9782-a7188b11904c",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_31.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "26266bca583d801e7b91aa56d3aa5ba06cf219f702c8b506a80104332f8c3125",
        "deprecatedHashes": [
          "ca611c0df3c609b98628fbca016e9d3717f69fd3145bd93ba012a65ef5ff1c39",
          "e37a822c21c1ccec3b4266493069a5f9438a905661c5cc31a85fe9a80ad2421c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527763+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "095bbb57-04bc-40f3-bd3c-9b475aac27bd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ade7ebd371323d6cfcedcb16d674679a9b6a237be33b52a058eb34346a95aa02",
        "deprecatedHashes": [
          "4609d3638227030f14dfcbff4a33077864f5d9d585c66e17ecb6f4b25c72208e",
          "a2ea5f65ca81a1a2cb85f8f9bc73ee4ad9a980853b4d5f44d9aed1b489b781d3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527764+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "877dfc70-732b-4760-88d1-d65b295406c5",
        "line": "64",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_08.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7fd7a98368f229a9526a3dfc04d5e9991ae20896ada627ccd2c1bc37ce7270d5",
        "deprecatedHashes": [
          "0c9766721773f7c066ed332ecf95e63ea95ff63128a3e5fb48cf5a2d38397500",
          "b845e1c0ef10bbe8d568057b7995d73e6c9ed7b0e9fd60031dc5b32024aed504"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527765+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "378ab3d9-35f4-49ec-a131-37ecec34727a",
        "line": "65",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_08.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "19c48d750b1a42f11cc8e024243f9359776d5b277fc9699b30074e4e684893f1",
        "deprecatedHashes": [
          "8731578e3eaa1a68cd9bc9749bf8f60377661d25b458c9002187f2af906885ec",
          "525441db535cb0b17b1c079512442e39d0624c507de8320ab78772cf995bba40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527766+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2ef1e4c-cdbc-4050-a192-a595846a41b3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "aba240d4bdf35059003ace6b3713d34a415b2205c9a4cffa4ff57c0772951b85",
        "deprecatedHashes": [
          "e39b750d734a7aa407f344d4fa24a266759bf5881e40be4bbabc34d6bc86cdcf",
          "3ec1004fe96dc61ab4a147af359d80ce42e4d43ae90b80d7c4586a7a562774df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527767+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "50c6cb6e-23bc-4a72-acec-85fb2807e7c4",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_04.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2057d1bb9d2eaa2cdf351f4c277e2b0f9455494854dc611b128a911fd140a479",
        "deprecatedHashes": [
          "82ff2da263691686a9029464598fc355835acf0b42cbedffbf2e59eaedafc8b7",
          "32a946843976755166bb24365e05d7f13e1bbbc2850267676889e657546061b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527767+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b37ff2ca-e3c0-4235-97db-42060117487b",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_04.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c2c4f39d60749cfb737c4be1ab969d1969062f0e787c0fbcec5542343c4a31a5",
        "deprecatedHashes": [
          "607c8e41c76ab415f9562693b7ef8921b44bdef2a822e8a557a2a707f2d9de32",
          "4b9fd9535987feb144e92cc1131c477000c47706dc6fbd0c8c7b650c7a3c883c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527769+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8a9f243b-c7a3-4748-8da7-8eb0470c34fc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "bbc851e7ce0b95efcfe607eb05e734c2485b14430e389da95012aae122fb2e92",
        "deprecatedHashes": [
          "3f54d150a69ea40370c2cfe83e7916852ef89242bda2a2c9e4f3f0a3bbc1b399",
          "7ec64d4eb141f330e8ac9c66da82a17865f4b8229e249c392c54b06c3da6f769"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52777+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a6123bf-93aa-4828-ab9f-c3778b6afe50",
        "line": "132",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_08.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d38e6118e1afb91ca53f2346bceb22a5dccb9d0d8b63f39c0f266b2b2843af25",
        "deprecatedHashes": [
          "0c8ed44429de5404b44e3c54cde9b6dcac20168c8d9fa44042770b70bc952021",
          "36831c3c4088c9c1ec9dedf2b7441cac531f18e98df1f9c63609ec9bbdd83ce9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52777+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5120c806-eb8b-420b-b958-b099f1ae1462",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_08.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a6d8c60f52a3707f8faea569d17fbaeabe4fda16dd0be0e9dfebd885a4878e47",
        "deprecatedHashes": [
          "253083ba9dd2a2334f12c3da3de56a28e394019bf8e06ae0f8909a0b04567383",
          "b0522b154088fe5c80af020bfd3a7fc5e84d939e9b1299d98adaf9665ddf3750"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527771+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9319bbdf-3ca9-488b-a784-48aea2513575",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "62391330323088c4506c3ea74835dd0bb32cc8dd504036ca3d18ac7cc4594892",
        "deprecatedHashes": [
          "7df9e5d2114d95083fa29d52741937df783902cb3beeea9939be176b66a8ef95",
          "923b89a7166dbd020bab5f9cda142d2caaed710ab0d28815335cec7f41c55a6e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527772+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "90c0a868-cf8d-48ed-bc53-d69182d4e653",
        "line": "100",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e1223a2d80cc63b3f7055154285d5b1f1bb05ea20cbe8ff49aa2f043343a7615",
        "deprecatedHashes": [
          "72c3de73918ee29f1b8a32f98e0ea3680d60bb920e764029326e9330e91ed92f",
          "795f3c236d063cc0b8c12eb23e7af9614c99fb05dfc9981fb6133c16a4262c16"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527773+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f0268055-2f37-4678-b5e2-31308bac3a6a",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_67b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7a3016b8870051e10da18429e6e77021712e9afeebb79c05722dec3963c55dc5",
        "deprecatedHashes": [
          "aac5d10712c1fe35fbc6364dd8e85be671252d5196e7b552c9e888859141ed7d",
          "f72ecff7e2ae5e1c003cde292d924955001e6212a530e404e9d726b73e4f2f50"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527773+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "19d83a27-f6cb-4d40-9275-6b4529d2c92e",
        "line": "47",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_74b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d4a55987dcca5fdcec07b5251ebc7a62f20ed41fe9737523554ba502958cf573",
        "deprecatedHashes": [
          "b3d9e669205a4fd3643fecf51f5484929a676149778391e083b5cb44305373c1",
          "dad9ec5619d28aed6c0121882a1079cbd60243d183a54c18a53c4f28015765b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527775+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "addcf727-ac53-44cd-b87b-92dc23c36959",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ca3b6a429a5c67c6ca6e001b3e6fc4319efb56cb6147969b90a164402066840d",
        "deprecatedHashes": [
          "d10114e8a6e65f079de3423ebefcbbf6fc92c79a8cb558db1a97789992bb8b81",
          "8e9b64d101a887ceada0f90623e9289a896604e355bd644449ada6ed5e7e7b14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527775+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "caae5f51-b4f7-4a66-bec6-0f803962e87c",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "254534e69c4f4fb263ae091564937d568a52ad3c171fcc295e167f9dd4b8cc66",
        "deprecatedHashes": [
          "1ac36215efaff790de86fcc5597a48dddf51e0c2aa6a2c62e987642710269d9f",
          "68e7a81c2611827b803cdacbb617bab77be2c9825ea3a149c41d826ae9afdba0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527776+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17f0c6a1-12a3-4ced-a6e9-d845681d6224",
        "line": "41",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b32ee1a4733d927486e9f1e7e6463c26e8a39652cdd916f4d4c33457b524badd",
        "deprecatedHashes": [
          "2b657b20fb6a2b8fdcd584c0d00516a0dde04864ae95f7f833d34b589464cec8",
          "3aff1a584f065dc21a2c5d3553e22405c5c6d87939b1060146bc5f11763a7946"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527777+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a3c00b66-fba9-40a1-9544-f3fc32a5c670",
        "line": "26",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6b945c57800c5618afd202eb12c5e1ebc5477165cdec78293df3990cd5868255",
        "deprecatedHashes": [
          "54c52d499a01bb5534f423b344871c8f8783196f2b1120247becd3879dc6b207",
          "6680bbf84c5cd090413ac07e7aadd6bd52e6afc082e1206e72448d82f6f600d3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527778+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a8b05d03-f82b-4189-94ad-e8d2f6ced68e",
        "line": "39",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_52c.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ac243e36db471de9a89c1456ed52cc07a9a19bbe21bbed134e54f0f6a9a51077",
        "deprecatedHashes": [
          "41eb0927f2a2c011234f8ca9ef91a3a2f7887769326c88fd7e0c9607a66fa1ed",
          "4537c4c064094bef9bc63d391dd1b284914973f5e3a22ad69a2237ab5faeab26"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527778+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "86ad68ba-2ee2-4c5d-936e-fe229950f048",
        "line": "40",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_22b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e8e9c5b511cb7ca76e9db060ffaf5ae0d3da760455b11e42a11d80b24b1a87dd",
        "deprecatedHashes": [
          "0b3ba47c12031ece0bfdaf629ee36eb88b70bf30c669dc53082eab26a64b0432",
          "e052e75360c8ffd90c8c28231b367369d45869f24034b0245e49428095383f0f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527779+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b4cb35e9-3ecf-4c37-81ce-ad7170031728",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "65e85d627effb928a921388894620f8a0dfee582167c97598160d0a4d2a30ccc",
        "deprecatedHashes": [
          "94528198c1b27acb5d1130374164ef325eaaaf0b8422189379da842fb595a267",
          "b590b2d4ef13bbb5eb093d93647b64c6c6f9afb8a44886fa19a68c99b0479e28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527779+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ea6bb91-3b6a-4886-a8a4-5e02677b93f8",
        "line": "100",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "95f01c1d674dca7e006ced870ecfdfde0f93521812a5f1f788d3ef68a7deb04a",
        "deprecatedHashes": [
          "351cd9c0e163be3f953434a6d37c4e4b70a2e435504843eb2f0813d1822573cf",
          "673efa92718bd2fba8e1faded0135fdd809f66157ad5672effe6da39091dbc94"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52778+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "075d7411-a4bc-478f-94bd-17f1bf9e4ba4",
        "line": "46",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_22b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3b5d92971afad171b9ebafdafdf134245ed8b44e7683fa58834d8fe0d9228c83",
        "deprecatedHashes": [
          "d5fc11d0eee27b1f76edadfe8eefc6b5aaec147cf4732b59046d09797e0bcd9b",
          "f1338816999db3969b0c6415bdc46960008a4505f84d1bf4367fbadcd9596e24"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527781+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "59deb929-a0ef-460d-9326-35f4aa78635b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "23da3ad0855f5efe597bc0c2c9210dde8f50ed3c6131e1373a362b85334119f6",
        "deprecatedHashes": [
          "538045cb3270ce76db89f592862431a331a874e7eff2649fd97c36b44121eb48",
          "be8c366119d5f4082138b91c83115783c4f6031874965ef83f7db338535f8f4f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527781+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef145512-af12-41dc-a8b0-223855740ec7",
        "line": "58",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_17.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ee7f6a3126009b3b71019e62d99c9a3d6cc33ce4e490dd0f8d06e55e40ef50da",
        "deprecatedHashes": [
          "310674df89b47bf6ad1fb9249f16e8c3d2660e7f95384be7f1b3f6c1b57f3d16",
          "72687a1f8362b314892e01c713a9a4900b67a3cb32009af8bcaf41f45305c0de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527782+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25eace4a-f17e-4d88-a039-eb83678e4209",
        "line": "59",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_17.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3be522e3786f0ed8b1d92fdc34ee0213742a100a679386e71691c0974f545a2e",
        "deprecatedHashes": [
          "e8110e94a3ac494c8beb526f5479a216caca66894167656df8d9e6689dafe497",
          "864b8e68c093d77c2a6e89ed5ed1d85bb6b2987680d18c3b7d0a356d9f4b828d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527783+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "697e6091-97f1-4538-abd2-15a13c8a9ddf",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_73b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3b3e89c4dbce0de0fe0bd08c78471f5590dded36c61176ce9570e51de93d7880",
        "deprecatedHashes": [
          "e96fcdbe9729e9816b1ee61fcdad1d0932ce40abfb26e3008aa4ac4420fbb5a4",
          "44a2ae1cd880cfdabee7fab803bdf74fd4de3b72a8fae8e98c293eb2a9f48ad3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527783+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ccbfebe-fe49-441f-880d-ef165c215d64",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_73b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "62a52c9134989d0359b112b6fffd055e439c70a6319288f1d4f46d441b25494a",
        "deprecatedHashes": [
          "ca192bc036477cb983a4b288a4fe3fa1eeeac21a03895cf3a9fffcc8ad04f8e9",
          "b58367cfc43e78ee5eb5f4b49064c5330d49a6886aedbd741802f1945b6c4e85"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527785+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1749af80-d367-4090-8105-80d06d967696",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "77064926b8933a7782c09bd495bc9c4078abefd14855129faf519ad6d6937a34",
        "deprecatedHashes": [
          "e2fcc659c478ad9012869ea689404c9d57a09ee2b7bfce3e962d4475071068bf",
          "575e74feb6e819f94c8bf6fc9de89dbdd6f4a8afa1371f21509cccd7f5ad69b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527785+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6d2adc5b-bcef-4b7f-8ee7-9f7e18777bd0",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_04.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e5198f10d24849d2a5ca03372975d739484bbefdfb62571235eacd53930d709e",
        "deprecatedHashes": [
          "11a4ce07213c8aaca7e7ed8ead0d913ccb560489991d0ae5262052c4722323cc",
          "d1dcd4253b1379015ca9c598ef47dd1d5d5a33d904015f800a1c5b6b850a5363"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527786+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "71489502-ebd8-4053-a6c3-1beb4c7d7407",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_04.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "478f783d4fe1a5a4c86dbb03f748d8a055c44491fd350a36f7749569d882a1e5",
        "deprecatedHashes": [
          "77a9c8e9539e02e69623a3c7aa0763a82922b4063abfa7a5874c35a7ee959f22",
          "0a075acc0dfc1e13c3379ab7bd26ec9a13337e4a657b2c084f66f2964a5f1f82"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527787+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5272db48-50ee-4b30-826f-54f23fd82730",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_03.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "96457ca3471aeac2a9fb0c0534b32e06985a487799466a7b1760263edf4a2fd2",
        "deprecatedHashes": [
          "d3f9a8bf7061eb7da7f6f874a1f04bf967268337d88dd681202490bb9985431f",
          "45b122172133d242fbaf28b48b681451a90aef3bb9a440b1d4dd745d86b68788"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527788+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3ed65992-7de0-4c46-b2bb-ba1b32225454",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_03.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "16440fa4fe9d64b9c3f9dfcecad363517f0ddacc9638c79a1a05190a338b30b7",
        "deprecatedHashes": [
          "98623048f1bb54c6225a2727352ca48b1bd1b87c6ec0cc4983fdcbda1c3d60f1",
          "c9203cdb4a5436c1bfc2416e6be7e2dfe3369c53886f0ff2f92739bc7a4ff739"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527788+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53eea990-e872-404f-ad92-0a8755b10744",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_03.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "fef2c37e5940f18cbc479b7e4e943c75f36c1f9fb3bad00e78bc929524995206",
        "deprecatedHashes": [
          "63e9f1ba7ce01d38dbbe3015a2669c5ed6712436f103f7deb10087e185f4f6e8",
          "6c424b5959911dc5ca306549186803e1bdf97b03b06b8a0fba08bde8d1c9d84d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527789+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bfc6181f-b24d-4755-a79f-638430e44538",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cd9b21dc99850aa4466cfb5758e1f2b44d94d700fc88f19011b0af49f8dd6847",
        "deprecatedHashes": [
          "711c6c074b9687adb4c0642ec9afb247dfe0cf09f618612609262e22740c1d49",
          "b4fdc10a15f5a394a7f65c4bf991f3225449b711d5e69636cbd6d5056fb85110"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52779+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c29bfa0-22dc-4c80-bc4f-3372df9e63cd",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_09.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "550b84a09e038b717cf7ab6c261980bcedfa1b89886e68c9d35a1266cb64ec25",
        "deprecatedHashes": [
          "ed3e3916c9be7d9fbb7d5a1123e623ef81857b63fd18933793bc6e2dee57d902",
          "da771334e2cf62eebab4981322dce061b0f8880604565d80d13e00d680e612e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52779+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7266084-eb3a-4cee-baa9-804537c7057a",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_09.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "6ea2068389afb2affc87482fff021eb451d99efdb6be692f3365ea2ef788e079",
        "deprecatedHashes": [
          "6069a02cfa176b86af54ccbdfe9333699371013d8cffead20b30e33c4fe6a299",
          "2d6fa5162a01a4e4d4f0ffc0956370c59e036e35a2a16b82dbde4290d63a9ab9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527792+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d015e17d-c6de-4475-9035-8679ee04e2b0",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "01c43150b8eb9b81abd1bf60e4625fd810221026f8ecfa19bf6e6fa00ea60644",
        "deprecatedHashes": [
          "30e55bcd4fb59f9bf6abf5a5c3167071d598644de49960e30d16e3e02da5bf78",
          "940809a8f5304ecf8b7b4747037ff8ab2a8be9df2695691e011e66ac5867d4b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527793+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "11a4340d-b5c9-4706-b2a8-ac62421b90b1",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "47a5c535dcd169a5e227f383eb5ffe4403be10d97dedaed404a23077ac571232",
        "deprecatedHashes": [
          "1c731ea2e18d1a5a7d007cafb27eabb5502e59a3bfdc3d8df0ce1d836feceb3a",
          "e87840ac3268c086c62eaaf90d6638cf76e8214f83451d89fa42f705cc937d42"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527794+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d234a6a7-c3ad-48e1-b60e-a27cc52838e2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ac4bc3a0231f66ae2071dd92d0af7f0e07b09cf43f3e13fe56c03414b23df5f0",
        "deprecatedHashes": [
          "a976ce2358810cba8cde0d4377171c02e96a545ce4f04634d1ac026093f94be9",
          "8872f797ac1ce4572aebe82ddac6f66747811eae9178d26aee4cb099cc7f46a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527794+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "070195ac-4f83-4958-ac48-9616e9a2f824",
        "line": "123",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_06.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8e6889c48448ccf1241f9cd244375ee07e5ee2de42ca140f07e5d6d2950dce6c",
        "deprecatedHashes": [
          "b8a765457817583d26ab068611e6867e0356485fb5079d501a660b7465c7047a",
          "34f6ad499ef67bd206114d2272763bea37013640749ca042d3819c48494d1aad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527795+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "831d84e3-abe7-4d68-bf5e-9f1d6389f432",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "f6e67178cf11fc2613c3250695941eeff5e6a474f99fce5ca0bfb9173d7dffb8",
        "deprecatedHashes": [
          "4c8a74cae0e221e0712e95d25a4df95f1224d01283d3076f8cb6d36b1a2883ad",
          "1b533698b8943476adc3e95dd334592926ba41e650c0bd5f8af0cef4cafd1c29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527795+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a0602376-b014-42ca-b420-7c201abfdc32",
        "line": "101",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6f2392d668129b66115b3beb4a7fe44dfcd9b36422537a0e81b69516de3e0679",
        "deprecatedHashes": [
          "59c2536f94cec1c2f0b1b514fe9b477fbade8316b70e45a600cfb8cb39023498",
          "3a01b42364727c7efa4887ec8703fed46be29daf1072558767c614a31f3273f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527796+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d16c907f-925d-4627-b812-58dbf3d1679b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "714bb8142f797f70897218a33c214635038c838169598083be14bd5bf0211e82",
        "deprecatedHashes": [
          "934e79d272de39dad0537c3eeca70a2040fef2614400eecb5fad5e5e4bd7a1aa",
          "032d51bdad90ea2bdfc463f120584a290ecd442e39c649432893bc9dd967aaf6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527796+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "73c41a01-4ca1-474a-9333-324e0317df63",
        "line": "47",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f2e060f2989afd14fdfe23396bc98d72396d62e4c6a377908daef2164a951289",
        "deprecatedHashes": [
          "eb49d80f511e5fb4092d1860ec6fc33cc30c74a757623436798ff232867bb471",
          "b2ff575e821220729b3c9ffe26d0938819c37f931487ff31a3a486b6088ffbd0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527797+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "768d26d5-eb33-4165-bdf1-e6097c9a6d56",
        "line": "110",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_41.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "97c02be9d16f0b6110fec589c9a4615a13d36c00e626d06096cb1e263bd88819",
        "deprecatedHashes": [
          "02e52bcc5381dd8fcd20bf6910b88f8fcf981e73387418f5f78c2dcc8da93c5c",
          "ae12254ea74d0dcf07ae87cfe7c276cebb4934ea87db83e591e46ede5286ec5a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527799+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5d9fba32-ab0f-4b07-9442-4808a37e0ce3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "26a8283936eac8874bb67606f7053753e21a4682c380c00cd5db1c9a1c7d599d",
        "deprecatedHashes": [
          "9ada7a76ea0a0ffc34b92585b2623544b46cf07fafa8820e9e7753c84e5a9589",
          "c91aecc52273f279a155c41722723aa76792c76922a522e88a58cc816c1b351d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527799+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f6d7ab3d-1bb3-404a-836b-8d127361fc47",
        "line": "124",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ed843f7acddf32f31c079d4b9fe98b122a2e52a0bcbae1d45aa4f0eb6f28731d",
        "deprecatedHashes": [
          "f3ecf55abec172bcbe69f41dea6ccef6153438798deaa1c0af84e74c2c5d82d5",
          "b49326485f4d96a19859c2eefe028f620725e1119d5142cda732217614995fab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5278+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "674b3351-88f5-407f-806e-d92e0f0ca3c8",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_68b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e6371f8b54cbac8306fded45ee9e90465b18a359b25116dc7f40c400dc0c7c2c",
        "deprecatedHashes": [
          "cf1d6f46dc62ef2846b74887cdbc77682a988332e11474a916db0ab3785d2b66",
          "aed8e91d36e7e6c311b1fbd045893f285a454fe1a3e26f3130f6d10034e2fe5e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527801+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0436662e-e75d-4863-b8fb-96e6cc0355c7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3b46e457505ce374296954da1400cf698d5b76ea9c4dc7b8585039c7d9f6d4a9",
        "deprecatedHashes": [
          "0814581e249aaf9a73afe86faadebda3e949a24028b121e5b03d7077c5baa3e6",
          "d9a0005c815bb552ac509c2a901c8eb77beccee9bebe91a95f54f01a3bc53676"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527802+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "115badca-3750-49ff-8e71-eb1d00916ae9",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_10.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0c3a486d712adad161b01f40a36e00375f88096c3f946826723668e0960cd11d",
        "deprecatedHashes": [
          "4bddbecbc054d54cf96e8fed4168f2116987b221aeb91a8dc79051f924350428",
          "1e45c72067357a291a9e207717fd312c28a83889cabe5869a11367b42bf7a179"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527803+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d929634f-87a6-41c8-973d-3446c072440a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d5c989a427c7729cf615b44e4d04727e2093c14e99137c369d0addbd5dad92e9",
        "deprecatedHashes": [
          "4acd025409d49721907f03b272f7022f29613e4b0ae023d19c9e259a614dc697",
          "dfbee9ffd780b3c5f0599a6665350338f3097f199b506c9a06901e39dd793ace"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527803+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7ff3ac7b-977b-4a77-bfe3-b2b33f84ca04",
        "line": "99",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_01.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f0a5ce5d01698fee1bfc53ccf972e5611d24404db97093f8d91922a9fe8237a9",
        "deprecatedHashes": [
          "de07607b19e45e5783373b83b67a2ed021ef5e8ce3b2b371c8c241f2b03e40cf",
          "9889eff77a6199090fa13641d1e38aa0eb944feb688d7e60de1d4098a3aac904"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527804+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f242ae52-9520-4883-bfa2-ae082004593e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "692677e043942e8be95a8b61b401bbdf75ed76b226de7e13a1ef2090b4a17e55",
        "deprecatedHashes": [
          "a9858a83a1a00d0ecba18f2b9e2ed6d8a54901ac842b07151648954a5b5d4319",
          "ada3513c3608f39afe57ba2daf73f9abbbd9a0533f8d5692458f8f987018bebf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527805+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f0846caf-0aa5-4e18-b401-4f14bdf7036c",
        "line": "100",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_11.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "88c45f423759b3e402aefaccbfdebdd3bf08a2f1a984c9dccb604ee81e16d437",
        "deprecatedHashes": [
          "5615924d9992d40f13a8b055dc84b292a5b97f2a488f15bc157e1f06e17fe660",
          "c8332ccf14eda76f40121b875aa3763a13ec6dd0adaeb1df376f7a737708efe5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527805+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c8461402-f03e-430a-9668-272120754022",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4278f8390aab9549bf3084e1661e2ace54015c7e44468eb00cccccdbdfc8d8e1",
        "deprecatedHashes": [
          "3c44abaec3b79a2da8ac5ef8f242732052f483003adef6f335b2f647ac5c3687",
          "27cdde7960b6f61aa1d97561f64edfee77d9970fcf0ea56c4503ab821fe84520"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527806+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8f878ef7-d424-4614-977a-b354763311fd",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_02.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "201c809c500392eab9d8bbc8d8a72e0e9738303e5d135dc36c585c72cc7a2121",
        "deprecatedHashes": [
          "b6186aeab01e811ea0f0bf26ccc0f3039daa6754eba064d5169621bd38ada411",
          "bdc1a223fa48c5645ffb2978daf7df2b75a5d996efad6b09a980c41ddc283c90"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527806+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a9f05ee0-629a-44a4-b20f-f784eb756ca4",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_02.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "646f89aceb76c93716e1258e81b02fa8883149ff1d12c32fc3be9f335032b6e0",
        "deprecatedHashes": [
          "ec714e8c33387d779c4a350558b682f0728fcdd905851069f33d1c20a85a119e",
          "4380cd98b5693678b8def12c5a746c8496211fafdff465386722f52115137b2e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527807+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b384b0f-f63a-4677-a150-637a31e2018a",
        "line": "51",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_75b.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6a0679c1bdec0c9964209e1853dec693847b1f22b08c96dffd0f5aba6af4c228",
        "deprecatedHashes": [
          "d6636ad97eb12834fee196fbc3245897a38730a605007d89bd98260ef223787f",
          "4430a8c1dfa4fd25416ed10f853c8366beb3da5401e8d6a27384e909c40c61b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527808+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fcedb9a5-39ae-4323-bbea-fc19927c782a",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_74a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "c4c2eb344ae08133a7661ed3a605f1f4c58dbc46a9e4a6aa9085ebeaff49da04",
        "deprecatedHashes": [
          "26ddd3e48ea4701d8b3afdc9f0eaf2bf41fff99fb28874f133321f7c7317627c",
          "32355c57b25f45cc8544c186f6a5e617a6d3987a4510aff30121425f8d5d2fd2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527808+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "37cc6fbb-c414-40bb-a463-be08241c58d8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "72c3eb810fbcf246703268ebe10a4444654dc006d3747f36c39c5067e27b1780",
        "deprecatedHashes": [
          "38e4361d9c95051dc9183bed77cae37415e86e834af3fcaf0add27608e530429",
          "f0df7252fc968e80302f9bcb12b4b321c24a12389ccbf90cfd4083cf8dc8e0a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527809+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c9522322-7538-4196-ab35-61bd6e236207",
        "line": "47",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9c0273ad60c6d33ca8ba04bfdfdea16fac6d291e145bd7ce73f5554224631152",
        "deprecatedHashes": [
          "bf64ecaa9dc02c45d199e42da7c80fb938cafa958cd6d3e4b76ceff200789917",
          "220ebf2651c3a5014fb638629d3ce93a34ad1683816a35d6e866a594f4c08f91"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52781+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "929553a8-ed94-41ab-8571-0221eae8186d",
        "line": "103",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_41.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "760153eff2f34da158de0bd2ddb7c7fda2072ad6c7dcc91c42265f5fc0c93a7b",
        "deprecatedHashes": [
          "edb0c6d13782e84d033258ee668ec628c4a0f26de0198624f869b49a8854822a",
          "ee16b1984b28474d5938b36e4490fce17b5e90c937e3210b8ed2cc9a2a7357dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527811+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c205ebdb-af1f-4611-8520-61b222da099f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b502462b1767bc90ae2dfea7eb64523b9b2e222a9ab40781ea168eec067386be",
        "deprecatedHashes": [
          "72668bc4d4c8e92e64dd0c13379b9a49d21f7f2053c55df5ceeadb136d871468",
          "2687f760cca0ed129f41e5feedd7273256266a718f5375e641465826ecadf704"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527811+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4092a0aa-b69a-4c4b-b2e1-dd3c498da9ac",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_12.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4237d193e469c0cc56ed73704f49d12cb76df17afdb6734f837de081714b915f",
        "deprecatedHashes": [
          "f3764666f95725567f7be5bcb47eef8ce666c83a98f8a86ca9f147bd50e7be8e",
          "daee9b11de11f409f506f29302bff49b365aba312cf2b98285f19b92f7c04d02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527812+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "43c8a6dc-55e8-48a1-aa75-afebaf233548",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_12.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "2f7103e54de74c0c97affeefdd8fc37cc7c6acee5da97ab1defa4390f3c56154",
        "deprecatedHashes": [
          "3e081998c1b1860f85589035c4721614c3cd04f8fbeb258b4913eb9721e5e571",
          "168e4d206d76714954a9ccc28bce02b135295d15f0b7a2c699037c01085a9359"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527814+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bb81de6e-e066-4cc0-977f-eb61236b6f0b",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "64889f56f3ed949f54cf8e2e583f267b3ed2236a7a80d9c34587e07e419bf1f0",
        "deprecatedHashes": [
          "96a9c2954088e82d7cc850c16215ae828fa685add9ed4147a775c4948ad0f485",
          "d4b05849fa76131f5ceee07ef8a967f857d29c7af420530faaccd760690b18c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527814+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ed4bd57c-3004-4fff-985c-5d8235b7fd5b",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_14.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5d3581df8b207e5896919ab602b0fb357e1fe9889f7dd870eedc8dfacc505df7",
        "deprecatedHashes": [
          "64d93bf230165945e7713ebb4b3085c9cb69c3c453fdb3c0267bb916340607cf",
          "c41c49a6e77f8589212c3fcbcc7d9ea8d733d13e2ae6a2228e60a55f837ff217"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527816+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cab27029-7454-473e-80cf-78e5171963bd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "27c0a7890ea75fa195b42d1c102d01a0eaf73830dab756cf19b5b7c62a18878a",
        "deprecatedHashes": [
          "90bae032f8faae6417d8a0aba14b3d25811b9d6ebcdfa9bafce18d9063da7387",
          "06de901ba70bad85f4e3952f55ebc7135151fc917cd619b793189e2d6194c609"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527816+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "015ec425-ed28-4d51-a1ba-bb3a950e03d0",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_02.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "2f84666c27e20bc65a390315b7ce34f824750a01b4a60bbfe5a1179d9eaa45d6",
        "deprecatedHashes": [
          "9b9694ce111ae24d9063ce77501773762f526da0545c220f87dc8ca7d27a9cb9",
          "67cd3f1f4184f0504d789ad47b5f823511c2a41cbdea7ae727b48c2400348efd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527817+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7e9dd2d-9ca9-49aa-a7f5-12f3448b2d9e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "20980947f98a070a6c83298b55a9b5cc6f6618ecff92951d1954583c6a307bde",
        "deprecatedHashes": [
          "bf8139a3f135f8cc0df38b513d9c26f346629864b78056b5396e14e27ee031ea",
          "866b6d2f4b865192d6311f5320d067e3db4cfae52252d152e7e95d9500157554"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527818+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7b148e1a-44e0-4456-94fc-aae42a98be81",
        "line": "118",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fb62791670410984097839ef2cd971cb171f6c333db44022de76cbb9109d6fb7",
        "deprecatedHashes": [
          "a3dbdf982fe22cb34cd163970ccd8ca54a6a8e19203f31ed5f5a56e012035510",
          "3dd7e9e40dd956dc7479279e9c363f5e1381105577b0863f90921f4fd112fdea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527819+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f802436a-4ce2-4976-bf80-4422838eeadc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1096729793aee03a585dac6830b14a26d1b9eb6304d621322a6b0b0a5f0beb3d",
        "deprecatedHashes": [
          "7f34c9e6ff04a8ba9cfdb5ede3af05cd482d6f62d78a640cc4f52f6306da1f10",
          "93058d5940320bd2419fa64d4089ff6a80345ace2018f74b95b9ba098d7a481f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52782+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3969aa18-75cf-496e-a31b-e73aea3030c0",
        "line": "129",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_06.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "484492f6d0552740c4612ebea45e164a7e24b5b148673c765ee9ed61c2d8c046",
        "deprecatedHashes": [
          "a194b8ceaf51d19f724541c27b48de8066072f0a3c6cf7768c8d2be90796d425",
          "26b11419e0ae6aeecf9e702a629ca64e06d4ae45c8876e40f61ef05a087ce79e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52782+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23529dd2-383a-436d-aa81-b5d9a30d14a4",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "03b65d07287c5aa89e6d2d0568a047091e21251a3df3132f7697e0ca593f0039",
        "deprecatedHashes": [
          "d59131458792463e6eb6b23b8e53bccb22faf65c1b593c34f91ff58ba9e2ab38",
          "2351b5ac33de3c52805614b0fec1804c416adeba68e62afb87122a980899d9c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527821+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "78abec54-6d63-4d38-bff2-be394a0a2107",
        "line": "60",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__Environment_executeBatch_10.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e0d976e1a1bf250d137cc8d377685d0e53e859d73f617613144a260f7c494ef0",
        "deprecatedHashes": [
          "e0afcbdddb18500bc15c3d257456f997131af29abdfe1324a12a497af3c31870",
          "cb531f0e524a59405ce3e94ca051b5c2807d476b53067c308711bb58f182e7fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527822+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95df3bcc-e538-472c-9a98-85b78be5e7ea",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3de3dbc8b37579f2b3ed2dd3f88b3e7238619314d814e6992a10e977ce015cf1",
        "deprecatedHashes": [
          "7c603c380884eb6d5a6239b2b7e039accb35b2bc344491dd0bd7bde1472b56c9",
          "edc581191bc427a66a492fb3210846ac58359e6017c1e90db2c1e05fece4be7f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527822+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "04c5215d-747b-45fd-ba73-17e927f22330",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "be41736379ac7bbf24281fdd8604160ca34a70068c334f786b323f7f4ffd98f6",
        "deprecatedHashes": [
          "3f53aa5fba7034afcac88fe286a77765e3fdb6560730d77501c246cd1def2a5a",
          "a7dc9ae04913856ed8d3ab688a49e1922d94cee89ae8485f635145426e649fd0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527823+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "61ab08fd-5624-49f4-9ed5-07a559bcbd53",
        "line": "48",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_41.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a8a1a25acd701758a99f2a1177372bbf9a1b10cdfdea36468323864ad5720c26",
        "deprecatedHashes": [
          "8ea917e8916a695df475db8e746c462e13cdb0570b08c62988f6543707d0dce5",
          "aa2cfd8e0cdd4310787fe92d387d74fc477db0776d2286485c8212cf9ca69fb8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527823+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "59165aa4-fa4e-4b47-bc64-b8d5dfd4894e",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_41.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8a175fbf37d06843571486231f98afb704764b2cce49411c2e7b90f80ebd2c8e",
        "deprecatedHashes": [
          "9d4e99f378c83db29b8f11371e7c54bc8461050342ab8ced25efaecd96bd9158",
          "5d747f63b9e4b91cfcb499a7b69aa4305b5f783ec1b5aa63f4fafe2c0c6f2a03"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527825+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9dad9eaa-a15e-44b9-a05c-af12f89d47a9",
        "line": "44",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_74b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ebc6e9d56ceae671e132205812e94ee756510753902325af30f19a247b71fe17",
        "deprecatedHashes": [
          "cc48acbbf8adabb181f0b7978fec1d2053350c11d03332ae1ea6f2ab09d24094",
          "14fc04b0c4402935f1f0f02ec0ea42f397fb56c83c11704ec7aa8c1ebb726a94"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527825+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c316655-d5b6-478c-b427-8f2e11cb0d82",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_74b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "983faa36e361df35cf4c854b98d675386374f41686f724a918e60b7cc7c01a74",
        "deprecatedHashes": [
          "d72e0035bba415fd5be38c6fa49c3c33d2240854d24528c948176366d959b26b",
          "bb6d52d575f905351bae17903d30a044c1220dafd7efc81a4ac3fdb9b02bf324"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527826+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "95cd4434-66c9-4357-8400-bea52cf315dc",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_22a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0b3c23e30faac190984c94441a7810819ca4cfc311ea6b2be6a212ebde4b90b8",
        "deprecatedHashes": [
          "f9819304ccd15f1eb1193a65de5c4ad97cfc28f4a90d1a1d33d163d174ea8b36",
          "721cbf4299846565f98f05b8773f7166667ca7510d3580401c98b39b7ab15ee4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527827+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b42b8730-e0de-4b8e-ac22-2b1a5962b656",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "9b742c81609c51c3837f6ca0069db809ce7e1fc36a7016e232a69f031daf760e",
        "deprecatedHashes": [
          "d6d2debbc7673cc18d402fd658fe4f46cab34df137dcb7e6b8d476c0dcd9916b",
          "eb4749e6bf42a4670473a8c54646c5d3c030167ff561280c507f02a3e8f29299"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527828+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "85140abc-43b9-483a-a614-d26481f0a16d",
        "line": "122",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "917dc1460fff2e9f7957619678b1178b5dd04e38774ed81a98033b4f56e57278",
        "deprecatedHashes": [
          "86529d587575812b078901bed5bc87ea40c83fb602fa939c64d0844cc2aad6c6",
          "c4ba070ac74690ac03fc86e4ef2c9ee1750efcc7d3da73f371ff0c04277d9dd8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527829+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f47af204-2832-4c76-a511-c8d9ad2a513c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "400c5e485b27255f3e032225f6b5770a80a4a16aed53dde41fb4783d5d21c0cb",
        "deprecatedHashes": [
          "2843541bdc7afc9b428769c3f45a979229de3f5a7f72f1a04cc31a9cfb3a97f5",
          "31ee0f19109b82ca39e9a7b59b5d3f739ff185d843339f6ffdb055b95f70c67c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527829+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "65ff6042-cfb6-45ab-8da8-4a28359f0494",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_07.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6efe9e94733b1b210850dbf602dbf903aac00603b778004dc1cf7dccb80fd614",
        "deprecatedHashes": [
          "0129672bbfb0baad568545f8e3b22a083ac89e6c5df92cd6b3f0701d5354c6eb",
          "a865ce1b286575d837f50a6d7a75a63d8040aeba24097f4e742202b091b869e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52783+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5219523d-58d7-4011-8cac-ab8357518916",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_07.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "063244ece03ca9fe3f72530eed0596255de1a9e9cb20106c2afd5c1bc8d14d63",
        "deprecatedHashes": [
          "20d54623786aa81632d6aacb9335c3b2a3356741f040df86ac92ab7b3c48c6ca",
          "6b5063bce5c904a076f5563a35d7ad17061caa23f2bd971cdbc2e0afc50a6453"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527831+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "293675c1-0d52-479c-bc66-139bda20d53a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fe19a04b6f6e2447fd628c7ddf9add2965834eb4f23cceffaaf3a28439fc5d7b",
        "deprecatedHashes": [
          "288651efe42f906cf0b1111b8218e1caf160e5ca649aabef0780e143848bba4e",
          "3cf4ee8c793c565a05e3b3bed2f8e547cb1269dc30b300ad41c6a777eb081ebb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527832+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b6cb79b-8db7-44b9-8d06-7349f579fe14",
        "line": "102",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cb8815ed18036068eabe2f2ac12d771c1ba60169485ec25573e53cf2018a2e9c",
        "deprecatedHashes": [
          "237fd64ef80e718086961b37d7bd687a9d00bffa382df29210e5da3a3303219f",
          "6d66782343f019d0f305419ba164eb946d14f0a21e3b24c5d95344f8cb064ab4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527833+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cc450a51-e25a-4c8c-9875-0bdf3ab0b305",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "343793b656e49d705e16fc1438af4e32a55cd6edee2f129ceec4348d74362684",
        "deprecatedHashes": [
          "b857e34a1cda00bad49fac898621830f200312efae1aa4eeba5cd68c92ef8881",
          "35790b646b0eb2cde2a749d49d1a07384d4eb79726f32884abe0e3588b7bf885"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527833+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "379fa676-9929-4844-a73f-18cc7a586c1c",
        "line": "119",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "0cd256b4a5cb5c48848b9c78c15455eb4d14b313a6e2e0aee599fdec12deecaa",
        "deprecatedHashes": [
          "3f74c5db389651b8656359008983a7ed4f0e82d10baf38351b60ecefa9f65c3a",
          "7f5fff641c9d73c63bfc1396936ba27dd68ae432ecc832c29418a0df4bb74a4e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527834+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "84ad8321-d871-4065-95e4-adc7298ce5c5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_16.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "872601b730458d1b34f3c8fe7d2d52bc6837ce38781461f695ad4de69a50b078",
        "deprecatedHashes": [
          "9f2d421fb697601a449bd40a552c5b7a0adba27e7ac1f6757a6cadf39992dbb2",
          "4345f419fd5a7722ef8e34a6ec05878656be0cd8272ca53ba2c66bf0f100c1de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527835+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6501dda0-0ed3-44b8-87f6-2f7a30e35212",
        "line": "52",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_16.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e5f237bd0dfebf30dfb69b756a59ce05bbcb2556a56dab857b7f5ff4f0e4bad0",
        "deprecatedHashes": [
          "c3ef3b7c9da4ca4af4456480758fc2a7568b751458672941c31a34da044b9d9a",
          "fd94cf260193cf7079417d75c279253dd1682cfa08c24bea966e64b5d6f7b154"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527835+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ebfcf977-8df2-4d48-929b-a508c9065503",
        "line": "53",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_16.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "292f04f014d5f5c1a04e6e924a227a4e45133daa96cd447d37c3d78ae6e590c8",
        "deprecatedHashes": [
          "56ba6097583bdc66d274c949ffefa8a79e969425d6871f652969560822adcf24",
          "a9c4b9a41661f6a2628439c20cdb85abc2eb1a0ea2f004f3d10c331a09d9db02"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527837+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b327504a-f9df-4eeb-ada1-510ac373316d",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_41.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "30c6acfc8eed401667281bd303bd1cbca21ad94bb6940204ed3ae8fb6837fe2b",
        "deprecatedHashes": [
          "87b042f1a247cfc6470c21d979147f74bcb1c28c07bd4ebcf844f676de6516c1",
          "418c72f57c44756b4e71cbd67b9331929abec5ba9e567ed91bc02bdaf74aa782"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527837+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b491cc3-80b3-432a-bbc9-eab183cae853",
        "line": "45",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_41.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f7109ebb041fd3406da45d3d45da5c4b37791edad9d59b9308a9d596a91e48c2",
        "deprecatedHashes": [
          "665ce22d26e214294580902071d85c9d70e822130307524c53109cc25a992a34",
          "c6dfdb6b44d7dcb2ebfb465aba33d2ee78f107399929017939c3404b872c5a36"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527838+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa4e848f-1684-4f98-8c86-3c2b9597dfef",
        "line": "110",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_41.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a5f1c0e6f86f1937d68f05151f1da3269df19da8d6fa1033dc8d3d3dc5fc646e",
        "deprecatedHashes": [
          "65c6e2ba5cf8744ecc34962355d05f21ecb2ccdf1b7a83d80a2ceb8d2efc5f52",
          "5055a2b93f415b96d72b82f4978ed821958efa00a688efe96909c91beffe3b88"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527839+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "db839590-12ee-4da2-99bf-cb2c8d7ac08e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "2de6be8d21b382ad6e382626fdf959ca9e94bd7f752d42757d6355a05d41454d",
        "deprecatedHashes": [
          "7f8d0af270e3bcd24844e530e1b820528d58b3838c6e06b4790bab22c2f174f1",
          "34b76f7692b1697cb1ae8001d869b7584264759e8cf7a1cbb39a0db55ae5ebee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52784+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "818eb0c9-7309-4a0c-b394-77fc1454cce5",
        "line": "106",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_06.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "84e23e8a71ba8f6c212aeed8d6b61b7ca6151fe0f22a88f732dfcac1a7403dd4",
        "deprecatedHashes": [
          "4c7e00590cf318662bdc8b9e3598716b2602261d1d1eebc39b7cbc5416ed4cde",
          "ef32787b8d181dd84e90ce79a1682eb4b7da7d2b1bdcd9a29ee66391314ebbc5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52784+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ccf7c236-a496-49da-bcd6-a2973ad424d1",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_06.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "b259579c291f83934888d765264ca424b1cbc7a561f4fe4bcfa6833faedf2dce",
        "deprecatedHashes": [
          "199a37b29a8315cdd4386ce2c691758fb690becb5038d9c254384db0ee3f8755",
          "9f2b829814db78ea21e70717a09846c81fc9dd19f96b66d57fbb6a8e7ab38039"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527842+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c2a7e0b8-290a-4de0-89e0-587d987a0093",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "efa47dccf0539f47db2582bb5fe7ba0e412b562e90e71d40365d6576a0cf9b9d",
        "deprecatedHashes": [
          "3e9c9099fc17ccf161667499cfa2404aa4615968755f0c3cadd27c25a9dea637",
          "cb6f3cbc8619340a6886e78518241c389c1fa278c93f5b35deb621e6e74fdfb3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527842+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25e60c7f-1236-4794-b191-7e31bfefa284",
        "line": "106",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "567d184eb3974aea8a9acc6b80a624d413c8d0405d05c904d3a8f7cfc5ea47ef",
        "deprecatedHashes": [
          "a2fd74aaa890473d5d4381dccce342670cc612ca50698a873a279fc68a76afeb",
          "62a56082067e690947863a6e774ff6e4c9ee198fe284bd515abbb8dec7d797f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527843+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6695dd1a-1673-4b19-b7a6-746bea2cac62",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b02d9b8e7b8b561544d54a15d0228bd20268f37f5fcb74a9bbc58298cdd470e2",
        "deprecatedHashes": [
          "2373292cf3354b27625fd885574e47352392d57a3eee030187ac3b3203c583a7",
          "db2957f51e80e47e75af751e2b955f6b43cd9f29b86acd78813ad925d8d59bb5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527843+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1fa0dd3a-85fb-4238-a22d-f9b963625ae9",
        "line": "58",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_17.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "aabf8d9b186ed2163bffc5e2fea3845ad0833b9d3acb3bfffb85e171115ae08e",
        "deprecatedHashes": [
          "ca2cdd5c818f937eb75bf78b20d2d655deca75db071014b9dae0cccb23426bd7",
          "e62ebb76937f3e9e8135b1237a0614098fd34b4d57b58e8d77f92d37ec6fcee8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527844+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e7b96a9-7fbc-4cfd-b3ca-658231228404",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_17.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "014013706d0a69b8e442da1bd84df8265f0d229fbe5c196f1bd7610902a616f3",
        "deprecatedHashes": [
          "1930d6526756237ba0e7251dcadccb3665f8c28e305fea89cccefae3c6492a0b",
          "3f97aec46e9f2df2919b516b61b8851f47bcf5489db36a20283c00daac484e7e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527845+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e6ad83db-8d42-4960-a65c-aef94cd43698",
        "line": "59",
        "column": "45",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_17.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "da9614581711bf4292398da97d34c0f2f64fbd382080646fe345526372d0168f",
        "deprecatedHashes": [
          "54ed76f81ca7fbecaac577e655fc973184eda995dd3a3982b9f6b2c87dbab590",
          "8948b342192bf6a123d5f010bdbc6cd6bb841016e97997c6621e00c1985f9df0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527845+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec6ff393-3763-4ceb-87af-6fc49b7a9a11",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_75b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "9278f3587f75f1e9e06401fdaf54fc3e9d99ce35d23cac103d311a0d89bd71f7",
        "deprecatedHashes": [
          "ffc306437dbdb5bc0c179701d02c04264809d919345c011631d620a351cb7f7a",
          "ef8330e2afbf0d6b9d02577818b0aa7902f4b00a12f76cf04ad242d8d3fcb8e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527846+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d0395692-8ac4-43db-b3b0-b9babd56ba17",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_17.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "0dffbce62c9ee89a8d6c63f4c28c08391225fa6ab1d64d2b15f36e6bc8f674da",
        "deprecatedHashes": [
          "6155f0c41c9877dcec4eb8a0b58a501bb7c91f4a3c3573a76bc031b0ed19422a",
          "6d6da9f9675bb69d0df25245c36f32967ecca9d7d6c04d9a42e580547b0dd5a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527847+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c67f1a76-e15c-451c-b34b-a1d8c1a40127",
        "line": "126",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_17.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "217023bc9f92a28a86b1a269c36e9e26ade1b1d29e03f47f91fff5b2710d08f2",
        "deprecatedHashes": [
          "4d735c0a891c7d00c6e425b73247c740fc12fc87106fae9e8fcf7e2f3549b5db",
          "295aca170b8f40976fe9f14f39c6eae1991d517a944ad5d30108dd7c79f83ce0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527847+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d58e0c9a-bb22-4728-9d66-fffc836286b8",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3345d10d521503ae10b957c8d16ca0e7672a0cab6c1b9e90fa4104cf64dbcb0f",
        "deprecatedHashes": [
          "830350a75f764146f70945078f3e0149305622059860d7bd2898ca2165290e44",
          "421f651c48397f66a6e53b5f382504a9ef22e9477e94b907c0dad091990834fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527848+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "893fe3e7-71ad-4d3b-ae15-7e9224f31683",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_13.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ff2634cb74f2e8d339a9705f5953d55bb4c871633d044389f1733880fe9924cf",
        "deprecatedHashes": [
          "99d43239419dab3e793387c33b8744b481796f55429d31f703eb27d717ba298c",
          "ac9fb8d0fe47bfe363d59585fdb51263c9be24a6fce9d2b418d838c2cc7d9b61"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527849+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "faf277a8-bdcb-43cd-a94b-a8693b720867",
        "line": "42",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_53d.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "e35c11250313ca2fcade0db834fc64b358f9a75b5d8d71c50a05161ffc3ca030",
        "deprecatedHashes": [
          "3bd2c2ea96cc246291578e21aa3c4cf41209f0b640f5cd10ee6d91eb439b8c27",
          "86d61904784ad4dd59e422b224dc4b1ed94b3f83468d437931a00be79a2f9aa5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527849+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "436de1c8-4a72-42a5-ba5b-41a07622209d",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_53d.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "d14013acd0c2eea76c07652bda20ffed8c440a99142e667e61d82fc2d499f165",
        "deprecatedHashes": [
          "57f3a230e8856432a4216a384da1792dfcdd7479ac362e82a64c89d1265f4491",
          "3e6ac82382ce5126c2337a251a28b72bd591f12300671eaf77f48ff3728fde82"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52785+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9c659fcf-1be9-472e-9ded-cde4983983ab",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7c4751cca0a0bcb39923d0755aae291cb4e6178b111f9d6a1c30e58b4605c117",
        "deprecatedHashes": [
          "d58be49be7af19586b7d919bfd0fceb6505b758dbeec3d8b5e42901ef8806e48",
          "609cb48d7c422f537efcd954ad317a387b6ff206beccc42182ac53ba7e5d1bec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527851+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f28c31f6-9a9c-4c16-9524-e52bef704e3a",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_02.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "6600d4445bf4e75ac4878ca7006738f8b83cd41b281da8035f790a2ff65cacb5",
        "deprecatedHashes": [
          "aa6ad34a09723a7653c05395eb494e3f2ac92d15fac34965099d7c62b6f73e5f",
          "a35bc16a01b23c4634ca2417fb0ae709fc356d495ad1adc279c869d8ce1c90c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527851+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "12f25f89-20eb-49e7-95ac-54ddf6620ff4",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_02.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "76c635b1f6224078da78c475bd6666855e99b13d389571c6eaf1b8906f813d0a",
        "deprecatedHashes": [
          "62b855fb7ee8aad7598afbb0c734afd933c813b350e9efa33339a0ac90d154d9",
          "7a7e0c2daeb8ffcf1f2c71d88f84c12442a499a721504ebd696774375f8c3713"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527852+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2719bbee-a15a-41f4-81af-db9a52d52c48",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "3a749652f3062c7d5a7a5216e9358b69ff9be0ecb2f0aecab5295f69a3ac0b52",
        "deprecatedHashes": [
          "66ec6939c6eaa0f2ff01a7a5d10b73957d77464a5093d3ae9a04fe9d09ffa74b",
          "43f5f49e7f06ba60426aa1873a9e578ce55aef1ccbdbaa20b1d39151cec88a71"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527853+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1773a69b-85e6-4186-a722-dd6ab383a6dd",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_06.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "39c5f47ff396aa0018a8938b4cda71ecc29be9ab5f49ae22b682bc84b830c909",
        "deprecatedHashes": [
          "12d39361994172bc5a54cab18fe13233efc1e7526378d85d94aafaaf265f3ec1",
          "aec9ce73ad5c3e9d2c97d32028a9470e23443fe945cbe56247eb93eb35468a35"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527854+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8bd9cdb8-cee0-465b-92f8-f38a4330ca72",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_06.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "6814ccc4fa7a85c295bd408870ab573b1419e45e594ceb9294573d0c13f98384",
        "deprecatedHashes": [
          "6e8ad659beb48b4ce22146d7a45ea40d2d7c577e26cec3cbf7bac882091f5ca3",
          "a8b80fca62f598a6f9a07e5104bc130edf5b0658a8a4200a85be6baa8b25ac40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527855+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b2b4a36a-05ce-4eaa-884b-b19e6e75e9ea",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "67d68403c0a4cbb31a8bd96e40366bb14580da0326b12d372d53062993ca703a",
        "deprecatedHashes": [
          "c7651393e4e0652c9f5854ab83ebd2d3e32d5cf03b23d00955ad1f4fa0e74d0b",
          "7b188c9f4b5bec591be52f64af2ecee51b76994f9730d89a9c610b7cd509c2e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527855+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "52dfb4b5-13ce-4847-9415-cbe78cfd44fd",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_02.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b6b3a658918bfff316f6835c27b4ad0cfb1afabd5d2974d73c2b746dd40f9625",
        "deprecatedHashes": [
          "2096ef112a1b8d9015d977c3e1ffc1755bb1435b5b26a9ccafbed34490145555",
          "2983f69fef8da74975f8c0c1a784fbb780ada552960f0ca7ca116473b203788b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527856+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fad4c34e-ec08-413a-a8aa-17cf7f87dcc3",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_02.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a39a3c495891336aca68552198806728d804c08a887e86096649c18c32708b4e",
        "deprecatedHashes": [
          "d2ff9238d9173a17fef252a2cfec95cc1befa5c7c1519e916397b6805699248e",
          "78a0187e30ec1ddea64c718103b9882c1a984f1a487dd78f10ea31645d718b0f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527857+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3761560c-441e-418f-851c-dfe6d0a1d370",
        "line": "54",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_75b.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "c51c88e586111ff4a25cec070b313abaeb521b51c0c7dbddb63bf47f12a66454",
        "deprecatedHashes": [
          "c70423b619c9fdc9aee9b426b65c42e873557150c2866eb504efdcbef3f12433",
          "5689de02ebf0219db4677b7c46c36a7739b5873294f800068841f34a2b238cb1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527857+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2c68422c-30db-4320-b153-01c48a0c3efb",
        "line": "13",
        "column": "61",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_75b.java",
        "code": "xecuteQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "443f500d12ba690d17dcc26153706169ffe31175c25395dec595329dd5d3006f",
        "deprecatedHashes": [
          "54b822479089791c3bc95651d605ae336356e7174fc54075604080a9ebbde065",
          "c04684ae23f884dad8910b3f2c191fbfce22e712f164b9cbaf7a9ef7905382e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527859+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1de71f6b-8c2c-465d-a7d4-ec5b30663559",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "72549cf1438299fc827dc93ef762281dbabb0c7d0291bf934bca547c3f9ff2f6",
        "deprecatedHashes": [
          "7f164264da793681a04ef627fdb51980577ca13df84c2c089b094fae1a6ccb97",
          "20f03940fee5d8552c13489df498e02b516d7ee9fb0be0479c362c40a25be056"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527859+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "76bf4c66-e983-45dd-8496-eb1fbd6f7555",
        "line": "101",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_09.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "893c8fbc0f94d147776587c1a65449f2ba98ccb1c25596b56d5840afe5c4459b",
        "deprecatedHashes": [
          "d92271a193b25d9912938eff18c959dcb7a84eb64ee9ee992c5ef34a983e1a6c",
          "0bf2a5cee4f20b5b609278695045edd6cb6e8c0f99f149783d6d212840270e08"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52786+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ecd355e-48f1-4911-bfa7-a41b4001f03a",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_09.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "24cce1e0f55e2a9836a3e3f7a11aeace437853a07689a303f486ef7332e60ce1",
        "deprecatedHashes": [
          "9fc5ae2f22b4fe1cc5cb5a02c8595fa6a4e1f5822877de467e78bbec3976f7dc",
          "7e7874820089824c4a3797fc5c226ccb3cbefb9afe110f044d0bf56c37a75a6d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527861+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7aa0413f-c95c-4a96-a7e1-81df55684852",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_14.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "8afdda6f507d4d66edf0cdd1857e2e540efae4d1f774b3480adc39cf4c539f23",
        "deprecatedHashes": [
          "81f35eab294f02d1e41d085f1fbf74cbd3d315827232555463ee0dab159e764e",
          "6d9a8b6e57a8cea1903026762c3f66ca0377fe3e7777e5cef905e04978df7137"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527862+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1a205f12-61ea-4012-a2f2-2fe6464c9f75",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_14.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7b9d962699eb547dc547be9ac886976c6727a34495aae56bb04a8f8fdd4189da",
        "deprecatedHashes": [
          "3d7127be10df91ac25f414417f39d528cc6cbecf99415f9abca8de31abbc1765",
          "75190b2395eafbc95976535ec27662bb57eb0228c15d1990f663fca2de7357e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527863+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4ea22ddf-0a53-468c-9593-d72dab16bcf5",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_14.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9ae0ab70fc4d5aadb025c358aa007c730236b704c49be570d055fd8833af3d1b",
        "deprecatedHashes": [
          "1e6fd7325e899f35ab7fd82ddbf8dcc6c793b29a5de2640ccbccb8d2deb79efb",
          "1f82df16cf5c993b4684d2525dd756e23a98ed7a169e8a8b0eb0bc6e77bbb339"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527864+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3296302-f011-431e-887e-664b2bb0e320",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a4a879af890d8c4a18f152b28318e26bbe5d77e3424924c4126e0c4d2a44b67c",
        "deprecatedHashes": [
          "8945514e40db6df0fd25d1953f657d09995cc2701d682ff1f48a93f22662b98f",
          "0d137fceb614bb1fcec86956742fa54213be11f3b638928d3782ebba71410de8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527865+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b70efe36-eda7-448d-b7ae-2966c9543c67",
        "line": "120",
        "column": "58",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7de15b9578bd8c375e6ea1e1c3e00c1a5f35a85081711af121ad3fb8395fbd77",
        "deprecatedHashes": [
          "e71b3d395ab30c566c5baefc16c5c9b41e3ba725672abb6a959b52f43d1c1d4c",
          "a14d868565cace8649adfdcd5e6e71a4823c4deea033a667580fde9a01702140"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527866+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2e953cf8-961b-4a3d-951e-ecad8b7029e3",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "31713ec91ffde4543d00c8b4f2b8f5e5315b2dde83e76ef426824efa3effcccd",
        "deprecatedHashes": [
          "42bad206fb18346437b3e50ec15b2e64ac53d2577b1b9ae7cf14bea710341137",
          "4492873bdfff2f7cb6f04b46b296d4372daae15e925bbb1316a84077ba649e33"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527866+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a229ef38-2c73-451a-bde8-cccfc4c1815d",
        "line": "122",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f67b0e9da1a71ad3bbbe12bf0cd922b875d85f85b45c8de39a9b58a97c22fddd",
        "deprecatedHashes": [
          "1265698181d92e80816a5533ef77aa40692ab1dc8a8c688593bca513303495d3",
          "6518a8131e7c02d87ec89b27acbbec471f90e3dacf617940e5cbb41aedb13084"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527867+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ca9f4d3c-da18-45f5-9f32-105fd85e3c65",
        "line": "22",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeUpdate_72a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d739eb4f077356d38da0bbb9cdcd73fdd5f51c3d972321ef230ec11d8ba1c326",
        "deprecatedHashes": [
          "ff73c22ac7275deed32344f8fc32604508e624fb29f0d646a4a46f926c83aafe",
          "911694f7ad87f4bf8cc32948d8a1006e51c8e0897381e9e059616d75491564a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527868+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e9195866-9d15-4812-8b10-64a3fa91d717",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "1bfdd0c93a75fe1e3ff19331320445aad261f0faca55450282154f02b7c78a9a",
        "deprecatedHashes": [
          "09f4ed3895c76df2c3f7d832b44c383c49f16d0f078be18b732b2994a52f9cf3",
          "61d14c9994b153cdcf57ef13d81583dd74abb44b3d09defb24b53194e01cef04"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527868+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a4dc4c58-53c7-4552-be48-f5eaaef73985",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_13.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "1805e4b724ebd7b8038a07720c964febc5863110599ed7311552ef9e3d1ad4d4",
        "deprecatedHashes": [
          "2659e5010fa1a494fed5a0c71878cbb825931c4a90546fa1c622204a157069b6",
          "c01d64870c47da76d720ad574c88cfb55fb7b85602f953012d348ff8c3de2374"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527869+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1b6ffa1c-5c0e-4808-aafd-99fe2dbbfb87",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_13.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "1e9691220df346ba60d9949f0aaadf5cab8ef0cbbc1a6792dc923d516b3b4ace",
        "deprecatedHashes": [
          "097edb4ab1f20b3780d7c15c3068440b13d51fac3060c127e956443a9bcaf7b2",
          "e81535a617e4c5f3e059dc221826ac11b7f8f56581b7712da3bf4b48be779075"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52787+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f067dba-b7f2-42ad-8aad-a6d13b7b9751",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "57357f7fed26597489faffed8b0bc65267c72c6b619416bee0ccb88a6e55a9f0",
        "deprecatedHashes": [
          "3a64c848d5e73423bd62f366568f026ad27501ac350b574d157a46b7ccabf727",
          "b058acb3f2b27d436ee498a27cface082a27610950a9ff3094109b7a1e7d7770"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52787+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b048d06c-db2b-4ecf-b49c-e19b7ce6f34f",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_05.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7620050a7af8358103bfeab7077e4b0d6981103a87bbbb60ea4f2218894ca1ab",
        "deprecatedHashes": [
          "cf060029a533406942a80ffc6a341f7122293cc2d929bbcba3d0337016db2db5",
          "e3f184abd232ee68287a7475f9c40305ce59217e576c136bd27a0ba19d378f05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527871+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5c9a9399-86e9-4793-bf0a-03518c7ae2ae",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_05.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c12a7b20f3ff280c26b21e84a0adb4bf3e41c47b11664b3312542a9e2788862d",
        "deprecatedHashes": [
          "4de1bd1429c6e1e245dad9828a5cfe7fec18b25eede4364b3660254a776cbc08",
          "b280996906d9cce3a07822c5551fa3381ceff34c96e26733f5e3087c7675fab9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527873+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ebae6acb-5fcb-4515-87b9-2dc457caecfd",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "19a12976a08650e3d8c5e479d66b09eba53de0a10fa95d286b455f338a968541",
        "deprecatedHashes": [
          "31a284bb53358e3f812fd95c5ec5739e152c545940415cfbdc4ceb9d15902fdf",
          "018e1b131a97480acae35c22c705183d254359a4b89f3dcf478bab6eca9c2ab7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527873+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "20da2bba-417f-45cc-b1d0-7089acbecdc2",
        "line": "137",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_08.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b9c9f639f5f1d289f6373f5f2ed06f2bc74c2353f388721adee8b65e4d94b671",
        "deprecatedHashes": [
          "4fb058e8519badfaeb5f2d7daca290c87b9b4cc551792553f210d45d58d6735a",
          "60ea90bfeae160416aae444a763068c0249db43f93869f62c3d5e89d5d497c44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527874+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d66b2376-c2ae-4a98-9a4c-814bac862391",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "55e236f89c74ac1392e49c73f519d4096b5460ad157e11c331466209fb2e0981",
        "deprecatedHashes": [
          "bbd20623c7c97a7db94fbd261a23eaeda3da7fd1c2f1943eda764562de066ef0",
          "5ec640bcac7b3787566690a020330eb2c1a20bd24f76d6156353c8bf515d1814"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527874+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "99cae3e0-3bcc-4820-807f-046df41d22e7",
        "line": "107",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_12.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "190beafdcee63199b8b0ee1746141d518b81139f98c9509a1ba94df7cab5369d",
        "deprecatedHashes": [
          "f91847a76c40c4841235a32c7b10f0e65265d10e17832d1366a774767e5007dc",
          "fce3cd90fdb2712b2c15b018d6cf75f625b21556fc735116c9c007f4b00ebc7a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527876+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8e10e67b-9f05-4ca6-8c66-6d428d756b4f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4b9c3b91cfa9ff3fed1409a8c0b24a7177a5ae2af4b3e034cab8f09e3e047498",
        "deprecatedHashes": [
          "20a948f44c4abbadd33a2efc46e77b50fb557640ea5bda79cfe95cd4a0830da0",
          "2f3eb580b2c40e40e1eb192322cfc7d2b04f11b426f719ad8eebe26f9803c014"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527876+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "82835909-7d78-477e-a4c5-a36d8f35d0fc",
        "line": "118",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f7091794db3dbf4e30540c3b4e8b47ed3b81d78e204323cfe8ecd0d6d53318f9",
        "deprecatedHashes": [
          "5bad7cc18549924d47d8b06d3f46410a6afb82f16063c44fc8c28c102782f27b",
          "232d7eb1d36fcc32f12f6a4722a710e250da0d34ce06001eda000163e7701f55"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527877+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5eae326c-04b9-42db-8d01-2bf403244326",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e566fde64ac2e5fd63575b34b20f62624afa9b95e5ab34c1025fae73a63be389",
        "deprecatedHashes": [
          "bf67ce46f64e69349a407cd7eeabbbda5a221a9d2726a23312183baedd0910a0",
          "f7bd9a60f265373add224f2eb0a8ea9ae44e30a18927da8e6da2442217cc6b16"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527878+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0250696d-3512-4dd5-a826-4dacd10c252e",
        "line": "125",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_05.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3fbc4844e7c533ddf6aa1a7932b49a6ba0c4d1075870b62729f91daa89363f2d",
        "deprecatedHashes": [
          "0f5ecc2ad547928a8a00fd140b6c4c867429be2942c1b0abb3559a28ff3c5cf5",
          "3a38deed9906e450ff6d0022585e728c64b339091949d4fe20be8054af6d1a72"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527879+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3f8d1c58-eddb-4de0-9983-bc43832ad824",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_12.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "716af4cc08073c99a16cc7ff1cbd0e8b97ead0ddbd7965ff2766f711c918c9ec",
        "deprecatedHashes": [
          "61778dca8a6921a97cede369e63720017135fe49a0e4f55e9dc39a50c02a15d7",
          "dae9d9306ed8d136d184161801471e57b837d76ae4f382372803f99f1dc25539"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52788+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "92a25978-7ea2-4fe3-a6a8-3d64dce0c715",
        "line": "119",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_12.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ba8a671742bb2584024d71e91ea1878df9e1cc1d58b8de519cdb04f8a3b7d0d5",
        "deprecatedHashes": [
          "d4fdfdfce0234cde6997abfd40d8d0e396ecd180e043b3a0301f4163b055a9e3",
          "e6ac4e9168159a9db2e7598c10fd16b8c7ffde7f3c960a6ad0d505f22cdfa4d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52788+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2f4afd2-42b0-4499-be81-6542044e306e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "71ace2b415e50f2581299e281e739650f45eb19a552a2b6be69499cc6904a572",
        "deprecatedHashes": [
          "3d9cc4a095f5414c9cdc19ea36422326809c1610af4411ff6f24fb29c77ed97a",
          "fd059f96ddcd9b1047939eed454e24cdf469662c188c7bc04afac4b23d7ab77f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527881+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b7e1b17e-374c-4a80-81f9-fdcfb17a3919",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_05.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "ae286adf33822e95ef64c8934068b3c60122c20b852ed747a1ae36206139a221",
        "deprecatedHashes": [
          "481965cfd3b403cf48c9ba8512aa68fd413c8b5253056c0709d90ab1805b6ef5",
          "55ed6d5eb560ba9389cfb8b10c42275372ecf35434ed34a5bde26fa21cac5c83"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527881+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "574d3adc-45ca-4b57-b2ec-25e8f4d71255",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_prepareStatement_05.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e3d0cabf6a624bb4536779b62a4560cfaa109b84c2f68f8a43d1db75ba137617",
        "deprecatedHashes": [
          "a4e5dfd42437a14337a0e3c472d9c3fce12c2cae2a341738a9bf3198de925d26",
          "ad2f2322aaa6ae70f60c147546ab51316d4455fda29bbbc2ddcca291f5a6fa29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527882+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "888c9a6f-a610-4c8e-bf83-634136990ef5",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_53a.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "b064495c97b16e15f95af2434422fa5a86b919c256f2459b3722ba85d6828a8c",
        "deprecatedHashes": [
          "00805d6bf5efc9ab79924f34cb7ca34dd28c6db5648de29ac88e79012fb97916",
          "7be395af6e0faf3295096b61e596892631be606bccb9fd432ed7b4756725405b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527883+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b76784ff-b1d5-4f97-8c8b-e4e69f7ae7ad",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "94131020f750bef0f2770f191d84d1f139e44df7afca812788724b06162b34b4",
        "deprecatedHashes": [
          "c028a45d4bfd68554dc9f7076d5b15c92a04d7eba0d598fc9a5f5434737a700b",
          "2b5a2d86d3e2eefc977621de780fa9aa8918784ecb04666875336c7c0f55b0e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527883+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ffb4602-d6f7-4d6f-8461-b9629867f585",
        "line": "53",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_15.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "7777de8f2824c95f5505e50c17dcd7552472c9601bfeed3fc0b625770a85ae79",
        "deprecatedHashes": [
          "f6c915f2a28a393e313d97df5a3bc2219ebcea56f4a05f7ca9b218c12c158d2a",
          "5b4d1b838790167b1d0f5bfaa27533b378283b0471fec960de28f41f6b55b53f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527884+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f957659d-52c8-4aba-8350-e9c450255c94",
        "line": "54",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_15.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a688c501fdb07d7f9000a2aa20d0f2c1f3a034372d6ad6a2a326ab620b7f3f34",
        "deprecatedHashes": [
          "d273b48464fd77c478e94c9541257878f6d293846f5597146e72d962d3aeb256",
          "8ee08f90047a70eb1b50d80a15ddcca0f070fb11195b54c722d0ffbc07e36597"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527885+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "83313551-c158-4f5e-8c6a-d4304a66f94f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5eb5a51a165b71d884ac48055fa606ea465ac1b90cfa28669a4d5c8b5cab202f",
        "deprecatedHashes": [
          "11a28558e939aa489ff1150bb7327b0699b64eddbee4854b138794102352db66",
          "e90bc695fdbc8cf1557d4d9415216f1859e706cb6eda899ae8e387b4a97fd4a0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527886+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e5223bb7-195e-4826-a927-ef059907dafb",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_09.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f757fc4066620c79b1c76be4a5ce821f4a696316493296c911570abcf70d4f14",
        "deprecatedHashes": [
          "738b7ee1ae3feccecb030c05f775c3a2e29cfa8689fe4ea9f41138eeb7417393",
          "bc82f068245c937a7cbe7584e84340d5227041e4d9ea379a511ebee2583059e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527886+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c7cbbb5c-81f3-49fd-af3e-76bce04fd541",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_09.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "6e43e8fe3dbc39bbdc67d5960a331e2f838ab98a440c9aba7debb2b314cb4723",
        "deprecatedHashes": [
          "be4eb5f03b723be0177f55427328af94c66c3615540fec8cd7e099e964940ed0",
          "bd22c9e85a89fa5fd88b92af7ab928b213a11fd4668d03be535d35a77476f14e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527887+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "06b2fe32-101b-43b8-898d-7a34fb20ea2c",
        "line": "45",
        "column": "43",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_53d.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "deb53057f26ac4ac6664ac500c63eaa1837f28ea1b95f90215012a963fe5211c",
        "deprecatedHashes": [
          "5168d22ce92deed7d0883d2b9b74653e47a63d5748429dec0fd4b539315706c1",
          "7c3b9586ac7411173eb51a28900276707819f4ff432f2956e98a031a4975e5be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527888+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "16dbe094-62b2-49f9-9b7e-eee5f88d397c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5efc0bebeb44681dd270e9fc47489583b9a6c0cf89e68b1796c6cb30826809be",
        "deprecatedHashes": [
          "00bdca639d833bd874b838bdb6d56bca1c9520573c320e55f1b5d8f0ba718f27",
          "083099fbc10e433de0c0edabfbdc0fffdf68df58498d84be996ed517862e5d1d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527888+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c91100f7-8e47-4b7c-a12a-f60160dab9da",
        "line": "56",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_21.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "52d39719518e08d0642b8427a4da9a9b16059d5900753554ec7d22160a56b291",
        "deprecatedHashes": [
          "cffabafc379fda619cd7953a8ee4fd35e4677bb321f96dc7677934f0b07880d7",
          "0df38b99a018fe684eaf3fda74f87bc5e78e21ab11883e318131aeb6c7f21c4d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527889+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bc1aee41-e34d-4386-9c5d-14ded974e533",
        "line": "57",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeUpdate_21.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "0a099848d5cbea6a62dba1ea72d64f173988f298b9a2cf08aa1de26b5e16f379",
        "deprecatedHashes": [
          "52a3d95fd8df87e2e79a613a0e585748e5f84798b6580768254c0b2a84c1a214",
          "bf91f2e5fed4e150f9ac880e0735c84d87d86a113c31c5d5e4f1f10bf69b6278"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52789+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "325c1511-9e21-480f-9bc8-65e8cc98bb16",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ee44264fe82df4c840daf87711fc2f70633733f9ebc9c535c99c5a3e58efe9f0",
        "deprecatedHashes": [
          "28c4dcbbb302034eac8feacc39281d1e7ca2c325014e287dbb2fc5e0ec305e9c",
          "14b6b8fcb0b45c93944b4c82c05a99d6a1e8866f45cafcb1b5f570baa3769060"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527891+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e29c11bc-440a-4826-b6a1-79204e0b1cee",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_09.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "172bed876d501ba5ecdecb1565f2fedfc67f6e366c506a784fe1de6502a0b213",
        "deprecatedHashes": [
          "d53fe67c3610064ff15c25210c1baea4282620639ee1ce4f8818642e8635bd93",
          "5523246d6cbd99bfabd033a8279b9010d16619bdfc850839cd5363d5ae08e3bd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527891+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0c73f820-ecf6-49dd-a6f1-29e423884a28",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "fc738653c5ee0366faa3c279e3a14443195822c19f07d687f955ff290f95ecf5",
        "deprecatedHashes": [
          "66cfb996c608c50dd624e8ec028eb7062ad47f550439236cdd69f6e5ed300c8d",
          "f339ff133d3bfa0776fc1b95522f3151c9a0214e1a3ef103750b4711f81cb829"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527892+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cfa0d01e-3adf-4ac6-a305-fb869358f5bb",
        "line": "108",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_04.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "eba7ec07c1daad431b10ef8b6e23216ef44cbd57fb7ec0999a06419893543071",
        "deprecatedHashes": [
          "c60f4eb51827a0bbbacf22bc8b893c6e6aac7a3498145320b2757f19799dade1",
          "313856679a5c327e37ee59920b56e094df1c3ed71130019c08bd57386a4aa3f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527892+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e44af098-5c2c-458a-ad78-089268956994",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_04.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "e709f417d2e3665c5a3c64dbeacd721df5e7d81801dcaa2ad77dbcc3b8b000cf",
        "deprecatedHashes": [
          "43174e539279edc76f456cbe34a6fe4b12372114ea3ced766f2d6a65806d2a00",
          "40971475e511a7494cbb255e1b2d92500988e42b625b3f44fefcb5857e63385e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527893+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "30a1e74c-5490-4df4-acbd-66383b7b96a9",
        "line": "43",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_72b.java",
        "code": "users (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a1c6cde7852efb0aace7ebe6d627184b974889053413ceaa8b8d75eb341368b5",
        "deprecatedHashes": [
          "46ed81cf3e8c0a14077700b994447034cf1b4505775db0908e2031d73c5b4341",
          "ca95ef73d81a1e9c6860e64be254122600b2fbbff087e085c78d4483038705b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527894+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "71b504b1-80eb-4330-9695-10b34d8bcc1f",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_10.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "83bebcd525a589f04ba63f167a7f160d7f6ee525eabde5c873b0d98d8f889a82",
        "deprecatedHashes": [
          "515d655ca49410400726bd095ffbc362a2f0ece491b841b628fd7d1925712945",
          "93edebf7426916c38149d9870c63a59d39b43dac4d1c8a25190a4066ba9a26d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527895+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d506da6b-073e-4845-9e66-87a1f2ee4c43",
        "line": "99",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_prepareStatement_10.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "723d6b0e8d6aec0da2d5b4268ec0f236f45a07003f9115ecdf7072056276d833",
        "deprecatedHashes": [
          "944361e518f202abd27ae6ab82d4971f925c13f8c9eca1dae67351f6af0a764c",
          "a218f3f82ba6fd2e78ad92def3880721056d8c78cd48624548068551ca88018c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527896+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "06152dcd-e9e4-4832-b873-beaf4f81a347",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "ba289601b096b89a18f38f9ec89b1ebff4ed94e52a3a098caf2e3bf4423e3bb3",
        "deprecatedHashes": [
          "5a8b04a13a60db4a212431d2dcef6155b25d698d2160eb542a5373d584e540ec",
          "37e72d5a35fdda29722880326db5768532dab2035c8b094ef2465053f21cf4d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527896+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f94ca484-83d6-4455-a957-8665a8e33ae2",
        "line": "123",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a19b15eb1c48f4dfbebf45e93fd5cdfa223eadd77458cdf8ec5f74d88fe668de",
        "deprecatedHashes": [
          "49c704a88846d2e2917fdd2b1fae3edc5c5a793a774bbe23e05daef9e6575b09",
          "c015d38eca60b2c6c805fdc672471a69ba531f5c3199b3888ee4c19943e64464"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527897+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5289bc33-ec80-4106-ae63-4a716769622c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "09c554e92baebf1a3a4e3ea63f6a7ea0d865182232fbfde771bbf96bfcd7d665",
        "deprecatedHashes": [
          "bb95b8f9f16baba97581b2214c7e875e1568a06f2909242df757513bdcf5d68b",
          "c957b89c8a9e63686e56be7c9dee21600a0337c26cd82d152d211f01b77eeb6e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527898+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "35a4d9b1-8881-434a-bc5d-ccec89df91de",
        "line": "123",
        "column": "59",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "49b68dd0295ff6a6e243bf2b75dbe0b17a7f231a38534d4ff8ff80da8063a3a2",
        "deprecatedHashes": [
          "210c1d8324a8843599a47fc57ccce8d0b0645d16c2ad708aeac23d06c70fafd3",
          "f37eb3c6af8e354a5d1998ebf43f090da8a9256338a270da0a7d95dd1f629fdd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527899+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a683603-3d9a-4290-a378-921baf2eebe2",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "61db9fc898687a6f0f4454740b69df404ce1e938150af4689b0a478ca95c8398",
        "deprecatedHashes": [
          "8e2839e0dd30faed01aadc6aa4d7e0589dc6f4496483627247d18cdebdcca9c2",
          "afd5bb372ba06be523d8f24050f3a67082eaa8caf6c875e0b68bbe18d8323558"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527899+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b059e408-5369-4925-9cce-a32c2d9fec60",
        "line": "53",
        "column": "65",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_01.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "37db6df4ce2cb764646556422540b4c970d8941e70cc14fee4b238ae98a95b17",
        "deprecatedHashes": [
          "8ff3745de3f8da36ba0f556998baf97ac40c023b8726d13f3e14cfe1c82ae48d",
          "5a21cb6ec94e51bb7fa01d17eea2942ebaf024d7d1962b47d04849bd7f460e34"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5279+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e1ab78f9-f164-4f55-8d61-cd3f9db4126d",
        "line": "54",
        "column": "46",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_01.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "105d2b0f7e64373f81dce7e39b2fd6cfebffa7e347476f11e8a1501c37eafdf0",
        "deprecatedHashes": [
          "8720d0552a167a4cfc86d3c9468969f27ceea95f646d3b73cfa9d41340066cb2",
          "faf961d00a409892cf5731f5ef17a5f107477070baccfdf5d3e46be99a185c57"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527901+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f095c8fd-fd3b-4225-8d8d-b0fcb6632c33",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_01.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "60264ce72b6243655bc0689e68bec50c50011c6e94c4db11442b70052a573ef4",
        "deprecatedHashes": [
          "7b2a8250538208f5a5889daad5d531e22e5de1de2213f5e99718ea47d74fdff6",
          "ed4213eea2baa864cac91d090c038eea9fe33fb4ba132d4a08d0ea02743b5dd4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527901+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5e983830-b5cf-46ba-9c8e-6fec52a6b50e",
        "line": "96",
        "column": "51",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_01.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "f4ce17c0abb6780556ced0e340bd7feb8a0a80cc87ada369065b440aefa970f1",
        "deprecatedHashes": [
          "bcb8995c75cfdb958fe60d1d53a35636bbfd0e8337408f6c2f4aaaa030d9086f",
          "a3613ffa35fa70bcb6abc220f074e708c70afa4dc8a214a73029cd08105acd88"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527902+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "575aa07a-c177-4589-a5df-6b2f916e2d58",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeQuery_01.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "4337108f37aa721222d2af8ecab380d60f2d6a0ed36160a886b74fa52912683e",
        "deprecatedHashes": [
          "eacac1d68240488a28cf8ceb0c899c38ca53244b5dae08d7891729dac2d9789c",
          "e193eb843afdea62963abe6e8cd6ed7b0b6a83f889d971ec9b46789fb41a57fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527903+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fda9a00e-87df-41e1-9e3e-b99322bddceb",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7304d26dc30b77990551070c0949689db53710ce274bd081dbb0e38700c86360",
        "deprecatedHashes": [
          "c58fdb6abad34a569c9458c060a3143da7bfba5246c2a8c03063afbb58bdd478",
          "e9485c208bfe8dd5aba6c85610a544d16b480fa95143a83fd68b1a4ab1a325b8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527904+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7ef198a-e5eb-4293-9e07-c38f084b3ac4",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_02.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "63a44555273db49a208014af74670979a9ccd7948e50fb0cc0413eea1259d190",
        "deprecatedHashes": [
          "f79a1fa490ce38d58e359282ce7295957ef297ee8648eb511a8b61a6167d9f47",
          "ef2d635cc2cb22ceac2a25f09d80004ede49592f5ce3262bb515ee2cbcc8c071"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527904+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f723d5e3-77f9-4914-913e-ea06dbaa00df",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_02.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "a0011e943b1290f9ef23e74700f8d027f51f00427b39fdcd02a52b0324df9b4f",
        "deprecatedHashes": [
          "8717602a845fefaad9c8075cd1aef606022b52ac6e2dcec040a220fe277d2c6b",
          "a31d4251e4760e4b6179fa019440496a240ad64bff63d307c2e2a01a378694cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527905+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6e3f788f-f419-47c2-8111-a3291261faf1",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_31.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "75d49d018c033349bf8149ca41605c73540817be63657717dab1d6e4d85d76fd",
        "deprecatedHashes": [
          "4c571458c4f0160c0a00b6ac39b0e807fcf9605af1ffbb6049263334cc55885b",
          "a893dbd1f787ad56cfa628a278d0f4d8c2d85e4dab5cf887603d67ea56ce2f43"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527906+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "56dee90a-a241-4e75-9239-5457b68441c9",
        "line": "55",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_31.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3db0d1734f5c8374402ad66a2df4bb49f718f0e5cef6d6693fbfc5aeaef1285a",
        "deprecatedHashes": [
          "7c224b866c00ef1299a59d7ab91a2b013fbdefdc8e4b7877ca591ea81678ab49",
          "ae6e97db8df80567bf2b125f0ca0600847267fcc85267d46143f08f4dd7465c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527906+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7e52bcbd-fead-48d2-85ef-c76cd517d9f8",
        "line": "56",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_31.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "3ce1afebd99e6c2d21ebf38bbc0648727cb020861d2168e8c9fb547d15343b6f",
        "deprecatedHashes": [
          "356084ae5f407c3b9b72b9110c1ae3092b08eca78311eeca60a32d13a5e414b0",
          "a85d0b41ddf4614979e4b669bc3a0bffbbcf0ae43003c7c44b2aca3f529241c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527908+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "522e877b-4638-43a1-8bdc-81c0d7a5ed75",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7daa98198dbf2a9dcbc8a98118ff5716560f96643b12c917ac834523fd439d4c",
        "deprecatedHashes": [
          "93127f8b1efb6b6c97eccec1b0d7fcaafbf45ec1ab444fa9479318638b95a351",
          "bd4bfeb28cd543175a08b08808b75e31afb2107855e806b08f5279a499d3685e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527909+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "412fe232-4f5e-4d01-8777-eb4d952e9a2d",
        "line": "127",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_15.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5eeb0aa752dbba5142c7203035d9352426a852997e785cd673f14de1f15e55b6",
        "deprecatedHashes": [
          "56c757abd474343bf925bbcc5f1b18e8095b0cc03f77ce7ac56c1aaea8b3083c",
          "8a8550c5206112a712caeda6067503effc1808b9fc9a679fe301f4da0c52635f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52791+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ccc62f07-7906-4fd7-9ab7-9534ce380415",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e50267a6cb2f64af3d1edd405a2dbdae8a9c4bfc8e0c0b80cfb4cd62349b16a9",
        "deprecatedHashes": [
          "85281df415bd0d9ee2ae967f4e20e56d958068fd82f8819039aad51fdea8f06d",
          "a26b2a77a07e32b78fd6ff76518c490eb8b77989ffc55199453da3712e280035"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52791+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c082322-3ebc-496d-93f9-9b814af78a3d",
        "line": "117",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4998e875a115c4f3ef80da38018ec21b6a7d88931ce227b0090ffd02a7c015b9",
        "deprecatedHashes": [
          "3e639abdb0f45e724439453a10e1bcba7715bbc7f41fcc583ba8b1d35185b9ea",
          "9acc9ae610e0a12a3a1c2c8875d76151b2c63dc7d4d3031e2a046ab912fef0c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527912+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dfe2753f-2a3d-4a27-b4ee-28583b58ecd6",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_21.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "5929ca02dbab3875c5d3c6f783d8fcb7da650d0db9765c7a5cce309e868bccb9",
        "deprecatedHashes": [
          "1e7d6b5fe90e5f851f6ee294eab44156e1e7f4aef1a59c411bca930aefd7017c",
          "675eaa7d536d84f97af0cd17f5ca543374ed515bf61cf7f0f871fa58d586f2c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527912+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4f70869c-f7c4-4fc5-a7da-02b450f4aa9c",
        "line": "130",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_21.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "920d1218e31c9fc13be07d248e2cda462771152ff7b6501f12a90844d77dd39e",
        "deprecatedHashes": [
          "dd6ee9b909c9401f88353bb3498424edb7e3a27aed3956f670fe4ebafe320097",
          "86ebf9b73e289501bee656bc927bdec9724d42bdfd9f3dd97cc0ee269117a5e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527913+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9a8c091b-0a15-424c-9b0e-9ea58ddc6074",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_02.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d96b1328f78020e35cab2bd4ae3704abc8eaadc3dc7bffff919e4ec543b46205",
        "deprecatedHashes": [
          "ec46e860662e44dbc33e8b7e9f8864a90ed2da4908540646f446d0163f59f57d",
          "b805fa27884424b83329b040b702dc97c7c3d4226a8891b5ed22953e3e25ca5d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527914+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0851b68e-a689-46fa-9a0d-d2b1d4eb60a1",
        "line": "124",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_02.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5d3d3038ac1063ea4403a456c7c2ac61c4c1de0c1e2ab0acf78f6216996b8e15",
        "deprecatedHashes": [
          "6f362fc860dec9d7abb95671f5b351af96c900729976618c8b9be72ff63ec141",
          "2799e3541133d8a569ea6d15999196c442151304f6c6b068ecba7c3b5e5178a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527914+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3d72430-9ef2-41b8-88df-84cfe34e1e33",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "7d97e498e9b1e2efc4e6cded3ce70b72a76c48cdd35380fa9a14629000655b7b",
        "deprecatedHashes": [
          "621ee86729764d313326e2b9e152f3421eb435f0a2162045655950e869b5fb9c",
          "1e4555d932cdd52d4a54712882f45c943dcd4c9e05c77c57ba3001f06c66f3e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527915+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "98b88edd-4b30-4076-ab4a-a4fad70258bb",
        "line": "58",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_04.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "4a4e5c826f73248783d0e01a9358df1bfdd64b38a937e95e0a0290dac17cf905",
        "deprecatedHashes": [
          "1cccb07df9235e66ce080df808bcc1ba1eecf7a6d469408635876a52a8ebd04b",
          "acf7b6f15bdda379631830c217ea2b22cc1092ff877ef1a331200481f833bb70"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527915+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d5edbda-87bd-41df-a9ab-7d880cb8917b",
        "line": "59",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_04.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "03d45569f9bd3815c27d7d597be27f0edc34731663393ee6b431f1dd5191f824",
        "deprecatedHashes": [
          "3e7ff85b921a8067195d2fcc863f5623fdb10f9a57881c7cc144baf41c918072",
          "0a3ef28671360913e188c39ce2ad00466d6a0d4b087ad9e16bca2f85d22573fc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527917+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4513f699-21b1-4641-a532-f43d0bd2ecbf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "e87a34b98738ffa47f808c10c8074b8fa78a04f5b1778befe2b80d0b2f368492",
        "deprecatedHashes": [
          "853f21b49b9ed97a410963e6e63866c48fd7f8fe8eb4216511c72b8707c6c05a",
          "78de1be1f42c3857673c42dfeb4b7f10cadfa27d64dcd0b4f3b3d02630b269c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527918+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fbb59892-7607-44a2-aeda-79625ae88b1c",
        "line": "113",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_04.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "dc825652efb5362ce53cdb0630315c55d4c40b6bb21b5e2525c4ffffe65c21f7",
        "deprecatedHashes": [
          "485b5793a6d398ffead20f947d581a12636a8135f940263e2e296a953cc5b0c6",
          "a96ec7858d7f75801fa12da82a758a0d8a003f0024c3a067b0cc4c71c69a6742"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527918+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "34db677b-ece7-4b32-94eb-48d718a2e1e4",
        "line": "57",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_75b.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a6c427a195eb3057544903cc911ede9fe4c636ff3a16f536e71597c6b30b25c8",
        "deprecatedHashes": [
          "8a226521f87ef6f1347d6c3c84e8c0fcb99ad9a9fe09de8f3db6466a3fec6c11",
          "816ecbc918412b5994420756f424b4de61a72a23f71b2c2e7b03bc556ba00713"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527919+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3221841-cd8a-4e61-bea8-84adf69fcbac",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_06.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4b1e350bd0fe300cf344cbd91f709f65ea0f86e9cadae1b6ad7c2cf01f3c22a0",
        "deprecatedHashes": [
          "3b087ff5c4fcab0ae90aa3cda6c752bc2b33810cf36301aa41a918d1f058c0e8",
          "d20b4345ab45c35fc2864b7dc8303e52832a8840db0149f533b93d8a34980b44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527919+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e670f53d-12c2-4082-a0f8-64971c816961",
        "line": "56",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_06.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3f03c072658876aadb1405f2ac5cac05303ed42c7784ed719bca4523a19db35b",
        "deprecatedHashes": [
          "0890568d9436be1938aac6beebea9eef71a914ac4a2a2ac0bb6a46365d029385",
          "34686db2032668a396cb34348389cc6b7c8362b6386e91f84c64b3f40403b444"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52792+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7bfd1dbb-9d44-4c3b-b917-60ed7b8776f4",
        "line": "57",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_execute_06.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "c0b8126978e3fc79791723b3366bdad2f7482f6e9f29bba1e3b0992145b36272",
        "deprecatedHashes": [
          "27b94b62c0fef4e34344af5d794f0ee78cd147fffa1901936aac62dc94d80a33",
          "6d0f497c3a575d345f756538dfecce524880c7b7886648336955ad39b09c64e0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527921+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "75334b7d-2c60-4af9-8897-56cfa01e6f54",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "d2b1ca5caaabc8c73562ff174103ecb4a5cdfce67ece34177485fd48b0848252",
        "deprecatedHashes": [
          "7def2f3a66a60846e831de68dde549d6f7b34ed98268e99f82faf66f4b4370eb",
          "195614085d5257b0da92152547453d15fc7d1d8f6bbd4f37370f12057180a979"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527922+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "87a8aea9-da5f-49f1-a9ba-7a8d8d648a49",
        "line": "106",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_executeBatch_09.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "8e677ad40103dcec4a0b261df5dfc3283faf0871a61e6668ebac099fc8c80cb8",
        "deprecatedHashes": [
          "651ee4933a835a443cca5305b43fa04e3e0bd7ca04cc10e59770948da64c248b",
          "a3a857c1a87eca99c34f5c59e7244ab50c46f55202aa3a9a37f8031fbcbdb85d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527923+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2df35ae1-d5b1-4ee6-b856-e9c56981c23c",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_05.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "46be539af23fa58de1649b7cb4ddae0c8d63b8e2e8962eea10998cb3ae732519",
        "deprecatedHashes": [
          "33036aaa6e7fdc81dc0196763e2ff79d5da834a9d76ea59c29b7d0dfc39c20d2",
          "9a4a632bde1c5fabc3176ae9b754bdde722bd3719d8d62b56dd6e65a34da7b59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527923+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "019796f5-e749-4d0b-8263-81fb97ef7fed",
        "line": "131",
        "column": "47",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_05.java",
        "code": "sqlStatement.addBatch(\"update users set hitcount=hitcount+1 where name='\" + names[i] + \"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "3c7aa5675f4fd59f0d271149eb3e400c05bb20259b24cb6931e0c3d62ab4fe37",
        "deprecatedHashes": [
          "65ca81a5659588054d13850d6eb43eb88916c93149640c881b0fcf23bd766181",
          "5fe5fd39af93dda39fdfd14bcbe839f627edfab83cb18f86d8761292509ad282"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527924+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dd6ddb50-a2e3-4783-9833-4c928b04c6af",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_11.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "aaeb34e06bffb7b8e8b75910c4d6a7643488ece937eaa3fefd2129d43ec1e6d9",
        "deprecatedHashes": [
          "c0f776e5ab07516d13890305c01b08ef269bb63a16927dcc10c728eb135fb65c",
          "a5368ec5f8771005376f274e3f8f282b206d111989311af55f956480f6eeef6c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527924+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b8081d6f-f6ea-400b-b72f-e0bf13564d4e",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_11.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "b229e65364706391c2e7c60d0b6651a47393213d9e6902d6350e0ea72832a295",
        "deprecatedHashes": [
          "c5ec945c8ff8b2718dca761b6575f7a42f3239ca591816ee6bd9a5e3dd46b61c",
          "0dcf4de198f1be546d9bcdd51485c0086940016ddf2a35ae15638724efaa2f62"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527925+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c5cffef2-1f82-4995-9d19-57c673af0d1a",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_11.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "8bb5e417bee8b971a2986a1bf8041c5c07558033cc242cace9d6058d0931a50d",
        "deprecatedHashes": [
          "6b94240dbaedf8b9b9570d52c57b27c97ff18ff8cf6c99d2499a460d41ae22bd",
          "6c57ac97f75e42d33c0b4db05605b5fc6389a722d898d297646d02c757669c27"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527925+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7da25b15-b7f5-4559-925f-fe102604b7a8",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_11.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "0a9ccf7c0a3c56651176db52fb6d9511e743be7b3dd366e9e9cf901f34af222d",
        "deprecatedHashes": [
          "bd64256f320f84adf4cbae96ca7dd167a1db6c2acfb1ac028da69977756818cf",
          "a40ab2dd0c76697f1ccfaf86b10f9cc1026f9838ed018e409b456a0be88bc374"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527926+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17d67e61-7fc3-4021-9e14-4517fe8ec220",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_04.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "cff9b711d288188e1008f5a9d5d07c8e1543b2585eb3a5c80fe5abcfcbf0df66",
        "deprecatedHashes": [
          "52dd079b3db3af1de81bf333613d17d76be52c805c57a12b70c5910ecd2bbeca",
          "77fb797b5d55fed698a01967b7b66bce47c8e017aae22bab5e39797d2e787598"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527927+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6e14d743-565b-42b8-a8b7-169c82fa1653",
        "line": "107",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__console_readLine_execute_04.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "cfdf6409e57059b9fd5ee778a58ef1595ede8ef31020e0c6d26ab898928936e2",
        "deprecatedHashes": [
          "c44a1757e678699240ee834da5b5711d05a8eb375b163a00236c5b77fa24326c",
          "8e0f64a3b576eb01dd2dd2d17bed70ecc8531f25de1cf7d5d093aa103292435b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527928+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f113c972-138a-4871-b31e-7eef67a2cac7",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "77583609da846b3a7b39575188bdb5782c28144850827e9f9054785e54f22527",
        "deprecatedHashes": [
          "bd23ba3a16b239b53aa11289bfe85ddcb701f1d8dcd20e11017fa5adaee8893d",
          "cdf8354485dae2823fc46f83fad03c13d52d8d9ad994ddfcb912d013914cedeb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527928+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "910b60e8-bd61-41e6-8914-0902514fe310",
        "line": "121",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_15.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bcc0beef76453f496f61bf57a370f545d4723a62d158313f737b5bd5018ef2ba",
        "deprecatedHashes": [
          "07dc5713015cede96233174f1fd32908b53e0b9aad7b282269df34dd796aa577",
          "6b05aef7aee329daaf0d2d74146498cf977b8c0131bd0d66adab1f69721ba0dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527929+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "28f523fe-01bb-44f9-a5ee-22b6b39f4bcf",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_15.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "609fbc4340e430a1eb06e8629ad4486469d66033bc71fd36d9cdf3434b41267c",
        "deprecatedHashes": [
          "20e728c9ca6d8ba4818a60e7ab10d4a1397a1f2d2ee92ac735e3f1790898064f",
          "f6c2857a4706711182192e658e113a8e9c25f400a073e448cf2f8b20ee8396ed"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52793+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "86fa3f62-bad8-4830-ac11-7e37fd03e6c0",
        "line": "122",
        "column": "55",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_15.java",
        "code": "resultSet = sqlStatement.executeQuery(\"select * from users where name='\"+data+\"'\");",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "a6a53697f8226731ef00c6f4a032f3cf25e49de674da148848f33eebad5a2638",
        "deprecatedHashes": [
          "3181ae9493120ba40b8ba4ecebf91d775ce1925a996a1b9654ca504cae7fe666",
          "c15ccb67edd1d9c8d974a5fcae968910b5d44a042459925324018d0017c92dcc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527931+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "13437041-f908-46ba-beb8-3fe37225559e",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_15.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "dfd62d68942e5844b00e59567a3b999056ad0d695d37d8d5d93febeb101c549c",
        "deprecatedHashes": [
          "bf8149bbbc5c77dfb99788f78425a665731777006e642c2296f310ecdac46eeb",
          "68df6f0ab7056d569658b7eecdc946f7d3214492a20a509ddb23b55e22b5c25a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527932+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d815915-a501-4dd6-9454-fe228bf57bd9",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_09.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "6547939e86519099beb3a0ee56fbbb7698e20a2cae1e39551be051d9c391bae5",
        "deprecatedHashes": [
          "f6df01c26a5f46929628c15bcadc56e7babb6b8e8b755035c891cc9f19ca2c19",
          "fb863c8ad579012ea4b873e9f3116d4bbaffd9fdc591aebb8aaa3cc949852b4a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527932+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a5df43b-3194-4cb8-b6f8-29e804e8db76",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_09.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "5d6d4430f257166c7cdc5b9aa8f38d555f60f5075bb6af1a61730ee033fdcbef",
        "deprecatedHashes": [
          "0175b51156527ec205ce40c65f5550ff22ededae90b4e5bf112917ab8e433010",
          "8cbd03b3c7ab0a15538b8bb2b140688659353f82be03a4e11a1ce50a0c3a4c79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527933+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bbf1539a-ce66-4c1d-aff4-62e331171b59",
        "line": "13",
        "column": "60",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_09.java",
        "code": "executeQuery(), which could result in SQL Injection",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "314dd90a5d575e7bc22a3906c8b233f0c2dcf824445d8a4df178d25ea3ac7dee",
        "deprecatedHashes": [
          "155121495a41b356a6e65e2c0738378f2ccf084dbf53a81616eeb6d1c3b376d9",
          "91e8fe310fef8ea4a6690f1efefdb1da2760da56e3ca70bc293c7a59a137c96e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527933+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "374c86c8-561d-4122-b9a8-b74f92ed8ecf",
        "line": "52",
        "column": "49",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeQuery_09.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-140",
        "vulnHash": "5d86b68f4dd3c2450f3886fe230ec1e964842aeda347141f0cc2ca75a2fb6b7d",
        "deprecatedHashes": [
          "603da0a209c391cd90fbf3f77a60cac943deb4b67849f832bb197bd4a8185ef9",
          "071101d268590746ad8128cdaf2d792df3992f4ab56ca3b08fbf543f2864c1ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527934+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "29e91a8b-ea5a-4642-a896-7070d7d87a4a",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "a09d26abc31ed059239bd36999f6188660cd87072e2a4d0dda8719b5c290bb66",
        "deprecatedHashes": [
          "2309a1c909faf86af4be24d2beaee920d25eb25a97cf0cdb4e24376a22c6999f",
          "e5563abf2a5fd0e66f0a848252b64fe4012c46d62856456ff76dbb4addcd0787"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527935+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "74dc98d7-ef14-4e52-8573-fd92cb66e025",
        "line": "64",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_08.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "fbd78d45a5c0afc0a47a6697f4c855b22928f503dcfdc3d07f134f8693737b88",
        "deprecatedHashes": [
          "5dac3e1dc3cbc9100ef55ffef8e8b37ec8c1f0fcdb5f8a916263f98a8485c974",
          "86b70e9f5dc9711c62d7577489e86b2bd01bb94fa57eced0f70812f0dd315a48"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527935+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "314dd73d-fa46-4a6e-8ce5-c7525e3f714b",
        "line": "65",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_08.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "89db1020cbd7c7be5993124787e5458bc3c467d7f37822273bd305a00aad598b",
        "deprecatedHashes": [
          "387f38d7d4f52c946dfd8be42f45bcda91dd827eb72ad99fe0021bc846fd77ab",
          "933d15b39114a561ece134067de0e88e6a546619ddb0961afe3b6635c28437dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527937+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0d58c52c-6ed2-433f-a82b-f2d2aebbd138",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "4c0d8f457a92d8c13e31b186903e87a8acc896a046667fa4b5efa936723cd9bc",
        "deprecatedHashes": [
          "fc4541f670510456cc59cf30479f3a6f9345ad4b7b6521fc1e327a070d471e98",
          "5bf712d70127bd51d43cd9cf5ceab255e8eef3588634e768bc28cdcac6d091ad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527937+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "39943e90-e25f-45b1-925d-e7a5b7cf60d0",
        "line": "130",
        "column": "62",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java",
        "code": "s (status) values ('updated') where name='\"+data+\"'\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "d8ab6d6a0f012d655ebe854359dd9403c7336c7afcdc9d1954914e93a9a37e26",
        "deprecatedHashes": [
          "0b1ba617720a55cc577cbae5d0370114cd884c0033ed1277bc84e4f2c4a86249",
          "0473a48930856eb8e6bc996ff02bd60ca992074661932ded7369a943c5abf5c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527938+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c07ec4c8-46b0-4fc1-a1ea-cce4762e207e",
        "line": "21",
        "column": "0",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_13.java",
        "code": "import javax.servlet.http.*;",
        "details": "(1/1) * Possible vulnerability detected: Web applications should not have a main method\nHaving a main method in a web application opens a door to the application logic that an attacker may never be able to reach (but watch out if one does!), but it is a sloppy practice and indicates that other problems may be present. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-96",
        "vulnHash": "68c1a54cb51a773625f88a8f91575727beb69d899ea501b4f2342d690919df1c",
        "deprecatedHashes": [
          "e9eeeb48c3bbb1f609d57131ec60882eda3f2ffe47558c7626b5ea28b4429dce",
          "59ab710e664fae0587e31539411b49c45a8638a46fe09a8e86faabe72e1b2e5d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527938+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e0d4bcf3-2733-4691-b429-e50ff1c30586",
        "line": "51",
        "column": "69",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_13.java",
        "code": "preparedStatement = connection.prepareStatement(\"select name from users where id=0\");",
        "details": "(1/1) * Possible vulnerability detected: SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-134",
        "vulnHash": "bc3bc4eb9d88cc12406032780dd103d1da25b6a88f388930f3daed8a191c6994",
        "deprecatedHashes": [
          "f0b5820ab7bdba2b05090a8a63729784559c51c3d6a2683930ff4b08382a4aa5",
          "71f177a1e8df6faad4c00aea43d86ffa69e5f667480c13285b4ded6f822c5495"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527939+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b0b73947-d763-46eb-a8f0-f9fa8e0cc3a3",
        "line": "52",
        "column": "50",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__database_executeBatch_13.java",
        "code": "resultSet = preparedStatement.executeQuery();",
        "details": "(1/2) * Possible vulnerability detected: SQL Injection With Turbine\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Turbine API provide a DSL to build query with  code. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.\n         \n(2/2) * Possible vulnerability detected: SQL Injection JDBC\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-135",
        "vulnHash": "9b180bb7f8971b1fcbfce0ebe93c7c70a739e02b09ab1f549cb080a2e5e8eeb5",
        "deprecatedHashes": [
          "5ace505edb691123d09c770353d3cfc3227da8fe202f0285877c8ce612ec95ed",
          "00faaad196ca56c9f7b83b28ed41a13aa6604531b4091c7e8bad36be6a7dbd66"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526834+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fa6826c7-b962-4ac1-9621-5bba1e525f40",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_67a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a3035a271cd2cfd5fa66a5ea25e9962b5fae4ea7486a2f6cb63be0ca0ab16a6d",
        "deprecatedHashes": [
          "de479e0b3c30e779858d1fd7967c9274735393d3e950417a55b42e978835b3d8",
          "dfaccea7c5bedb7820874a683abb1ce8ee8d60865c215c74ad9fbc6461213892"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526851+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0d2169e9-e897-4e44-b8e9-e98915a3aa1e",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_71a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "cda81c345da20c668be01cb3c5ecdd9c1dd3dc122b923576c34f2b46b0d934ed",
        "deprecatedHashes": [
          "2a456628b1e35e6a59629d8cbd5e7a6706805bdfe56ab1e278d358b57afc1e40",
          "dadf90a480d1b4e76b45a85218b24fc609ea6642a936deff6354cccdcf5b04bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526869+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3281e7c2-4745-4b3c-a0ac-2044e8412788",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_74a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "07358e3d57cfd07033f7bbacf603fc51dd1d0177cdb444d0aaed4db2d35a921f",
        "deprecatedHashes": [
          "3d9ea59d340ec0daabbc5d3c5149a2870d18073eaa18e4b86b748fce50d1a5a2",
          "96672b8694f52269bda06fc0be0fb9b27b9f06558dd046cb8cc1b08867aa97fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526885+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9a2d88d3-a9aa-4abf-976f-a61fa6929ca6",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_05.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5a2be5417ee09e2cc9b28730a448e27c44d9b03465821970af2175e731b1bc34",
        "deprecatedHashes": [
          "a23d0b82d21adc574d7c766816dade1dbedb3dacad17f910cdf9d546d84d0c9a",
          "0020e95867e43bbbd4b0626364d9cf8a48ec75f257f380f3a016dda0bbef4ce6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52689+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0954e3e7-64f3-4ba0-94a2-3b2724386937",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_73a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "fc191cdcb08472ccd2ef838dcb1a5dd70e40f2f65c07d05f33e7a3b87c27585a",
        "deprecatedHashes": [
          "3c350129bffa95136c0374e532337d0768a2cda774fa575c995f7636b02a4d11",
          "59fe8c57de2f2596a920cc69d8f7f40fe6d021ca89f4dc6da12c1998b2f87d1f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526893+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8ac29604-d7a4-486b-b14e-71917baab784",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_02.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "24148ea5a67042f65ee7d68b042dd628873b0113ebecfce9f3ac761f5476f0d3",
        "deprecatedHashes": [
          "437e26dcc75a3f99c9a1d68904f79bf4d45131724b0065702998401ae3b9aab9",
          "e2820ebd7e48bd769476c29c1bbe8967bd3231767e93f0a65118a333404c1720"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526914+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d3015afa-9aff-4cbe-84f3-71336eba3c13",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_09.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d4aee710384509f9795549292a95c727c673c2f77f40a08aff4bb4147e355eed",
        "deprecatedHashes": [
          "6daa2c61f3146a40972ac4aa5f533ec7ef6a63564abe9bbd417c170018c0e74c",
          "cb7a71ddee182530804c72f52d338475f1600aa93fe0c8d141d0d52bbe94a7ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52692+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "125f6eb5-4ad6-4aa3-a273-5c8169250716",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_81a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "db5615945c62ee50a677141855b94e1485c54aa73737df2fec4f0f67df46577f",
        "deprecatedHashes": [
          "ad2b5fa843f59925b5ae370b88a49c593ca8b00f7a97d1256b49684441300651",
          "690b00c12a1d998fa4ed6d7f8bb87176c121a95a0ff489c265e7fe2e93645bb2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526926+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8738eda3-2b1e-4df3-8884-3d6b6e0a2d2e",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_10.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1f80eb2be32bcfd573e21bdd5ebbc7490f7429896c01629cef11656ac3fa36af",
        "deprecatedHashes": [
          "21f3787118e70e1651ca39a05981936727f7f446e01d244094cbf92131d063ef",
          "5cca780a03ff2548f37e6669f1c8135638ee5a4217b5ab6d5cc0785587dcef6e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526933+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "75cfb3b0-24d5-4878-8561-fb81117fc071",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_04.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "33b9820eb0a309fa6082617bc74242999afda7cf67d9c50dcf4695a855ad7921",
        "deprecatedHashes": [
          "ffe45ee2a596b47d6241e902a90a01ff30c9a4d3cbecf8e901992e44a621c3e3",
          "1da57e75ad7774abb7ef4f9cea48216b877bda0990b926fb48b4486dc7b6afc6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526935+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cebdf6a5-bf23-4703-a010-ae960a9d435f",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_22a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4f3b4df732d138252da5667e159f70e836daf5e0b2067f5dcfd0dffa7e3b1d7e",
        "deprecatedHashes": [
          "1d145c5a27a8628f1e26e85185db228074ab036e158dbd5aa6c16bead02427cd",
          "bc70840423260b0bae803f344c00bf3a9745944bcb61c0095b8ae95f61b01331"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526978+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a307489-f869-463a-bce4-b43688e8de2f",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_52a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "abda7f04beecb5a0bd76f6f46cb0a4bc4c6eae37cd7382b824ed2c2f6945271e",
        "deprecatedHashes": [
          "7b27985e2c3d834d55cf3e6d0a356bfbc62a053569ba51132fe57043aaf8bbf5",
          "4fa2f574c3706d0203aefedd4b3e936e7fdff78d654858f14b820953928859ce"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526981+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "dd5f70b8-f0bb-4ff9-af68-8c1f0da12380",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_75a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "3101343c339e9dddda316877d7bc54b28cbdcd69f0617c6d1c9446f08e090a8d",
        "deprecatedHashes": [
          "a79a00e8db8289707af541e0897c03f9b7a14e09f9049a5fd590fe722413e571",
          "307a5e4d8a73cde3ccd2c031e41a94fdd5e165d2470083742dbf063bdad410b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526983+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cabdd62c-ebe7-41c4-8e75-866230f40e5c",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_53a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ad181570f7b3377657466fe512f92a88a59e0eed9c9bcb30f160bbc0486fe66c",
        "deprecatedHashes": [
          "dd40afd16baaa5277ac4a77e49a058d3164a3691788636616d657e611a982019",
          "c542b497593bf4f5aa4caad944c405fc805f70a253218e74c563ae560c4dc754"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526987+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "edb131d6-0051-4b85-963e-476ebfbb5bf0",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_53a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5b8731460f6cf85bd5431e682def5b1cc39b7218b09e147fdf388f34b9ad4e7b",
        "deprecatedHashes": [
          "00d6f48d6d5abdd5dc20fbfd016588d1529b6d6a2913b9b3193c73bb992a3550",
          "4a05fcba41b32237a80ab4ece78d11f6c9f453de73c2939c94c31dbd377893da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.526993+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b6a317e-1e7c-44dd-8d47-cc0da4956a88",
        "line": "106",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_41.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2e8090e913f18909d1625f47de85f37c1d1799795ba618ffad11ac94f0daa632",
        "deprecatedHashes": [
          "8f20431660057707e61666654bfcb342592b61dbea13171681fba38384798ca2",
          "4fddd79c1a944123126665d346bce144da9551c9b87fb52a9a5a7eb689c25d67"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527002+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "921b4134-e79e-4a58-8b62-2d4f087a6d10",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_52a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c9936eed0a613f84990c9b023fadeec78060510989be553b59f9e48e788d140a",
        "deprecatedHashes": [
          "84e324be7ea16f0603f3626b9db5d2e58f3187447e8183060f56691a7162689a",
          "86e6364ce566d289d5458424177b9cb54901b4fdf55f7fc8d732cfff96c06f62"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527007+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "28d97536-11e2-4e4c-bbf1-7eff931c6aff",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_81a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "fa6ee0d8ec49ac2dd5bf27844e7cc1ba026a261daf4e50c02e5eb58cef4fc293",
        "deprecatedHashes": [
          "43e0c5cde65f7da037de69be92e3a2f9d21a38bdcf9d4908f1acd30c695e5542",
          "5d829e0d637aa5fe41cf641967d1b404d3600643164b7d9082a255df89028537"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527014+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "15ccd11f-8ef1-4f60-b26a-5f91dd7bb3c0",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_67a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "164bdd5b0df98ca331e48ee162b066a3509cbe07730e774dda03320e7ef2e0ee",
        "deprecatedHashes": [
          "735d6758be94a604deeae2dfa7c8e8e011273a0b95103bd31f32d8835d94a3f3",
          "2c0dfba8afda4533ed8193381abf13707769e793afa874c67c696cb923fac137"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527019+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b8d5dda-6df2-489b-a6f8-cd916d191123",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_11.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "506908b124a00ae8c6ce52b28deca2e67dfa8957f8979af11a676d769fcd2ad1",
        "deprecatedHashes": [
          "498b207f60a836bbad5cfa5b1ecd2cab26e1c2bfe2e7eb3cd6a7cac8633ef3bd",
          "93eb363b605c0ede2b1b3b55315b0a587850abeebd3523c59762415d3b23f415"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52705+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6998265b-44d4-4487-a49d-61279af3ed08",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_51a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5587a9144d30dfb766b7ab91b1d7894c34f2823d9a80c41aa97da5314cd5790f",
        "deprecatedHashes": [
          "a826f64a61045864f61c7a486545f034b89a07cd1b55190199cbd402d27ca3d0",
          "246f9ab95b3c60de245c32e6ce7cede002b77fedbee52d4db9a479910a41a613"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527055+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5c99ecf3-b042-4499-9b0a-ffebb8f07c68",
        "line": "99",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_41.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e1b0b204152ee19a8e8fe15a6f3667637157a703bcfc70357f1e338e95e3cccf",
        "deprecatedHashes": [
          "98e813e338ced58988dc39c83f6962335cf79edbd8379697257b21453057f993",
          "dc3abb385408ce2afd75757d8a3b25cbd01a58dbdfc669dd8cab7df6feac1441"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527059+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "632bcca3-110f-4491-8ed7-91fc8fd1d2f5",
        "line": "55",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_17.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0c545f346f90bca6fde8317d36f28b57c8c4877d9dd43b6c8919522098cd8994",
        "deprecatedHashes": [
          "c26b0cea66c9a765ebfe0100ce2e89949937b30e1224eca7aafc32fa78885b75",
          "a1282d57a74d0be949c59b476be3c2851141ad86d679a8dbf92afcc2d77baccf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527066+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "48886d58-183b-4488-87b7-cef40042a597",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_71a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2b8684f6527782d25d1be1f1debee6eb8a38c4b67c3627882a968415fc1d0e26",
        "deprecatedHashes": [
          "57a5fc49b39f4307e294ab8ad0d2aa550a92601186df683511136c990a549d9e",
          "39094615b01a0c357bf39bc67919025662eb58f74122914b0c28c9d776f8a72a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527086+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6a2dd5bf-da4b-4233-8972-3ee955e97c74",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_74a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b343c84bac457c1c54407098f6b89ded93f0f8bbfa11fcb044a041b0f3afdb0d",
        "deprecatedHashes": [
          "7058c4f49a33b2e2bbe85c2f560c09ddb3545d5b09d2c638701fa1f41132f8aa",
          "5e7f3df00c43d4f9c58cca853bbba314aad370cb502937ab507526e04d90d5f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527088+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b58205d6-175b-48d0-b0bf-e01897761884",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_71a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "f85105212c4a888c776f8c59de797fdcd17d0001b9f896e3b8308cbda219252b",
        "deprecatedHashes": [
          "cdec4056762cb1e77a987d5cebf1e186752bd68935a691f4fece82f8160dd7ee",
          "91fc8ceb7d21c24c8bd7888c324360a52167af4cf50e1a5fb66e46e6146d1cdd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527092+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b5d9bc7c-a79e-4993-9687-13d1926e8da5",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_75a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8dc9de2155673e114cc4d18f0cc816ac78c25ef72e7ef022979b3aee2fc0c45a",
        "deprecatedHashes": [
          "0eb59b9a1b2a27fb8b7562ace8171be007ef702af15684098106b93de7a7e6da",
          "f76eeb942be6417e53b7587b3a47d53125cd0262f449c8e10540b1643baec59c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527093+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1a51081e-3cd6-427a-b859-69def06cd38c",
        "line": "106",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_41.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0fbf5f1f69bfa5862afcea614fc6530b80d78b7f7040bd2320f54613e571a22a",
        "deprecatedHashes": [
          "01bbdafa22eb932a8d618b866cca4ed010c0409fa3b744011ec86752913907b4",
          "d76ff0631e9bae3bec81159b95a77549d075c0939b4b83a86677b8e7aa454c51"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527095+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "31c7478e-49aa-4fac-968c-dce4983652b3",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_72a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "56b23fe88f867b39e4a8e9242a93009f8335443874c7f54e79d5eba9de568560",
        "deprecatedHashes": [
          "0d8a9bfb7213a75439341c5e5257d1c0565aaa9ef5ec7dde28e493cbbe97cd8f",
          "cd5f9dfaf736eb9fd011097729688b49660ae335d20386d78d5296632eb8678c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527103+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9a52aa7d-1851-425d-8f7e-2fddc6f816ff",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_54a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "54ec9f31654eb2103042f0232da62a5fd55e9f38ea7888b62088082af83a538c",
        "deprecatedHashes": [
          "333b6982ecb2066ef3820e22204ee92d84263d5ae112f13ccf76de2fdcbfa4d8",
          "ab8a30a84c0ab4be11edb0b64f12bc059efb53ff42237918ae686e9248fc730e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527104+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2f44e7f3-85ef-4a26-a589-7d8e9cffbae1",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_68a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "76cfc70d8b6e359f4ff190c384de171aec6b8794c6c86320766c6f60cadf6cc9",
        "deprecatedHashes": [
          "c3cf17aae123bdd9eed3a4ccd82ae6b963947160224b38aaed88806ed2fc06df",
          "2f9cf53bad7899f6f8425e83b9b865f132eb4e0d920c5d018e4390d97ee0f70a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527113+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "277675ee-0a1d-4380-8dc2-c281fc319f0c",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_01.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e3617e4dff80e5af382f29e26f717aced8e4746040dc6e4ab8eda9c16f646834",
        "deprecatedHashes": [
          "53391a3048d8d8a6ccfa1f14037e2c1f119ba8bec1d7e261f3cad6dbf6c78efa",
          "523db18a46e0f3faf83d170873eb7bd557ef76e8775d371003525cf43523f508"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527121+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "604d5542-5908-4800-909c-424aa7fcefed",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_13.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "64fb0d6781c67039dd90e40c1076bc377bebbe1167385d7cdea11adb0f7f4b40",
        "deprecatedHashes": [
          "3a3f53338591a46245bdfeef6d22d5cde373b8b46c122f5aad30701a8b5aac5e",
          "747892aa4ec15dac7cee1b683ef334ab091ed6bf20df38e68a899a3ecfce4672"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527129+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8d5deb24-f7a5-4511-9e34-e8f004cc17f0",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_61b.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ae3e6765d4d890e073f8cd5a1d0f67624fad9d8a1abb2da532f98bdd3be8a9e7",
        "deprecatedHashes": [
          "19b4c40a0f9e369954d330764e8386c774b289d95e52d02f56283c22e92f36bd",
          "2ffda5aedb79d1966b410ce4370752ddc108f765ea12694850c7314423d9439d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527133+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "560f0c42-4736-4e2d-8880-89ec5e6eec2a",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_05.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "fcbb76ef5528c95bb0823b1900ee12ad349ac0e77fc455a3f3db52869d24c828",
        "deprecatedHashes": [
          "93db31ff62ca34b931a543413c6c985cdf2588c8d6e80abd148f86cda21d9900",
          "b1fc248d577be40e275bbe491ff8652f9d6ed0cad157550a7878d5e60a670bee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527135+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e377d34e-994c-4546-a617-a2ef7bd0b82d",
        "line": "117",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_45.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "93a414ee64bdd2320ea67ede72de34a43de50e8b502fbc3f897679c76e8eeced",
        "deprecatedHashes": [
          "1c1f148677980e008f791e231fbc500bba9be1265c4eac675b24c0c4993a3319",
          "b2909c718b6b90f6ba79460d9787e41b4aa17f93edea6ad1e4da215147477dee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527145+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "71a41654-f364-4c46-acd4-f3dedec1f209",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_01.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4d4d71413dbc6f4951066dcf8f173777bf68c8523e9ae998ea28a7a1bb456b5e",
        "deprecatedHashes": [
          "ba2a2a903aea5ee3eadb31be5512bd6ad56b8008ab854f7dc73697d8a6a0cb0b",
          "861a64872cac4f48563911fdaf16f871b73b71d4c89d4959f3df46c8df6d4853"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52715+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fbed2a52-6921-4f91-9dd6-dd7caf194f59",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_75a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8520a859c990851edc5fd42861b92986db683c81d8559353fe3a0c7cbfd4c159",
        "deprecatedHashes": [
          "56c37c2d5f940d6c104537496742a0f9f664bf06b69f6711df3feaec2c44111d",
          "d5c0c6836e11d75c71f6f01c275ec9f5beb31beda66aff2a09c6c495274f857b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527154+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0da714be-b39f-4d13-84e7-c21f08a03b14",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_52a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b9b2b9655055f9a9fba44704168674729aeebb4d4b562552d48d64f150bed0d1",
        "deprecatedHashes": [
          "4855bb4e13325828f9925fce06298cf4e5981bdc75857b62bef5cfbd76da8f70",
          "f07d610546d7244f6494874f5cb3f278892d492c8600c70ec7e2f374b773e832"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527156+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1851665d-f64f-40d4-bd8e-ebc5cd66ec72",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_61b.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "7e3e5a5a072be070b8feca273c71c99e2b2574e7b495e448c4d3e1f34f95d94b",
        "deprecatedHashes": [
          "0001388747718ac85694569e4df3f8260472459a7d2d391e842c535a321d29ae",
          "e7ed4e1bcab8a74c7e998c6b548c4eae9d9aad144ba5c21252fbcf29e918dc73"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527158+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2ef2e956-8444-41b1-9097-42b6d7a28f6c",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_66a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "13861c36f18ed152af5d3d7a773dac3577f94f49dce8b8a1316a0e5731064f8b",
        "deprecatedHashes": [
          "4f4159f3c292a8f7810cb8a575bb86b803b0603d706e31eb05b556ac3afe0079",
          "4f7dbbb74d26e7ff9a27211b01f49542da6c0f1cc86869b893c03f99faf24e5a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527162+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a7bdb7b2-37fa-467b-9d4c-c25ef1da73b8",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_66a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "f62be43a29437afc25b3981005f87f51d7fb0338aa1d4af0460f9d8061dfbeb4",
        "deprecatedHashes": [
          "a88f64696eb1bae1ed6592f269b6fa9fb3b926a656257ddc1e59c7e2e72cc30c",
          "49da6052ba6ac01c430201924bfa08176a476a42eb44d072307673291cc1c368"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527165+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a31d4496-0c14-4ac3-958a-ce72c39554ac",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_67a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6c7d8a987d0220508854f2b998be7828362ff2d675de7109b21ec89f11e43f69",
        "deprecatedHashes": [
          "91f5801d765718a6c413eadc091c3899e3933ec32d787736603e30b9be2684c8",
          "c18318b59a231909ae1cc06cbd7e8dce75d27e69405756f056ee542aff5746da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527167+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e42b87a-c3f2-4627-9db2-7c86574adc94",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_74a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ee5e1731b9140d4d557531177b251ed72b9f0a8cff69f7ad59fb1cdb16716780",
        "deprecatedHashes": [
          "6d1136e86de157677d2e4fc88a7281cd85441b832f11acd3bfe661a74fa0fea5",
          "ad29ab9b8b4d5b93dfcb9c27cb49b28fed3f0cfb0d0648857c70ab5592f9e854"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527173+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fb8cd4c3-c24f-4fe9-baae-0583fdad7ad7",
        "line": "112",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_41.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1649cea0f0711d8eb2644565f53eed52ae84ec306bee226611b24f03bdf0871a",
        "deprecatedHashes": [
          "9496aef7411ed36990810d65278fcc716e5a748f223a48721b3671706fb30811",
          "11298c3e531065d4792789a165f042ace9aea6729d4d9c9996e6cc24f029a462"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52718+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6547db3e-cd56-46a2-8954-99e9547ced90",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_11.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "f334727e583e763b8fe6f559066fdb68185d6f737c1df9fef3d290ae14c85a2a",
        "deprecatedHashes": [
          "d5d128c9c5e884ed8a66e638995c09c76c0451159acec8c3c1da25154aeeb208",
          "99907af0ce8d3370d4ef9a784ce0b1f173a4ac78a359e49f7497b37589d4b272"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52719+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e8c1a3a-be38-4e37-8092-161182ab78cb",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_67a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d94d47cb44e948479d2bd334ce02ef134480857dc2228f347d411d12bbdc632f",
        "deprecatedHashes": [
          "125540e62c219d129b01df619477e0fc7ad7f79dafc7eb574cb5efca88745d55",
          "10235fab8750d472f65ffc3df8ce2ed2cc1fb256eb25d5af36b6f226b1781dec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527198+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4502340-4462-4a54-92ed-ca765656cdd8",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_66a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a6c366b1a8f1a460b0d0bfafd0b8cbf6bc9b17c166e8d3cdb9dd0a998993e68d",
        "deprecatedHashes": [
          "78efc7905f56fd24f6c7ac45f88cb5e25fc408c15104cf8f52ab12fd4e92078c",
          "781e4e658dd62ae91ac1b20db2a1b77d006858309cf6156abcce3a757beeb0e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5272+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6dbcac39-8de9-498b-bf98-79e498689ceb",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_01.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e9219928dda4f18cb52c8f6f5fac2455f36dafed717d7ce1663c49b05645ad94",
        "deprecatedHashes": [
          "15fff48eb39ee5f9ae2a1d6b6100b76c16b5a1426e01a43a56df69fe31bb0dba",
          "44cedebc8be766af0acc88830e9ba02f9ed1231aaaeff69fdcbd0b238ab69be7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527213+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e2253010-ee59-44de-8a40-4d94314b7d08",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_06.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "30e4f8d9fcf9f69f4aa4d04f789f20f79fac6e9686d8e1d835fb3a603c89e5fe",
        "deprecatedHashes": [
          "197602bc544559479fa6acb6eea83d571d2ec20fdc8b009dad4fe79fa01b0bdc",
          "4218b10c4b7fca7659fe325b1d784de0bdd9ee9eb227058c2565954ac0c3f9f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527216+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "25d92593-9da7-4fab-983c-5d3d66f26c4d",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_54a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a7e8b4bfd1776f41fcd06d8e6582ad7f386bc680f32e2abc76cd7593b0fa62cf",
        "deprecatedHashes": [
          "6fc3c54fc7c0884979afb4686e5ced524b93a99e67d70399cfa34e92271a987b",
          "40574eae546a69da6954b8ab18b4f1f3537acc38325bc40c76b68ac5dbd092d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527218+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9e8e75ad-af6b-423a-9024-b1f3e9a63bfc",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_61b.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e73faa4d256a643f5a0fe1e020a6d5f03579585447344976de207a72c1662bbc",
        "deprecatedHashes": [
          "8c4c0368032e12c216c4f72a0b176925b00b7c6ecf8e2ded1715070e9ef62ed0",
          "98072121be8964a968645e6ef335f3099ca23e2565e512c1ff407fb502e079b4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527222+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "6044340e-17de-40f9-a514-7bf1c6e8b72f",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_51a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ae234a5c2a22e0c736270261cd733ac28bd16c7e6449bec5b954574ff45fcf87",
        "deprecatedHashes": [
          "3df13dcfe09d447b4b49b8c11a93f2f67d5e8b9253543343c847e217819723c0",
          "8a8bf3f178e94ff16347e7df2f85f395327efd51802434d0699068fa19b029c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527226+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ebcf0e67-77eb-4cc0-ab04-0fa206123eab",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_61b.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ac1769bac6a34439c425c04fc6504fe97d611897234f7a5163f21e3ad2c1cfc4",
        "deprecatedHashes": [
          "9f1e5723bec960c7252334a46d14098ad09b2b3d49057776a60c0e9e77f6907d",
          "e9388dfcfd63b2b0ef6c4e3506ecae8764ec6cf1fa564106688a32d01eb38b93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527232+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e1650bc3-229d-4a92-98f2-b9d812f62d41",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_73a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "eb44c1e927d64ee86b0a233ef73aa5b0f651211f9888ca5fe857737167305e8a",
        "deprecatedHashes": [
          "7c786b05976521df3acc7048b882e857f78e0c911a88edf38682a917ac3494e7",
          "c240615e31cc1344382905b932c355147b4ad7594ed6d941f1da6e7a545b0ed3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527233+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "21ffd161-1ade-4761-94a4-d27aa592f925",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_72a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "51a47f6533be23e5fe5414a14665831a2d2fe7bbf0e5f5ca73487e5be2ae256c",
        "deprecatedHashes": [
          "f8924d2739761f3d8a8d9787bb63e6dc57f7a76643d15544043d9c0ae993eb1d",
          "dafdb10d362ed217a746195ccfda6f6bd43aaf8b08b414b3e9042ca2ec9cbab2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527238+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c64e72d5-1ade-4dd4-b5e8-74efbe3da03a",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_07.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "35623692c76dede7077ca410de23d478fc2e7643f47761e05d00d3cb22e6f81e",
        "deprecatedHashes": [
          "fd45927ea028ed17ddcefd4386f81624b14694ffdd0dcde1455ede50fddeaa3b",
          "75e3626b302299fc183a74b3cc5f14a2a3cc2a41317f87616f4613a9c02cc34b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52724+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e61e6e52-dc49-45b8-8eef-c9bc896846c9",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_54a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "f8e176303ca29a5e875d712c2c884d1107599de46dc405a4544483fa51ad5cc4",
        "deprecatedHashes": [
          "e95408e759698e1bd9599457bc040461b3ccc041f5893a0c66dbf7111025e981",
          "2dd565081d398de9347168e29a148c7c682ff1051d4b3cfc7109c7fde8a0a265"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527245+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fca4142b-5658-437a-b048-69fc76d50159",
        "line": "50",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_16.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c21c32af4280eea2e4a6228ac2093ecc71c02a1d0794492be2d4f7ed0499cdad",
        "deprecatedHashes": [
          "cca129596598a766e2ebf83b4f50f8892ac1daf6b9b93607e07efe21907431f6",
          "89caa8650b20e8ae68b53dd0778c0c7bea92cde2cb428b30715db737f150c6ef"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527254+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a946e96f-24c6-48e8-8395-e0604187a14a",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_51a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b4cdc8fc99754da7977de158afe2cba82a199615fdf7e60a39e9c097fb574d50",
        "deprecatedHashes": [
          "244e6b3d523a8b804365147baf94a89e1786354e66e19b3b896ce1bf3745d6c9",
          "b3ba6c386f3726941ce0c4b85f0bcd9e21104fb745bb688079e3e96ba22ae9a7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527258+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec0df050-7962-4180-a9e5-2ac56eac2b1b",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_12.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0a61904a583c5129501d8df91018503570533ceeaed064e1903cc19f8142777c",
        "deprecatedHashes": [
          "fba41d9334f86942b572a55527a58c32f8a5cefc3816d41aef6cae887085c791",
          "d6853bd4b6a332e365e7110e6e9713826455e8aa6cf4f66588f8ea1e3a34f8d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527262+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f349740-054c-4552-a16d-c65839a7ceeb",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_68a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a6dd561c0a65a976779fb4a3e4cb9e36a27c634cea0c432acaba74e052cc29fd",
        "deprecatedHashes": [
          "16b7b875ce5be3f25f6c2ea74db693f232d401588078ca1c4459a9b20da1e9a2",
          "e92a406cb4896d141c39888274a3b67c93bf4ed8a82e7e1ee452fd968c7afcd5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527264+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a02bb266-9c33-4018-96aa-d74eaa611b9e",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_53a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "9fe366c8fdf49c27df9aa1d13ceb6f03551162757dd4aa797d11e302cdef2aa8",
        "deprecatedHashes": [
          "49d30a61602863c9015961ed535b9790f057e7218bac8035172737f617d592b0",
          "71212b407201e8590d87f164f640da41d1944dc19e843cdab067226acf1c1e68"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527265+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "74c338fe-9d5e-43ab-9478-cdf9c48d7061",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_75a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2111ce4f41a1ba99acb6cd92a390171ab6e92984074daa99d8c85e18722553c5",
        "deprecatedHashes": [
          "f72b07efe521457691a74b3726ff739ba64df14c54caa0f2ce3355eee2e923d1",
          "0569177d6b628b66b6777b3f113a85fe65bf4325098a73d8354032cf30884369"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527294+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "45ce5bc9-4552-45a8-b545-bf2165f1349b",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_81a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d62f248a7c915f2ddb63939c0e1f3261590975acd5a403ba0800f7e805076219",
        "deprecatedHashes": [
          "0c3ff5c8f47fc4bdf2e4d1e29a23e620dab22cb767cfad08a5e01be10fbf34c9",
          "418cd5b90650314360304ff602aef98ca54bb18e09aae80e247957d9124f0411"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527298+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a15a5d19-2156-403f-88f5-32fd7f73cd62",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_54a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "98a713c6eff4fc42ab798ffbf03ca032ff75616372249b84ae19537f849b50a5",
        "deprecatedHashes": [
          "1fd11342718669805401dd0f61f69f4c65d17b46a82d5a2e8190eaf8bd534dc0",
          "8a3dbc047ce739e974eb99a8b0068fe66a64041ca1e4ae63b7bc15d79757086d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5273+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "88c4aa9f-f1d9-4de5-b8ab-ab39eb7f4b8e",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_13.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "05991336e4f5ffbc8be0683a992183b1a0765ae25179bb1093f80c6466c99f37",
        "deprecatedHashes": [
          "3248e63dae2dc1f0e1012cfaac230f86e0090470c86ac6336b5f74732cbd0d27",
          "f575fa0ce88de4e2f520d745cd9218d7f0628c46264a13ecabc45f1b814683f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527302+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "40439ddc-694d-4325-a367-9dd7d6a61c27",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_06.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ddc935af305218827d18f5065f751acbd5c52cc0e151a77b555468f8430a6169",
        "deprecatedHashes": [
          "71de6e391a43c2d9c28b07a0242a90b5ef12deaaa40c6fa235ec6e73da2c20ec",
          "02e1eacbfd591cfcf99b3dbab5d4246c1875f33f458d2d7f688f8e7a27e28083"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527304+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "07086af2-5224-4003-9fa0-098b74c6cb9a",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_09.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6ff24f7598cd7c366018a84797609587e59df0c025d07ce060a75918d303abcc",
        "deprecatedHashes": [
          "f56535f6ca2045a9b8b4776326a2371747946db18ba99565b0fd0f726368408e",
          "3e00ca6a71758b75aff6d6d89eecc752afe16a9ccc5ea4cef992baa704439b2b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527309+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "32a4cf24-bf41-44b5-a79a-18ffda4a720a",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_74a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "41e69ef5cb8d3a5265db8f4453493659c1959e3a81777c827dc04ded250fea33",
        "deprecatedHashes": [
          "102da82ed3dcef37a9fcc2d712231cfd1b86640e8659986dfca28bca4d0437c5",
          "09924e13f0161a6958ae538ea399a4fcf361b99f5d409e8142d5b0092fd93635"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52731+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "8bff2484-de17-49d7-b992-2c78e648b5b0",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_54a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "20cb118724ac7873a549af1966ceca1a3623ca7d8ec9736586f5af4218b84c27",
        "deprecatedHashes": [
          "7a6fa3c91546e25e2e8af6b30d6714df1e1d43f5bf2b86cd2e7e607c55149e23",
          "e47aa5717ab693bc0daa1da30a2d57fb4a30f12fe8ef999926bd4e1f5fb9742c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527322+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "18cfbf66-32f7-44ba-a1a7-29cfa1964d59",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_71a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b16634d9b2c4643c62fe9618f850c06dae011ebb3c8b67cadb4985bcc294114c",
        "deprecatedHashes": [
          "e9ca464e5661ae2fb5d2f5b2d28df76d3499fd606222e7aae61646afc37fae4c",
          "5559e15a8e6fc5847ff041f6b41f6f45c6929344f9325a2ecd9e233ecce74bf8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527326+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2fc5417-f7b3-4cd9-9ce2-c0ac30ae5242",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_73a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "eb1b8d11eb2396456c0b3fab5ca1a498b63531dfc4be4517e3813a8fc893439e",
        "deprecatedHashes": [
          "97023e4f379f1e4c0691dd05c0f5bc01e9d0618edeab425ccd214d449216521c",
          "1a585ba752038f8cff0270582ceac4bc50b011bcf63e51a186ff7a1c55789d96"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527329+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7448a331-e90a-42d5-8134-50dee189ec85",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_74a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "14c2f3ea3718903f17074fb287ab410005d6aba2c65f5fa948ff4d534ad4ba5d",
        "deprecatedHashes": [
          "849df4f0dc76abc904e143083c719bbae670b6e0aa0fcb19ff8d7a0866fc7538",
          "668acca420e9db4e183085c4fd3a0f95da24622d21fc58443e4b2badc25ada3a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527333+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ca4bdd17-35a8-4d24-8c65-61af02d4c4d5",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_42.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "f41fd79fe5025e8eb212d8f5cddbb4442ec453d79d150e1d3615b017b7e7a848",
        "deprecatedHashes": [
          "c1a1abf65f5eaf2a0674527251c8d5f7ac4e1d0c4a5cfbf85c53709c956c7c08",
          "2e341bf322054af11349c2cb63fc07eefb3440efa7f61bd48a4b82a16e4f6a48"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527336+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "add87b55-f687-4b30-aac6-97244c8503d6",
        "line": "111",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_45.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "52436d56fa9a5de5967c03ce45856cc695f709bb4666573d55c92a1398384019",
        "deprecatedHashes": [
          "188763948e5725f1667729e79099fb4a0ab4030e791490dc1c2095c31e50d9f9",
          "d0b61819ec24feccf5d44c911d6973656333739b825f667dcbb78be111b65850"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52735+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d4037fbb-b03d-4aa4-a7c1-aa535957ba05",
        "line": "62",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_08.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "efbfcf69027cf21e4449d06e7085d2bb20270c442e9a9c936b0b350d4966f76d",
        "deprecatedHashes": [
          "833648403167f0cfd6606c5e6b3c79671184d6a22d17a756eac6803173f73705",
          "96dcbbc4a5054f5c74a13feeb728e689df009427ce19effee3eb654840438f38"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527363+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "773630a0-2b87-4666-9b4f-bb30a1b5f9dd",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_72a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "472d09b47052ad2ad5714fc6515f590cf2a18513662b82555c28c3e6b435fa98",
        "deprecatedHashes": [
          "acd0eca98e99c56f476b68b2864f7e63606b9cc4b748d2a57a52b8e9f20b27b1",
          "c0cbd0b7fa44833db2b847be92ef1e0323a54e9053432824ca4b06799aca7d97"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527369+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b323d5ba-2cc4-41c0-8a9e-7ba6f5220739",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_51a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0ec31446d19b8f4b99811180d74b20fcd583b40f5aef3c5080abb908baa6f7d5",
        "deprecatedHashes": [
          "3376f657714177360b55ef99a17ba79549e2516e80f87377ea5424ec9f6132eb",
          "88e87caf4689be0c571539c4c0117ef7acf61ea4f327c3c1b2051dff6d98dc27"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52737+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3c553e91-2ce9-484e-94e0-df80e4256255",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_09.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1cab40e6bca69b8ee8f3a7664f109636b3d88e3801e0a9d52cac96f30f4c287e",
        "deprecatedHashes": [
          "95f90b39f7d17866252e64ce0f1d368fbafd02b70c2564a0d4ec355880fd6556",
          "b115069b8dbde5f97b0a8a7970404ad41632f8595e4bcd25bc393064cf76859e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527375+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "214dfb4b-c254-411c-a800-27caec033110",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_07.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6a106b363fe41dc22d3ca852fe3e51618782fd98c7b2c6055b8ae21f0c762c6e",
        "deprecatedHashes": [
          "95c4b5a3750a67f22b5132e6dda520049ac60bbf0747b21d5dc019b467ced03a",
          "1ea1aff53ca84b175c933ff7925dae5307be9c6335c1f58deb29bae292643176"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527379+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc273632-cb38-4367-8dd5-26c00091a4f0",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_22a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "db08c5285b2bf9862a9434d0a3972c0029eeb6bce5dd1e728ea17160c2dec4cc",
        "deprecatedHashes": [
          "9f6076b1cf94b5614c59031fc3df4fbd9b3b1d20f236f4a3bc762e5832bb96cc",
          "f632edf35708ae94216574d6c41f0d73fe2af8d8e612c4e60467390ea9beb44b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52738+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "06609211-f88a-488e-a41e-3c9a06bebf06",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_68a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "589adb9a3fc58a8124aa00ae0b7132e669cd016578c678cf2c4954a430cfcbda",
        "deprecatedHashes": [
          "c3f8eeedded2927948e4edd38ef51fc95eb069f37ade815e3c5a8df7754090b0",
          "faca7622b8fda88ba4523b3148d3f17e3f2b45ee83815bf92df51a7e09f193f0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527382+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "89e14302-ba96-47f7-8281-5bcf9f11f7ee",
        "line": "55",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_17.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "125d3f6e3bb0da9019706cdfb1222d012c0c8240fbe2493f09e786d4edf1e7e7",
        "deprecatedHashes": [
          "affa013f794ce7485f0348591ed99f5158b228587bdae7e99dbe6c1ad248ff8c",
          "1f67a2969ed299d51705f6cd9bef5b88fcc5e1ade5feb215f175f6009629efa5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527388+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b371d0df-94d8-456b-84f9-0fe61e3201f9",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_68a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "193eea5ac12e49acf1bd4882f36b3d4e3c63018c4c93da5b6cf53a858ed420ec",
        "deprecatedHashes": [
          "f358ca96686c152fa80dbd379fe58e074a6d73738024e89402b18d750be9c623",
          "30372dbc4511ed1f5c50d7c0526a71360906b48fd376018121b9965f55041950"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527393+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff11035c-9900-446f-8cec-c66463dfefff",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_04.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d2360c7afcb030d9500117e38ef5abd36b2e4e46f307b96a0a9ebc6dff418cc6",
        "deprecatedHashes": [
          "4897487130c62e6f0dfa1eb77979a35645bbeec24eac5ee4ba84d3b07dd67bd0",
          "447fb4d8586272c85d1753914a94988964d6fd49d39b48473bac60eefca70a0b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5274+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ab1ba8af-2e0e-48c9-9a63-42828a17b025",
        "line": "50",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_16.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "24652d674b3489ca2bbf23a93d231d6581e1a9e6c660afa91cd0fc9bad0146bd",
        "deprecatedHashes": [
          "a6d52e5b8eb1c4a5eba177eeb2f2d0b67f6f92aca157e3bc53b0269d1a2bff67",
          "686b8fc1ef1e77a8ff61b844e8c73cbedb209b378d8639c684851705bc30de2c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527403+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bce1f094-1e6d-4e90-b3ef-d2af78181093",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_07.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "92d5b6b2c1af61fefe7f144534798947a40d0a10fef901522878e4d0c535d320",
        "deprecatedHashes": [
          "db5fa2edf0befbe1f3b78e770a3b7f809890c3e88512b23ceb555433b888834c",
          "d0e69177ca9efee4b654a02e5c2fd15f863e18834a9bb1e93b1c55b77cf0f48c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527418+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "57131e87-8362-4fe4-a41c-d5d53eb8536e",
        "line": "50",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_16.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1a7309580b3da06c7ac6948aedba0a78fb16e321a31019bc895b122386a6b277",
        "deprecatedHashes": [
          "19852681b0bbce67a6c5da571be542d6cca56d54eb337126fbfb3b17e3fe217e",
          "e79829eaf6e171729eecf0c49d19a9ee7ca974fbe061244d732a9b37a64a2481"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527423+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec584643-21e4-41aa-bce9-b22066d9562f",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_51a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8324a144a67d70031b1d002dbfbcb013daab3e519a17efcef062029ef9c4cd84",
        "deprecatedHashes": [
          "e8adaa05cbff3aa22a4c60217d1e4b583a0dc4ef438028df9143d0e458a4b901",
          "4207375fa03382506618fcd463b482fa1184e2ec5eb11f14a375ac51b24febac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527428+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9ac5ac68-d09d-4b83-82e2-d34343f96900",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_68a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "9862ee58d41abf93cef1966853639af0957f4bafa58b4b53bdac147fe07baa08",
        "deprecatedHashes": [
          "932fc9f24df0f0a5f7c0ec21ecfea283fdee5c943a87ded35421fa0e930dfee4",
          "757c4da520ad688868425274735b8a575782dd3c6119c23e9e0d1e9dd0e663b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527431+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d20d31a6-5e17-46cd-8072-ef124179df83",
        "line": "55",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_17.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8a16e1447e62f25b7f418964bda1a8c77cfd3f00dc392869c50da94e0d6d9b30",
        "deprecatedHashes": [
          "71fd484daf87109e38b55e3a8bc5f06422e91ad5c21fcd9a57f56fb2f491d593",
          "e5aab677fc71be080c980e3b400596c788168c5b935c88681b47d660e214d88c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527432+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce6b215f-c435-40ac-a06f-7fb6f626b7a1",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_14.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "26b663b904b55812bd4d125621e77c92846ea30b88840d2d08c01ef3b5954731",
        "deprecatedHashes": [
          "32af0722046ac8ac648fa78059114c14e2eb9630d6109e2d226be13dc1e50f2b",
          "44a0a8cefde0ca305d6e29660b76f3e1152016625cb66b12acaf2bb416679570"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527434+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f059d6f-c65e-46ee-a68f-b28ae08dce59",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_03.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1bb7fddabb2c5b66ac4cec21eb00e013b8777f6574bf644645dd54f938bbe265",
        "deprecatedHashes": [
          "e13ad64a0573aeab7fa2b263395407497d21d972eb26d706eb4c4e4f1bc39f73",
          "f0fcec546601a6475f42ce567eb0ecebfea8749270abed769e37208df0d0bc59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527436+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a0c493b-16f8-4f63-9106-db371112f12b",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_14.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "76ab7f2b5ebc54625505f7a1cd5a0908f5119d170632296b81050265471b7918",
        "deprecatedHashes": [
          "5bc6bccb11a49fc884537c39aa2f24b57e6c90469270ab597b7621881ab0c380",
          "379cf3ff9cd39d6a564b908364204d66c2c99e550df68fea2a0a2f1f2aa19690"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527442+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f24027f-0f13-485d-826b-c8d21d19200c",
        "line": "55",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_17.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "90fd5d4837ea468ef9bcc4bc29ce7cecc4728e2037dcbb646c60a5a4980296b9",
        "deprecatedHashes": [
          "944dc7f3f0703dcfe9e46deca1fd14bdbf664f9378cec3f02359f939870a29b1",
          "4d5567dc8a4972b977fc8f70ce43bbfc6cb8abbcccf4889e0bddbc4fa46f719a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527444+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c9f53665-3593-4635-bd36-7e138c2bea34",
        "line": "52",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_67a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5940d848a2360d2d2784c0398a0963bb85e4de1dd7ac68488faed674aa43405e",
        "deprecatedHashes": [
          "f1296818e0717eab8a5f0a37c63583088850b644324af26b9016c2edf3fabe2c",
          "28505297b563688e94a886737f30899041a62824b2964049402937b355237f93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527447+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0b3e69af-a855-4e87-a1d3-73b169ff49cf",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_07.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d5d9361877644275365678a059ec18df78543ed5f248c6f566b0427fb18c2dcd",
        "deprecatedHashes": [
          "e48500baee03611d09653ce576627fb664f560d26cd91c3ef129a5757d9296c7",
          "b7978edb860b756dd005902aa5317b18b2ce269b421ee0d1a57906741aa5e157"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527463+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f3b14371-2999-49f6-9fa8-ef77f7d1c10b",
        "line": "53",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_21.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8786a9238e2c6cc4c1d7e333f9bea4ea9a6be27017e3eee936840d88d7ee3d27",
        "deprecatedHashes": [
          "5151ec327d8bf91e08ee8131fa1106591d2cbefb056c2bacb89ce2f5792412e8",
          "1dcb455353cf52afad257cbab487cdc980d750799f32b69a36235834f08d7fb2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527469+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "54a141ba-74ff-4e13-ad55-9d451d09a434",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_11.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5a5059bdf3570592ccc01f5eeb35f19f17e210cc6c5c2bb0ac950b73d89173a9",
        "deprecatedHashes": [
          "5dcbbd700fb7a6e7d69bcf0291e465c4a041320ab943a000d73b5482fa0f5a1a",
          "f4da19418033ec683f5cb590e983892748286b840de46aa9aebf1eef5f14f6ad"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527474+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bcdce10e-333c-4c43-9309-67672aa73f61",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_71a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ddc41260dcbc892fcb8b94ad2008ff3f598cd15754fc8a2460fb0eab3c977bb8",
        "deprecatedHashes": [
          "6b4723e9642e357277e44a6d48e10c5240862cf3ae315cbd4795bead030bd19a",
          "3fae9291ee0772ed4842a291c75da9d7cf0ab6837371b5a78510dec63cf1b715"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527475+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd8e8de4-a00c-469f-9640-7796f6bae519",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_12.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "aa30073ae1e740ebf7a2a1db00a4d192ca88619abe1aa920cb185bf142e8424d",
        "deprecatedHashes": [
          "584af8f188d6812d3019f2b5149853fba6eddd84164974313618be30772b7f52",
          "09732b4be6134dbdd4b5312c42ea729dbcb5a91bf0c7672fc0cad9e086fd3052"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527483+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "871b86ea-099c-42dd-81e5-1a758d050083",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_61b.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c4a6f61f71bb5801452a20396af76ee65d5a6f752ba4ba43a5823d434ddb3b94",
        "deprecatedHashes": [
          "f72b849d92d2ee02b3a891a0ec9eca0fc6b2ab6b5b15fbecc01ffa3515de35f9",
          "095b0b41bd030d46dc877a88438afba4029266ec2aac5bda76d8f9832499f6be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527484+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a7d59494-7615-4976-a0c6-364865430bae",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_81a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "10016a31a85f7fcc49580f86a21bd0a5a34a11b8ba3124cb6fe90f325768c1e3",
        "deprecatedHashes": [
          "0bf44fd2715a3f10d9e75e55f52d55c572e23521500a119b0b4bd90e2c17b138",
          "225e355fa6d7ab34cc57a7c226400ed324e4dcbe4080a7dbd0c4a8e096570c59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527493+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "497449a7-eca1-4eaa-aa6d-ee4613b3cade",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_02.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "bab4c6277cf50b2681a31ebbb39b005273b7ca4ad3638d2db902f87541b682d3",
        "deprecatedHashes": [
          "d0013ade05e07600ae56f7dd27a1e39bc6be15c7be8ed88d09885bf8def397c3",
          "ac079cb50a16b26db814675c542b7cafd87fc8eb024152db0354da0bcebc048e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527502+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "023f2745-7c33-4f57-a576-32f55cb1622b",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_22a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "da3dff2c8e27d345fe421aa890ea6e92b121eb10ec571ea7ddedf6be07ea733b",
        "deprecatedHashes": [
          "eb1c9d87f4983aadf6430fc6ae9da43cae2d466f755d9a6be59b317b952075a5",
          "e5c387523cb9f75f0b6e7c1061fc098186ed302876448c5e5b50ddc585471af5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527504+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "121729f2-a6e1-4dc8-a180-3b1f4095311a",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_52a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2055c2dd9caba1142926d204a6e8c7a5bd03a08a8890994e59bb27383cf68bd8",
        "deprecatedHashes": [
          "48eaf4f6fd4214fbc4920240ceb5d4d3d18b5eff36e05dabd62139fb80fdbf1d",
          "cccabf50a2d7cc0a2f4acd1644295274eccf2164860a204f2d06f9c2d8bc429b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527508+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e92e8545-c54c-40c9-a698-474f3a32496e",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_05.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c16e42a8273ff97868458a4a30d6e8ba65d9616d5e059de8e8ba873423f283ac",
        "deprecatedHashes": [
          "decd0604cb64e22bf798cd0ce5dfdbc4fce6cb208befac35b2aabd4bf062d0a4",
          "c92cd01c5a2ed06420df8620d4884264f30558ed6bba6c326b7c6445bb0608ca"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527509+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b302c7b8-1f1f-4161-8817-551793681f31",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_72a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "de08bb32bdcc6b7e294826bb8141354a3b8725e32771db46a43bf67bb4f1dcb1",
        "deprecatedHashes": [
          "f5c488d101550641603c33203db564229c6e79f31e6ebe889c21fcb6861c1fd6",
          "16292e040dc5f0c47a197caab94e2c4391804ef98b35763758eed6e77a7f8373"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527516+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "984cf5a9-3fc7-48ea-940e-a69b777c783a",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_66a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e1e0720fa2a19b3679a4c645d882b7e5931608c574c5909e258dbd17d28d6090",
        "deprecatedHashes": [
          "01e6338aac8a77957c00445cd97c1b5feadcde10d1ea6753a976d6a9e435179a",
          "eac0d334c542d7fb36f121e9fb8673e41bab8e5de77b51759967045f9a63cf7b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527517+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "17798f4a-a56e-4ac8-abed-f7a6c939cb3e",
        "line": "51",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_15.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4d515cd9b55904bc359717274ebbe165340e952eae0b92a253be9bee678f7d07",
        "deprecatedHashes": [
          "0387a950256fa4556532b325636ed6385f8f697164f805f1d17facd1667c17d2",
          "7ae3480217eb6762a3586894822c8c23c0e9cce6031390945edf36dc768e6eaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527518+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "47760d18-375f-4b89-ba87-995945abcfa1",
        "line": "62",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_08.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "da65dce09fc90de7370b7196d5648238b1e9524098d5128e3d4a9ed9b712f132",
        "deprecatedHashes": [
          "759df01ecf9ee956d1ca4085b6eb23e75bae2b9425c45a34c18764a8c5f80a96",
          "71849dda373bb44adf61ac878abcc33b259923aaaf8950f21edb6b9d75463301"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527525+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d3215db0-0e06-4928-a42a-96610affc43a",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_81a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a6d9ea1cd0cda1ad02a167dcd1f330bbb5ca57d2dfabb0f42958433e709d5211",
        "deprecatedHashes": [
          "0d56788c7b6facb4704baa27a63a1567f4f1b4965e3a6b3b8695f31d4ef0e698",
          "b9203434a9ae6900ab24ab862dddbdcd7d2c2dda7f313738f4e5f5cdbafe4169"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527526+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f505b43e-f039-4dab-942f-606f22b4d58d",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_53a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1d71eafa9ded9f7764d5625c35789972dbecdbd5351c1579b778fc39c56912a9",
        "deprecatedHashes": [
          "0f2f0ccd024893c9b549e174c1a77229aa3fff2be59a54dc9fe686eca24160de",
          "d258d28ce851a1d5da54633a02ae77db76691e9ab6a0fe005472d25fe6088192"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527527+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d8f2dc69-9d8b-4b14-b543-1711164b2a6a",
        "line": "52",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_31.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b1a322951e6e470c12fc8cfb815d54b8cc5aa98bb60c69bd73f01944f8bc78ba",
        "deprecatedHashes": [
          "68ff2c851be5f588ec97583e34c7ae5006655fe5b471e5c0df90e6dd41027eb7",
          "8a65c5c173c67966f70957ab333729d9669cfd8e4b69f37162b91aec00dd5e23"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527529+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ae3307f-9201-4be1-83dd-f0b58efe6013",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_04.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c34585a87068060b9b59fd14074a5e39dfefbc63de5853d42d1c179f43761c47",
        "deprecatedHashes": [
          "1afe7869eeebdaff36d3678ab70806d8d095925678e657fa5a372956e7d7c1f4",
          "5fd6d918efce6a53f4ba1dedc2d51804687d7bf0ad42bdd6f479d9e52a3cd7a7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527539+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2e0fb0a7-fb35-4749-8af8-29dadc2b8615",
        "line": "104",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_45.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "afe58fef5cdc6560aad1146cedb127be28424623fd135a2dc035f76b9e8b5341",
        "deprecatedHashes": [
          "2749e0285dda5954518fbf825f5447962a083ec44b66c387019fac79fef99164",
          "7b634600949b2cc19c6cf65065e22c8b493715c4490bd83e5f4e7071be7c2e69"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527544+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "5caa205b-e119-4271-90d3-fa8af0db4172",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_04.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6cde02e419089ad855d03ffd0013754fdfeab8f1ccc61dbf38ed5ad64d5eb811",
        "deprecatedHashes": [
          "84d0f0e3d62b424eaa649c042d9b434211f9280e517f0e4b93bb91f37f7c8c36",
          "ad8f5876585f2824de35ddcb803e64cfcaf060ceb12d8185f83127c9f0d3e390"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527557+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "39e12a80-49c3-4725-8c14-3577ffbefb73",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_04.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "a19f9a279884af254670534a177e74b5f001278bfd8c0bb4d2fcb136ff021c6c",
        "deprecatedHashes": [
          "5fe3b2fc62a7347392944f79d0e008502bc3f107b7cce95ada881d98cbf7508f",
          "8e6f918207ce62358f62ccbf0ad73ae8c2ef3164696e6690ad9f7a0ac8bc2497"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527558+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2fe075dd-59b6-4000-a599-72351f618d58",
        "line": "111",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_45.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "299267e0c12b6a0d9a992b23236227cfcbb711b30e85af0a03b302ae01aa84f0",
        "deprecatedHashes": [
          "9998ef298887296a153f6aa3d55d688ed0b68765a371f9f7cf74c36ce7678f81",
          "89ecb5a354f349afe19f7ecf28ab52d1a5aec7bbc64cee63d0d3f79b935d1722"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527563+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "53757c73-c51f-4933-a775-3ba3a39708cb",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_10.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "43bc3b04c27bba62b2e2470e57ab6c1e17256d6126140167b0c2aa8153df3630",
        "deprecatedHashes": [
          "0e966bc6973a1d66eb5da16d5051fcd444d010dbaacab3ee5d5f17d02da14f7b",
          "b5082471d78908e989ac69c52443bcc8fd5a0753ba52adaaaf396a84f1dc15b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527565+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ffb4dbc-012e-4ba2-9361-e3911b395847",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_03.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "27b4fc8790ebef0f7442bcb24f0f435c166613e5fd127b445031422469e62a7c",
        "deprecatedHashes": [
          "ef8fe019fdb2a3ac76d24d44b701c6741aee82b745518d163d1a6f445ac26910",
          "1caaa2664ee72658e066cf733f6f92e474ab3e3d76d23d071bc6938853f00cf5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527572+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2fab790a-f9cf-40da-a265-50915a94eb23",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_09.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1cdce3f07fc44b918f73d7aec27a88819da636db73b188af06386024115d3cf1",
        "deprecatedHashes": [
          "c989a3570ff528fafb8a5a3f27fc0ed66f2a5e1ed5dea8127b92524041bd0762",
          "224c0252003f71efe4b075367701b78788010cec4daae7f24ef94fa710f4d19f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527575+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f4ec8837-f681-4903-85bd-e1247dbbe405",
        "line": "52",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_31.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "3325828994e5a0ae8a2b177213b147e31d636daea195087e34753014274e9faf",
        "deprecatedHashes": [
          "dfe696e4cb99400770e2195f6b5e71652a78f516db6c541f4df522a71b37af7d",
          "e89a462e593b4e3b3f07b5443dc9a310ef529c8008060aead812c30ae50f6230"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527584+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3060c105-dcbe-4692-811a-d9c5979cbd1b",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_53a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4df83e641ebcf01fe3eb8fbd1901bb2c98f9c1886e3a94192f4ca719ab886894",
        "deprecatedHashes": [
          "79e6f477dc630db4a6de074765ab043c74d5b22a4e0dec3ea6680f73adf9ce37",
          "2b3229e433010210f8175088222ffbc83eb2c0c6331e6e095b79f313cbb1a687"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527587+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "29ef77f2-8cab-4dfe-91da-a31c9ef0d55b",
        "line": "52",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_31.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "39f5167ff6f9a06104530fe14dd18495e61d573c6880922c664b319b92f20d81",
        "deprecatedHashes": [
          "bac04f13f90490ec182fe3f70864f72719552f1609c02eaf62cca3e58ce7ff23",
          "51f859c0bdd37232a56b99931c1ddcf566f7570dcd69c5538a2295bfc32e9ebe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527593+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4c4de7fd-3d3d-4e43-9778-01653e456982",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_01.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b2a7b227d7f19a375af57a2db9b7c2237d8f6d84fd6226e035595a034a4d5913",
        "deprecatedHashes": [
          "7253e69b98e997ffc91166f1cc2449dbdbb61486d1954573940679417627824c",
          "f4d09b5e6e2a025dd2486fa2dd3a6a7aaaa2b0a4dc948c28f703794b8f0d8311"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527598+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "91128820-9cb5-49e2-951e-ab3aa20ab5a7",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_42.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2d1ef4bc0521b2b36137f4cce2d7414f43378aaa2bc29162db1f5a5b45d95528",
        "deprecatedHashes": [
          "46b851f967ec45551aa6388604eb7de077b1ba6ef8b5d5f72f3c8e5534a4a04f",
          "275ee0259a6030c1001e168e51fe5a377320decd047c17d30738652370ad13ae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527601+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fb407daf-07db-4444-92dc-5eb9425be1b8",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_02.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6596c378c25b9aceef5380ec3ec061f5d9df6dafdaf5b9df5b7792d440052835",
        "deprecatedHashes": [
          "1dc554f2119bcc60dfe94852367d784bf58049c4c14c9491e8173ff8a4db115c",
          "4edf3c977d460dd968fc7dc3d569bb3219b01a1214e4a7ddee173aedda7042b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527606+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c9a6cd3a-9d28-42b3-abfe-a59954a9ad55",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_03.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b2fba79ffef08feb5ab0360340cb819c50711183d0bd3d9f76e519d5790625fe",
        "deprecatedHashes": [
          "73e208d06d58b613639f92876e024da7e0a8664525a9361cd5a8ac3e857cef60",
          "8daaca463f27d3362557f993a91e217155384b255a51296740aa386c5f985e51"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527608+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2fd64a6e-cb70-4e91-bd53-1d991fc2cde7",
        "line": "53",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_21.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d49203946d31a390380213a534deb3db69fa07146e32bd804cbfc66d4f149c01",
        "deprecatedHashes": [
          "8120c6e7de3ccf97f98df44b17131eca0a173976db301f730ec5a387145e6495",
          "8a47bcb9aa43676e13702a7b803068a6efbcbde0803bc8e96fbf2dc8bd704202"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527618+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "636b5b29-2b81-4319-9922-399db2ecf603",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_52a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b3cec9b2a3fb12e97bcb4e1bbac3dcbbaaf49d07e7d99b55f2d598f07a8674ed",
        "deprecatedHashes": [
          "cf250eae714372ee1643d6673fc3a8e260cb290e9a617c24ed877d8b0bbe3ee4",
          "578acb7f3aaa893aacefd1c67261e019fb259b45a267fe511d0b1f3fc14bf95b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527619+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9774a8e-c703-4c13-a41b-07384164fd0d",
        "line": "50",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_16.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0901145d1d01c750fd82e1561ca9a2d9a6fa423abb26f8acfcf089547e33db82",
        "deprecatedHashes": [
          "fe20db82051bbf23017d024d0a1776d0642b92097df5e3b83a11fd7824251771",
          "3dbdf3b14873c339fd0471e78c844433f1b203034edf766ed0b30e87c0b7f19a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527621+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0be8f283-e435-4c33-9feb-4517e2e98a35",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_22a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "01663444d239bd91e2a3a274e462c2ad98d60791781cd5cd892f22aea3ffbecb",
        "deprecatedHashes": [
          "0a83cdd5b994d9b332b27647894c32bd2c299a52098ff4015bc1dc8b99c8c809",
          "67e7ec061da8aa0d2a235a4a42e9925b424f5f2a3ac1ff69bacc9d82eeb22580"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527623+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "839c4902-88e3-4114-bfde-6d8398f89a68",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_14.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e99df8a72371b7e6e9dd1a5ce3bc759ccefcf8b0caf227f62dfa2b5ce4942b22",
        "deprecatedHashes": [
          "b58b1989885f7f036e82451917488805fec6346baa455e2bdb235613989cf50c",
          "814fff85a70666ed731b3723fb339313ac264ab4a208b6d1f200ae27a823d7da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52763+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f9ac526-bf19-454a-a2fa-e3397337d416",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_01.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "fc9d5c627c4a062c1703d86161a037199a04779f9be0d6cd97cc0c30ce1379ad",
        "deprecatedHashes": [
          "11861c6a3e8b84c976fd43181d19a44223dc05f8083ea9aa267a151eac5d8747",
          "64a9415b3ee043ba1de5fc23ac8f4c6c49586e2541a579d21a4adc733a80dd88"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527634+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a632920-54ff-4107-b71e-7b2fe6cd7bb1",
        "line": "117",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_45.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2e259d1c0873aa44eb93f19a82dedf7e9cb8df780683b44a90e209b4f87b1909",
        "deprecatedHashes": [
          "31b5217f2d2507b3cd9e665fa57b0264295a3c6b2d77e79a2665aee60dd415aa",
          "d32f4110ef86d7bab093f65e5235937cd9bf5452b5abd518011efd0a445800b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527644+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "23ed011e-ab4a-4c11-87d7-ad4f568f5a2a",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_73a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "20c71badcf93552ad7194039239c13c1f4bf6204ad0169d3735ac287956fb01e",
        "deprecatedHashes": [
          "eb1aaa252c3b96b664d64e46c0c4f74aa6df7f43bfbe0bd4fe9af3c9383fd07d",
          "597fa604945f939a086bab6e2b3131e42694f28da8aa66e42a8c8a476c4a157f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52765+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "10d529c0-6d4b-4eef-b469-9298a6872d7c",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_73a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "80fa615eac5bb2494de1812213810ecf77c2b29a87e690302478a2ec57026ac6",
        "deprecatedHashes": [
          "dbaeb090c88c1cbf9dc7defdd737dbe7a308cd1b18562155234e7bc462933ffb",
          "8886bf1948c478f67933d41a543978f4a96e53a53dc90449178f2e8cbc40d6a7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527663+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ce8cb4a5-71fb-4ace-8498-646461901ead",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_09.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "d5f21b700f6ac623ecea3e2ef39d172ccdda26efdc400eafbf6ff714c4ee9b5f",
        "deprecatedHashes": [
          "33decdc9c30c92ca9da1e2a57505699b0a7ab537b2fbe891ac8c24bc370dd7e5",
          "bc5b329e53eea667473cc9edbfbbcb72a67190a9f82345d82c2aab07d7ada36e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527667+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "d3aa2e96-317d-4171-b870-fcb88f48b2f4",
        "line": "112",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_41.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "26163d0510ad83a5f3a81450ce1b3daa049bd9915a2cd5a625aa818dc684d00a",
        "deprecatedHashes": [
          "45ee82b024e8d27134a86e7cb6d0965d55f04b525ceabe560421a75af77bc289",
          "00bb2e858cd8696374eb531dbd01d8b03f22fbcecf913f5ed79c63c2f53d332e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527676+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a19e0525-4665-41ff-b556-e82be8c5bd22",
        "line": "47",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_66a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2b011d1e36999175476068380d647668e844b91368c11dfaad191441783f014c",
        "deprecatedHashes": [
          "c45e0e671d04cb9e08d7de3b6f9a00abcc6ee7570efdf1e653c6aba91068523e",
          "e0156a73ea7e6a2dac1535a9f52aa218a4a3a85dc3c6d104bc30f8f1f78c20be"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527681+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a8bae431-1bb9-499d-99e5-7b0379fe4268",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_03.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "9361d3ff062faaaa6bab401a00fbfcb84eff1f1801d320b8f656f8b3ae94ae8f",
        "deprecatedHashes": [
          "f0ea6610638f65826fe23e45ffd810583c4920ae058c6702bbac1b07702009e2",
          "a5ade40df2d58108c71bc46843cbe172111c5ff37b2825c9695ca7d6ac58079f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527698+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bfb6a4e4-cbb8-4b33-beb8-df40e5956a73",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_42.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4009e9164451fe6c416a88fe82aa8b1467008deecb1e640b67900579126e686d",
        "deprecatedHashes": [
          "8092a9bffc41837c2fb555eac81344784def2d2774b4e5b5e29e5131b76a84e9",
          "91aa32c0f635d4f3f5944a2e01facb79a696638607c8acfe1746af5acfb8cee1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.5277+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d4d1f7f-e859-4716-b4e8-37b7c02bbbab",
        "line": "51",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_15.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "24b805241c157431e65eebe15cbba0c06ef196788fba598596c1a5769c22bced",
        "deprecatedHashes": [
          "fae61e876a4c9e455e8ec2afc9b6068800ffcf06a29cdbe1b64f457f724b2ed8",
          "55060b49432a9121904f60d8c3446a3d5c10565d0e5581e50df7e93df3d54000"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527705+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bc79cae6-dd58-4f61-857e-4e005c66d825",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_12.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1343f039b130cbb0a660f86bc79bdb278cb194b0cceacbc0111c96857b0b48a8",
        "deprecatedHashes": [
          "d8c203e14fb3c814bec05f9ac997143b1dcb1e7d94e6c220d1b9f954ecd720cd",
          "e0e7bd9c7d57a87ef7c46c8cd86dcc91b8cbcaff97bc7ee83ef3514e037573c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527711+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "353d10d7-a554-4d2b-a63b-fd275218902a",
        "line": "50",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_16.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2846103df828a7c00e65b8426644bf6a63893f5d950091cac6768ef6326ee7c8",
        "deprecatedHashes": [
          "40f43dff98bad0ef0f399c060ae67290ab21c303831d003dbb27221e80cb0abc",
          "d008947c5583a2c86bef3f7032ecef878bdb1ff4a32cef812bbe7f7c8261c330"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527719+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cb1c91ab-d960-48fc-b6cf-0c414026cad1",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_11.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "1126fe1a576ad8d04b412b13072000596814f74888116ff347407c87e49081f7",
        "deprecatedHashes": [
          "29aeef3581a5aa9cd211349be641d9a300f626144b23cca738f6c41e65762ce3",
          "3f223ccf108a6b39806f3aee4119216281c1c61a7f5cf6a969be0e4a5b448b68"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527721+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ef27a7c2-25fa-4354-8da6-4172e8989f32",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_06.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "6c71dffd270812056e19dd4659ea880fa250022c080c4d8a5d9ec6560b5aedc6",
        "deprecatedHashes": [
          "fc0b70cb55b2b67e7f3b4c3bbe87f8533d2e38c80e6d294abf7b1d0e71715050",
          "c8e2c162157b32bff02b67008453143b0d0bb89379f2d827796195c7c531e2f3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52773+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2f5b82cf-64dc-4287-ab78-752bc1495053",
        "line": "48",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_72a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "06dfd68a441857ccd518bf4894b24960ade41de95aeb6390805bea90a7b92051",
        "deprecatedHashes": [
          "e1608bb8a298e0711b7eb80fcb07d1f52f33d133d0191ab98ac234e01714d969",
          "30ac8c758bcb06362e7a8ea5ddb15814b998315135e01aad1468eb6a23d34242"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527732+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c46fca52-4e1c-4e66-9d3b-087b47e3698b",
        "line": "52",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_31.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c19c4bcefd837a853fec6b8903e2a0710a9b025df53e251d4c94859859e07ee9",
        "deprecatedHashes": [
          "c5ed8155a2647a016057eb2697748ef8a65634d8b99d9fff842df63ff64cbe16",
          "ae7fe96f043f259d9dbf97a52875403918992722b73b253a97713ee958ff81ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527737+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c118c7b4-5b7d-4b5e-8e47-d57e139b5705",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_11.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "322b1b5563081fcc5004c3991cf2908df36624c59f6332d2b5633bdba1d77da6",
        "deprecatedHashes": [
          "b9e07aad4754f694b34be28d766994f28acc21bb0bfa8352269ab1c1da3f5cf0",
          "83b333e1a6d5dec3e0ebda8a7849ac5e50620a7477d1ac03cd77db57122f506e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527749+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "285fb32b-4f03-47fc-b51a-c3227229f673",
        "line": "51",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_22a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "5ffa64866f584f5fae6951b07e5f680c20d2bac283ac0ef6c428c8718ddc93a9",
        "deprecatedHashes": [
          "84b5f0fca5f03eb929364c42f666a200057b90d95244191259c7eb5515fc6b4a",
          "d773545be8bcfd742ab9b4942c13341196c77e2d88199587894cce1934fb6038"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.52775+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "e85bb7cb-6cdc-4ccf-8f6a-244826a1809b",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_13.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "641cadc6e36fe35789af1e6ecb60d8f705f28f3c9f18d63cd43177365210b07b",
        "deprecatedHashes": [
          "ecc8186d885f26ee4f7545d73cc6360cd4f2ce19f766d3e74661c346a6a8e8a3",
          "78d71dea964298a45f7b8e775893e398848ecbfb59a37bb687d6ba189db716c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527768+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7220fd04-c385-441d-bd1b-0696af3798e3",
        "line": "62",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_08.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "119854c85c7edc99231a5ed267a2c0ac17e1080d2c11c434d8dc92b796919c5e",
        "deprecatedHashes": [
          "4746bd27c33b5a5c4c89e235e3268a067895e33586a3b4481f11fdc39f76d9f0",
          "187d5a7e2141f74022f03aefe7f1ab8528d39f503d09f4cf5b2447096f6dba45"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527774+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "497d996a-3fcf-47cb-88a6-76584843c4ae",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_03.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b86abde62de35b0baf79a40a012e50bcfeccbd96603c4a1c3434f63e19989a9f",
        "deprecatedHashes": [
          "75f3b2905723997bdbedef14dec9e37f53cdb3265740a9e15994a69c225f388a",
          "26ee63095ea4f1fe7eca3abbf40ef6b15984f8e9a2d1ffe8658cf08a9453169b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527777+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e1b4425-c39d-4cf4-96f1-794fbf11f063",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_75a.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "031e2ac574477030215c7f8b14c72be28984c9b909a456d4ab5c2a3601a9c7cf",
        "deprecatedHashes": [
          "0e9b73fb2d7aa12b227177892b26d66fcd5c4b3a4a6dfef41d457c6ae47afeea",
          "f59decc2fb72fb4eec0ed77a4213bff89e9dc78781ab5ad8da4764415083053c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527792+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b1aa609c-1106-4e40-bd28-aac920b7baa3",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_10.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2a6bda1be6e8d2b0372d08abf5d3279ab7b1916f926b20929d19d81ba762951c",
        "deprecatedHashes": [
          "c2973f351a6f3dfe2db1fa4bce456d15c6cc6df99c295c2d0abe58c8d8bacec2",
          "e27b7b551a324e60ae258356c165d7a04f6d567a362a4af3dac4608f89839f7b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527793+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ca549f1-bdb2-4b29-a85a-0c8c74cb1281",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_06.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8ba50b5336d9cb545be440ffc6c2aff5d61dbd4c4b1e48a5653b6c264d520962",
        "deprecatedHashes": [
          "99939d605272650dc8785010fe6594327e0d46fca93d3c900ab5e4566ff1dcc4",
          "06addff5f1e0d4d64609230e36addab2f14a2e2ee1ed0dce0444cec6cb10c39d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527798+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "97dcee89-b9d5-4a19-94fb-9aed0050d799",
        "line": "53",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_21.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2b8231ae9d8520b44832b4ef9d82cdfbf61fa84c4248940a6634949aaf77358b",
        "deprecatedHashes": [
          "903476d9b1e0810b60556e52a663daeb61b9df0b8d13edb6b4ee198b46f1ca18",
          "34d1efcb24b83bbe6ed5bd257fc2b785a889ac3200ea61b681a51d93baf85296"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527801+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "a6b6731d-9898-45f5-bf56-8a1d5bb6afb5",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_10.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c6c604fda5ce7fdef3bde96cf738a25e7f3cd1678652fa38379e57885a493508",
        "deprecatedHashes": [
          "65c9ca0931a2e54c6eaa6fa8dbcdcbf2d05bc8fc86a9ab8d5724f6f255bc2df9",
          "c49e6150dfd7d7ac9a08769309c726ca229543abeec85ab62f17742edf6df7fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527813+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "74ce0843-4f9b-4aca-8b1f-349788a3021b",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_14.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "cabf47a8ab577b83626d6ce38505d4c9ee22728a924e47b6a34c47e3b6568836",
        "deprecatedHashes": [
          "5d2bacca4627ddbc575e508260a3e54f1bb5832ce7e370b8d9a0137b54c90e02",
          "a7a7c76e6a1d32b0f5fc36a7f316a313ba1306c92d8bf31455d2814caae7819e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527815+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "07a310e7-a25d-4791-9dea-15e788fa10b3",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_02.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2a620af36f38e08daa50201c62101a0adeb6647b0eb1c5da7bf6a35f3547b2b1",
        "deprecatedHashes": [
          "67aaae5da4718df8e0e1195510a1aaffe2b9848493299f9e759453f5c0aebc01",
          "2f910f5e1b9d58e885a18549f69bb9a11c112e5080380e5bc40eff55d6925121"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527817+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3a351945-e67f-44f3-922b-cf8bc8b1f512",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_10.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "7f31968d3b7362f4a83011bfe8e0fd58dc4599fe60d431d5a081d12465155a88",
        "deprecatedHashes": [
          "39b63d744f9e87ae66b0ecbdcedf54932ae4329c4d8b3bf0de9a7b399207f6c5",
          "8d911f2b63875f9ec4b24e22c7903e594fe611409bd60d9617ad15a62398b522"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527818+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "aa88eded-5a9e-49b8-9931-674b5654e454",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_06.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0c1b7db8ee67c32016655157752e85315746265ec652aaa666af1cb22973f8a1",
        "deprecatedHashes": [
          "dee043d777b9385e6db11f453ccfacd3b8c833b8f6901a6af30fb931e5e4d1b4",
          "6de55452e1dea0abc27b2f4151bdeac640f08d1a1ee1135e9b777910d2949275"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527827+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "2375c621-7772-4528-9a46-331356972828",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_42.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "68206cb47d958848508890fdd24e3aa861738dc05dae041ea2872dad44621039",
        "deprecatedHashes": [
          "262a6e3f7070d1a230c4fbab4e8aff08af7aa88b26bcc026c9b76e57a692c160",
          "de233eab320e16a82558b8640fb03405a8684fd8eeb7f173d903c971da9c7ee4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527832+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "54bae02c-c223-4c35-8c02-7aba7559df0b",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_12.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "be3d7d751dd7d700e72319cb938377f869c25cde9238201baa4e22917974e1c9",
        "deprecatedHashes": [
          "246da8a9e263215d0c9549f10a3ea1b589bd4439fc9e95edd855d0f030bcd009",
          "d2da0e73465341fe2b287c5649f896ce3e80233a26b30f0ffe76737f21bf0052"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527846+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "c8f9eca5-180a-4094-b1a4-2a1c6306e4a1",
        "line": "55",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_17.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "e57a99fd707fb917c87dd98b99984afcd03183aeb447cf2823678b8ea6484014",
        "deprecatedHashes": [
          "987f69a7c428cca1b300d2f3f90ca8acdd6667c5911034e7c55a48eea5c791ef",
          "cad5b051aba3685a806040ac7d8cb31dfc8eb7f551a5a0a68132f812e8e87476"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527861+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b4e0d18c-1bee-4583-8f0a-9eee6af19864",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_14.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "b4bfeaaa0b7080c5aa6956b4b9bc58d9c4ade46a63ed4a2525bf03a260810b24",
        "deprecatedHashes": [
          "0d3dc05c0871cb9ff77063c65bed6467e46d7ebb5d51e30bea3aa03f4a02f0bc",
          "241e6da30bbf133a9f16c3d46c80c319bf4cfebdc7e14c987884245a1932f7b4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527864+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "bd60647d-429b-435c-bb22-a7ac32d5af6e",
        "line": "50",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_42.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "074038f45f2a362d2eb3a251a04da1aefc144740907fe80b17fb498966b7083c",
        "deprecatedHashes": [
          "116952f70012cc7c839ac74df5177315d5d630554809cb4ff35e7df8ef4c8508",
          "707bbf23b1dd140139b70443a4202251680585974a8cbfe126a35088c43c55d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527865+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b241f8f0-5824-4bb2-bcd3-d5ec4b19b9d6",
        "line": "52",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_31.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ae5e2fea29a776767568fe71a263a713f588090d25ec2a413d7e90bc0d298e19",
        "deprecatedHashes": [
          "c62d08e056c502d566fb0c5d881eb8bccb946c121cf653fbd86fdc17be546ebf",
          "5579bd127b020dff703968492b27417a136e39399366a0c57d8b3178c6e5d8e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527872+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "1f59a8a2-d957-4e04-800a-749a1ca0d762",
        "line": "62",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_08.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "debf37077451c72ee51f13b4852b970c8529ca58098a7a147a1cb50140ca878b",
        "deprecatedHashes": [
          "18f23a9c6d5a70548d0ce6cf7502aa201fb7d96f02e3f6a7193514de928a9c66",
          "58a8a6cd475a40a61dc0d480d268d7a54fdd4ca769abd4c7cfd85b79189a57e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527875+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "eacc225e-7cfb-458e-984a-8dbe36a895ec",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_13.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "df44ef7ec86a78d737ee18f1b9a95345263636b5a59e38342cbbe17dbf1c2b6d",
        "deprecatedHashes": [
          "9a7bf274422cb2ee938fa080b5b5b9ae931fe46bad4b3cef8d0d9144304fd08d",
          "70c3195be7d30150b0bd35af707b60669139906f9171c51169042096bddd4cd3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527877+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ec88719d-76b1-447d-a701-36a2f7fd4b7e",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_05.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "75dd4707d05feeb539abafbafa0d6de40ab4ddf6c586535f07b20a95acca378b",
        "deprecatedHashes": [
          "2b04f67245277fadbcb1a711353dc7323412b6e221811c198411915551d31817",
          "42850889f892e8fb2af618a54d5823ca3248571bd4744798d8adf390e756a51f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527878+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "cb50a7d1-1421-4418-ad69-5a55552aba28",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_12.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "ff612088a2a82fa41d359441a31bab5db66ee847299bb31249122abcedcd26bd",
        "deprecatedHashes": [
          "6e955db04777f61e23cf9eeeabc59930a908fbbc2037567da33c9a4aa820c528",
          "1f69b4904ecca4329d7fd29e4ece7cd017b32dfd129ced14b14e1710569e28c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527895+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "62588bcc-999f-4949-ab44-3adb3337c6b4",
        "line": "53",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_21.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "83ddaedc5947f636effb194dcaa6b5127a551e798f930a92a6ae537518d71357",
        "deprecatedHashes": [
          "61960f5f894060e5a52bdd6f943f86c51dd5179da20d43deae2ba06dbbd4ee95",
          "2a139f4e42e06b3153f7981c3b883efe2ccb92a8bd185b12d0ab30d783b6988e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527897+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "b3e224c2-cb87-43ef-8b0a-11aa1bd1893a",
        "line": "54",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeUpdate_07.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "fdf7a91144fe8e73edd02b4fe61456ecbd48472d62fbb1d0d73ea2b55a65feae",
        "deprecatedHashes": [
          "0486476f75c0b0c1961c6f35f3fbb30107777dbea26d16dea2892f80c1df4ccc",
          "24c8daafe5b5edcf296db340a6a4114cc5bf4627b5a5aa46981ad815d43cfe99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527908+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "ac30ae54-3a1a-443d-83a0-e8cae8f83844",
        "line": "51",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_15.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "dbcdff09c41bc17b858483d566c9b92241e76f3d30e2fc9a751e7257e9de5a70",
        "deprecatedHashes": [
          "e749cb25c58ee4119fa9a45e84c6dc7a8253483d277fa650eb2a20de9acde045",
          "320e1b102965d18b1d3cf4ca3c9c7807d5ea6f403e4c6754e1a423322f5fa606"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527909+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d060c22-00a4-4d0c-a7cc-2bc847a7287e",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_13.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "4a64d17351246dcc437dc4d284c734b74eef0d7377804a55959c977aab095ff1",
        "deprecatedHashes": [
          "ed18f73fa846faf24f7cc1377b182bd60fc911f1915e3b7cee998d04ebe60578",
          "891649f4f6feb7fcb32701c1435a9366feb638431c05bcbbabdc82e1d11cd0fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527911+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "870914d2-dcb3-4140-9b9f-adf8de5a5a3f",
        "line": "53",
        "column": "25",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_21.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0b80a39b7c1ef976fc7416235a974c6ed7167d131aac881ef5c2376c40308006",
        "deprecatedHashes": [
          "807b44b630ad9cf05320f424f9cfd300000c67aad464728ed1804108a24cfd35",
          "d4911a7f8afaa9d27d8859e5149c296d55dda4e6fcd5ac9691b2dc890440a084"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527913+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "f1a968e1-eee6-4c84-b832-00d5fc527b04",
        "line": "49",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_02.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8268e8e0d8152624844f08bc5a5ea394abad7d3a16626edfc3c149e6c7c6d14a",
        "deprecatedHashes": [
          "b935c7d61c973ba2faa92bd7bca4bed906c5a1fe6d8226fe58cb08e8221cb49a",
          "4eac0d77ff9f3ee83e0e2266105ec91b979107f07af640f1123501d1deaef24c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527922+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4695c51d-3442-4377-82ff-8bef059b4331",
        "line": "56",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeBatch_05.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "8b0465c5a941936775954843649125ed775ce51fcee0893ab52ff549e36016c8",
        "deprecatedHashes": [
          "94d08914f4087d5df996aff149b65ff1b4be23dbe28a46a512a98b5376608932",
          "daed49b608eca20ff09257e83a412dc56a58fb5499ff4f7ebe8d634968526d71"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527927+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc76af45-8e6e-42cf-801f-aec7a5066e30",
        "line": "51",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_execute_15.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "c515b9c1eeb103ccf7d2f2b7e966527a60073d69d4459cf4da6e37b01578ee5e",
        "deprecatedHashes": [
          "4293cbcb2569d4993d6f425ef712c90cedddb994c34491ee2f3ca701faf773e7",
          "fad917325a4eb95b3a79551adfd5154973830fa2ff2f3d93c00a912481c7d990"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527929+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "7d7edc7f-9276-4ef0-afe4-725cab2fec1c",
        "line": "51",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_executeQuery_15.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "0f72dd11081025b17aa850bc583a801cd477a9f72719f577f5e1d7d136acd1f4",
        "deprecatedHashes": [
          "4aedac5fbb258ccf4cb118d3fb8282bb78ffa11884f7248592db9b65041b3951",
          "7f75537e32692273bdcddf29cd91b53aa4af5bc5c2d64326ac1da5c40d1ac160"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "8eda97db-bfb5-4d3e-b9da-50180c3d8bf7",
      "createdAt": "2024-02-21T20:18:31.527936+01:00",
      "vulnerabilities": {
        "vulnerabilityID": "4686a5d0-0d66-4d97-a7be-42dc35d14078",
        "line": "62",
        "column": "29",
        "confidence": "LOW",
        "file": "CWE89_SQL_Injection__connect_tcp_prepareStatement_08.java",
        "code": "socket = new Socket(\"host.example.org\", 39544);",
        "details": "(1/1) * Possible vulnerability detected: TCP Socket\nTCP Socket",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVA-41",
        "vulnHash": "2fd2e7768404c67b7b7da2d53a295f4982b8e0abbbf970a179ba17d7cd8da017",
        "deprecatedHashes": [
          "a92366a8c2d1f6c0d3300639b330b8a2a8445ca07dc6ef95d28dc866bd5c3ec4",
          "1b593f865e343f1f4db987f31836eec15a6e430ba5daffe3324f8cd0a93453b5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    }
  ]
}